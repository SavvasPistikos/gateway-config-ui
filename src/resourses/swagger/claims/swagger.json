{
  "swagger" : "2.0",
  "info" : {
    "description" : "The API documentation of L10 Claims Adaptor service",
    "version" : "1.0.0",
    "title" : "Claims Adaptor",
    "contact" : {
      "name" : "users@cxf.apache.org"
    }
  },
  "basePath" : "/api/v1.0",
  "tags" : [ {
    "name" : "Cheques"
  }, {
    "name" : "Claims"
  }, {
    "name" : "Claimants"
  }, {
    "name" : "Unclaimed scratch prizes"
  } ],
  "paths" : {
    "/cheques/{chequeRegisterId}" : {
      "get" : {
        "tags" : [ "Cheques" ],
        "summary" : "Retrieve a cheque",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|",
        "operationId" : "getCheque",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "chequeRegisterId",
          "in" : "path",
          "description" : "The cheque registerId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Cheque data object"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/cheques" : {
      "post" : {
        "tags" : [ "Cheques" ],
        "summary" : "Request a cheque",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|400|\t 26  |\tValidation Error                 |\n|400|\t 29  |\tInvalid Json                 |\n|",
        "operationId" : "registerCheque",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The Cheque Registration Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Cheque registration request"
          }
        }, {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Cheque register data object"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/claims/w2g" : {
      "post" : {
        "tags" : [ "Claims" ],
        "summary" : "Creates a new w2g form for a player.",
        "description" : "Creates a new W2G form for this bet id\n\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10058  |\tBet id not found                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 35  |\tRest Client Connection Read Timeout Error                 |\n|500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|500|\t 51  |\tTimeout occurred       \t\t          |\n|",
        "operationId" : "registerPlayerW2g",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Guid",
          "in" : "header",
          "description" : "The guid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The player details",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlayerW2gRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "Validation Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "Application Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "Bad Gateway"
          },
          "503" : {
            "description" : "Service Unavailable"
          }
        }
      }
    },
    "/claims" : {
      "post" : {
        "tags" : [ "Claims" ],
        "summary" : "Register a new claim",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 10051  |\tSerial number already claimed                 |\n|  500|\t 10052  |\tClaimant not found                 |\n|  500|\t 10053  |\tError in CS                 |\n|  500|\t 10054  |\tTicket not valid for claim                 |\n|500|\t 25  |\tSystem Error                 |\n| 400|\t 26  |\tValidation Error                 |\n|400|\t 29  |\tInvalid Json                 |\n|",
        "operationId" : "registerClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The Claim Registration Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Claim registration request"
          }
        }, {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Claim data object"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/claims/{id}" : {
      "get" : {
        "tags" : [ "Claims" ],
        "summary" : "Retrieve a claim",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|",
        "operationId" : "getClaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Claim data object"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/claimants/claims/{guid}" : {
      "delete" : {
        "tags" : [ "Claimants" ],
        "summary" : "Cancels a claim of a player",
        "description" : "Reverse all taxes, child support and fines possibly deducted on BOS using GUID\n\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 10057  |\tGuid not found                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 35  |\tRest Client Connection Read Timeout Error                 |\n|500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|500|\t 51  |\tTimeout occurred       \t\t          |\n|",
        "operationId" : "cancelPlayerClaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "The claim transaction guid, is used to cancel the transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Validation Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "Application Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "Bad Gateway"
          },
          "503" : {
            "description" : "Service Unavailable"
          }
        }
      }
    },
    "/claimants/claims" : {
      "post" : {
        "tags" : [ "Claimants" ],
        "summary" : "Creates a new claim and performs tax deduction for a player.",
        "description" : "Calculates the federal tax, district tax, fines, child support amounts and deducts player's fines and child support baskets on BOS.\n\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 10055  |\tAlready claimed                 |\n| 500|\t 10056  |\tBet id already exists                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 35  |\tRest Client Connection Read Timeout Error                 |\n|500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|500|\t 51  |\tTimeout occurred       \t\t          |\n|",
        "operationId" : "createPlayerClaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Guid",
          "in" : "header",
          "description" : "The guid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The player and ticket details",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlayerClaimRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/TaxDeductionDetailsResponse"
            }
          },
          "400" : {
            "description" : "Validation Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "Application Error",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "Bad Gateway"
          },
          "503" : {
            "description" : "Service Unavailable"
          }
        }
      }
    },
    "/claimants" : {
      "post" : {
        "tags" : [ "Claimants" ],
        "summary" : "Register a new claimant",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|400|\t 26  |\tValidation Error                 |\n|400|\t 29  |\tInvalid Json                 |\n|",
        "operationId" : "registerClaimant",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The Claimant Registration Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Claimant registration request"
          }
        }, {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Claimant data object"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/unclaimed-prizes/scratch" : {
      "get" : {
        "tags" : [ "Unclaimed scratch prizes" ],
        "summary" : "Retrieve unclaimed scratch prizes",
        "description" : "\n Possible error codes:\n\n| *HTTP*| *Code*|                *Description*                             |\n|-------|-------|----------------------------------------------------------|\n|500|\t 10050  |\tSQL Error                 |\n| 500|\t 25  |\tSystem Error                 |\n| 500|\t 36  |\tRest Client Connection Timeout Error                 |\n|500|\t 37  |\tRest Client Unable to Connect                 |\n|500|\t 39  |\tRest Client System Error                 |\n|",
        "operationId" : "getUnclaimedScratchPrizes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Guid",
          "in" : "header",
          "description" : "Unique request GUID identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UnclaimedScratchPrizes"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Cheque data object" : {
      "type" : "object",
      "required" : [ "chequeId" ],
      "properties" : {
        "chequeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Cheque id. That is the cheque number."
        },
        "chequeStatus" : {
          "type" : "string",
          "description" : "‘Open’: That is the cheque initial status. A cheque holds that status even after the cheque is created. In order to identify if a cheque is created you should check if the chequeId property has a value.\n ‘Failed’: That status corresponds to the case that there is a paper jam in the cheque printing or some other unrecoverable error. In that case a cheque reissue should be performed by Lottery personnel.\n"
        }
      }
    },
    "FaultInfo" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The error code"
        },
        "message" : {
          "type" : "string",
          "description" : "The error message"
        },
        "data" : {
          "type" : "array",
          "description" : "The error data which is an abstract object that may be used to provide any error metadata",
          "items" : {
            "type" : "object"
          }
        },
        "source" : {
          "type" : "string",
          "description" : "The application at which the API error occured"
        },
        "type" : {
          "type" : "string",
          "description" : "The error family, e.g. RUNTIME, VALIDATION, etc"
        },
        "guid" : {
          "type" : "string",
          "description" : "The unique identifier of the error process"
        }
      },
      "description" : "The FaultInfo object contains all the details assosiated with an API error"
    },
    "Cheque register data object" : {
      "type" : "object",
      "required" : [ "chequeAmount", "chequeRegisterId", "claimantId" ],
      "properties" : {
        "chequeAmount" : {
          "type" : "number",
          "description" : "Cheque amount"
        },
        "chequeRegisterId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Cheque register id"
        },
        "claimantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Claimant id"
        },
        "chequeRequestTime" : {
          "type" : "string",
          "description" : "Cheque request time in ISO 8601 format"
        }
      }
    },
    "Cheque registration request" : {
      "type" : "object",
      "required" : [ "chequeAmount", "claimantId" ],
      "properties" : {
        "chequeAmount" : {
          "type" : "number",
          "description" : "Cheque amount"
        },
        "claimantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Claimant id"
        }
      }
    },
    "PlayerW2gRequest" : {
      "type" : "object",
      "required" : [ "betId" ],
      "properties" : {
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The bet id"
        }
      },
      "description" : "The player w2g form details"
    },
    "Claim data object" : {
      "type" : "object",
      "properties" : {
        "deductions" : {
          "type" : "array",
          "description" : "Deductions",
          "items" : {
            "$ref" : "#/definitions/Claimant deduction model"
          }
        },
        "details" : {
          "type" : "array",
          "description" : "Details",
          "items" : {
            "$ref" : "#/definitions/Claim details model"
          }
        }
      }
    },
    "Claim details model" : {
      "type" : "object",
      "required" : [ "claimId", "grossAmount" ],
      "properties" : {
        "claimId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Claim id"
        },
        "grossAmount" : {
          "type" : "number",
          "description" : "Claim gross amount"
        },
        "createTime" : {
          "type" : "string",
          "description" : "Claim creation time in ISO 8601 format"
        },
        "status" : {
          "type" : "string",
          "description" : "Hold: That is the initial status of the claim once the claim is registered in the system, Closed: The claim is closed after a cheque is created",
          "enum" : [ "Hold", "Closed" ]
        },
        "chequeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Cheque id. That is the cheque number or warrant number depending on the case"
        }
      }
    },
    "Claimant deduction model" : {
      "type" : "object",
      "required" : [ "claimantId", "deductionAmount", "deductionType", "installmentNo" ],
      "properties" : {
        "claimantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Claimant id"
        },
        "deductionAmount" : {
          "type" : "number",
          "description" : "Deduction amount"
        },
        "deductionType" : {
          "type" : "string",
          "description" : "'StateTax', 'FederalTax', 'ChildSupport', 'TaxLien', 'Merchandise', 'Others'"
        },
        "installmentNo" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Installment number"
        },
        "paidOn" : {
          "type" : "string",
          "description" : "Payment date"
        }
      }
    },
    "Claim registration request" : {
      "type" : "object",
      "required" : [ "claimants", "serialNumber", "winningDraw" ],
      "properties" : {
        "serialNumber" : {
          "type" : "string",
          "description" : "Wager serial number for which the claim is performed"
        },
        "winningDraw" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Winning draw for which the claim is performed"
        },
        "claimants" : {
          "type" : "array",
          "description" : "Array of claimant id’s",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        }
      }
    },
    "TaxDeductionDetailsResponse" : {
      "type" : "object",
      "properties" : {
        "federalTax" : {
          "type" : "number",
          "description" : "Federal tax amount"
        },
        "districtTax" : {
          "type" : "number",
          "description" : "District tax amount"
        },
        "finesAmount" : {
          "type" : "number",
          "description" : "Fines amount"
        },
        "childSupportAmount" : {
          "type" : "number",
          "description" : "Child support amount"
        }
      },
      "description" : "The deduction details calculated by BOS"
    },
    "AddressBook" : {
      "type" : "object",
      "required" : [ "city", "countryISO", "postCode", "state", "streetName", "streetNumber" ],
      "properties" : {
        "city" : {
          "type" : "string",
          "description" : "The city"
        },
        "countryISO" : {
          "type" : "string",
          "description" : "The country ISO code"
        },
        "postCode" : {
          "type" : "string",
          "description" : "The post code"
        },
        "streetName" : {
          "type" : "string",
          "description" : "The street name"
        },
        "state" : {
          "type" : "string",
          "description" : "The state"
        },
        "streetNumber" : {
          "type" : "string",
          "description" : "The street number"
        }
      }
    },
    "PlayerClaimRequest" : {
      "type" : "object",
      "required" : [ "betId", "gross", "player", "refund", "stake" ],
      "properties" : {
        "player" : {
          "description" : "The player details",
          "$ref" : "#/definitions/PlayerDTO"
        },
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The bet id"
        },
        "stake" : {
          "type" : "number",
          "description" : "The stake amount"
        },
        "gross" : {
          "type" : "number",
          "description" : "The gross amount"
        },
        "refund" : {
          "type" : "number",
          "description" : "The refund amount"
        }
      },
      "description" : "The deduction details calculated by BOS"
    },
    "PlayerDTO" : {
      "type" : "object",
      "required" : [ "addressbook", "dateOfBirth", "firstName", "lastName", "playerId", "ssn" ],
      "properties" : {
        "playerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The player id"
        },
        "firstName" : {
          "type" : "string",
          "description" : "The first name of the player"
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of the player"
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "The birth date of the player(YYYY-MM-DD)"
        },
        "ssn" : {
          "type" : "string",
          "description" : "The last 4 digit of the SSN"
        },
        "addressbook" : {
          "description" : "The Address details",
          "$ref" : "#/definitions/AddressBook"
        }
      },
      "description" : "The player details"
    },
    "Claimant data object" : {
      "type" : "object",
      "required" : [ "address1", "city", "claimantId", "dateOfBirth", "firstName", "lastName", "playerId", "postalCode", "state" ],
      "properties" : {
        "claimantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Claimant id"
        },
        "address1" : {
          "type" : "string",
          "description" : "Address 1"
        },
        "address2" : {
          "type" : "string",
          "description" : "Address 2"
        },
        "city" : {
          "type" : "string",
          "description" : "City"
        },
        "playerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Player id"
        },
        "country" : {
          "type" : "string",
          "description" : "Country"
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Middle name"
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender"
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone"
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Postal code"
        },
        "prefix" : {
          "type" : "string",
          "description" : "'Mr', 'Mrs', 'Master', 'Miss', 'Sr', 'Jr'"
        },
        "state" : {
          "type" : "string",
          "description" : "State"
        },
        "suffix" : {
          "type" : "string",
          "description" : "'Mr', 'Mrs', 'Master', 'Miss', 'Sr', 'Jr'"
        },
        "email" : {
          "type" : "string",
          "description" : "Email"
        }
      }
    },
    "Claimant registration request" : {
      "type" : "object",
      "required" : [ "address1", "city", "dateOfBirth", "firstName", "lastName", "playerId", "postalCode", "state" ],
      "properties" : {
        "address1" : {
          "type" : "string",
          "description" : "Address 1"
        },
        "address2" : {
          "type" : "string",
          "description" : "Address 2"
        },
        "city" : {
          "type" : "string",
          "description" : "City"
        },
        "playerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Player id"
        },
        "country" : {
          "type" : "string",
          "description" : "Two-letter Country Code",
          "minLength" : 2,
          "maxLength" : 2
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "Date of birth in format yyyy-[m]m-[d]d",
          "pattern" : "[0-9]{4}-[0-1][0-9]-[0-3][0-9]"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Middle name"
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender",
          "enum" : [ "0", "1", "2" ]
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone"
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Postal code"
        },
        "prefix" : {
          "type" : "string",
          "description" : "'Mr', 'Mrs', 'Master', 'Miss', 'Sr', 'Jr'"
        },
        "state" : {
          "type" : "string",
          "description" : "State"
        },
        "suffix" : {
          "type" : "string",
          "description" : "'Mr', 'Mrs', 'Master', 'Miss', 'Sr', 'Jr'"
        },
        "email" : {
          "type" : "string",
          "description" : "Email"
        }
      }
    },
    "UnclaimedScratchPrize" : {
      "type" : "object",
      "properties" : {
        "prizeAmount" : {
          "type" : "number",
          "description" : "Winning prize amount"
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total prizes"
        },
        "unclaimed" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unclaimed prizes"
        }
      }
    },
    "UnclaimedScratchPrizes" : {
      "type" : "object",
      "properties" : {
        "gameName" : {
          "type" : "string",
          "description" : "Scratch game name"
        },
        "gameNumber" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Scratch game number"
        },
        "gameActive" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Active period of game in weeks"
        },
        "gamePrice" : {
          "type" : "number",
          "description" : "Scratch game price"
        },
        "topPrizes" : {
          "type" : "array",
          "description" : "Array of top prizes",
          "items" : {
            "$ref" : "#/definitions/UnclaimedScratchPrize"
          }
        }
      }
    }
  }
}