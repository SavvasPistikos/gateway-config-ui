{
	"swagger": "2.0",
	"info": {
		"description": "API specification",
		"version": "1.0",
		"title": "igms-service"
	},
	"tags": [
		{
			"name": "Instant Games - Configuration API"
		},
		{
			"name": "Instant Games - Games API"
		},
		{
			"name": "Instant Games - Order API"
		},
		{
			"name": "Instant Games - Order Status API"
		},
		{
			"name": "Instant Games - Pack API"
		},
		{
			"name": "Instant Games - Pack Status API"
		},
		{
			"name": "Instant Games - Pick and Pack API"
		},
		{
			"name": "Instant Games - Terminal Reports API"
		},
		{
			"name": "Instant Games - Returns API"
		},
		{
			"name": "Instant Games - RMS API"
		},
		{
			"name": "Instant Games - Ticket Document API"
		},
		{
			"name": "Instant Games - Ticket API"
		},
		{
			"name": "Instant Games - Ticket Status API"
		},
		{
			"name": "Instant Games - BOS API"
		},
		{
			"name": "Instant Games - File Management API / DESADV"
		},
		{
			"name": "Instant Games - File Management API / DLV"
		},
		{
			"name": "Instant Games - File Management API / INVOIC"
		},
		{
			"name": "Instant Games - File Management API / RETURN"
		},
		{
			"name": "Instant Games - File Management API / SG Interface Files"
		}
	],
	"schemes": [
		"http",
		"https"
	],
	"paths": {
		"/api/v1.0/igms/locationType": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all Location Types",
				"description": "This API call returns all Location Types.",
				"operationId": "getLocationTypes",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "LocationTypeDto",
								"$ref": "#/definitions/LocationTypeDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "LocationTypeDto",
								"$ref": "#/definitions/LocationTypeDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/orderPriority": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all Order Priorities",
				"description": "This API call returns all Order Priorities.",
				"operationId": "getOrderPriorities",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "OrderPriority",
								"$ref": "#/definitions/OrderPriority"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "OrderPriority",
								"$ref": "#/definitions/OrderPriority"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingline/{id}": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns a Packing Line",
				"description": "This API call returns a specific Packing Line.",
				"operationId": "getPackingLine",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Line Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackingLineResponseDto",
							"$ref": "#/definitions/PackingLineResponseDto"
						},
						"responseSchema": {
							"originalRef": "PackingLineResponseDto",
							"$ref": "#/definitions/PackingLineResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Updates a Packing Line",
				"description": "This API call updates a Packing Line.",
				"operationId": "updatePackingType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Line Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PackingLineDto",
							"$ref": "#/definitions/PackingLineDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Deletes a Packing Line",
				"description": "This API call deletes a Packing Line.",
				"operationId": "deletePackingLine",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Line Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingline": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all Packing Lines",
				"description": "This API call returns all Packing Lines.",
				"operationId": "getPackingLines",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "PackingLineResponseDto",
								"$ref": "#/definitions/PackingLineResponseDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "PackingLineResponseDto",
								"$ref": "#/definitions/PackingLineResponseDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Creates a Packing Line",
				"description": "This API call creates a new Packing Line.",
				"operationId": "createPackingType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PackingLineDto",
							"$ref": "#/definitions/PackingLineDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingline/search": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Search Packing Lines",
				"description": "This API call searches Packing Lines.",
				"operationId": "searchPackingLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "description"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					},
					{
						"name": "packingTypeId",
						"in": "query",
						"description": "Packing Line id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "warehouseId",
						"in": "query",
						"description": "Warehouse id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "SearchPackingLineDto",
							"$ref": "#/definitions/SearchPackingLineDto"
						},
						"responseSchema": {
							"originalRef": "SearchPackingLineDto",
							"$ref": "#/definitions/SearchPackingLineDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingtype": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all Packing Types",
				"description": "This API call returns all Packing Types.",
				"operationId": "getPackingTypes",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "PackingType",
								"$ref": "#/definitions/PackingType"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "PackingType",
								"$ref": "#/definitions/PackingType"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Creates a  Packing Type",
				"description": "This API call creates a new Packing Type.",
				"operationId": "createPackingType_1",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PackingTypeDto",
							"$ref": "#/definitions/PackingTypeDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingtype/{id}": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns a Packing Type",
				"description": "This API call returns a specific Packing Type.",
				"operationId": "getPackingType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Type Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackingType",
							"$ref": "#/definitions/PackingType"
						},
						"responseSchema": {
							"originalRef": "PackingType",
							"$ref": "#/definitions/PackingType"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Updates a Packing Type",
				"description": "This API call updates a Packing Type.",
				"operationId": "updatePackingType_1",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Type Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PackingTypeDto",
							"$ref": "#/definitions/PackingTypeDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Deletes a Packing Type",
				"description": "This API call deletes a Packing Type.",
				"operationId": "deletePackingType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Packing Type Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/packingtype/search": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Search Packing Types",
				"description": "This API call searches Packing Types.",
				"operationId": "searchPackingTypes",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "description"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "SearchPackingTypeDto",
							"$ref": "#/definitions/SearchPackingTypeDto"
						},
						"responseSchema": {
							"originalRef": "SearchPackingTypeDto",
							"$ref": "#/definitions/SearchPackingTypeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/unitType": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all Unit Types",
				"description": "This API call returns all Unit Types.",
				"operationId": "getUnitTypes",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "UnitType",
								"$ref": "#/definitions/UnitType"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "UnitType",
								"$ref": "#/definitions/UnitType"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/warehouse/search": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Searches  warehouses",
				"description": "This API call gets all warehouses based on search criteria.",
				"operationId": "getWarehouse",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "name"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					},
					{
						"name": "searchField",
						"in": "query",
						"description": "The text in search field",
						"required": false,
						"type": "string"
					},
					{
						"name": "defaultFilter",
						"in": "query",
						"description": "The default filter",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "enabledFilter",
						"in": "query",
						"description": "The enabled filter",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "SearchWarehouseDto",
							"$ref": "#/definitions/SearchWarehouseDto"
						},
						"responseSchema": {
							"originalRef": "SearchWarehouseDto",
							"$ref": "#/definitions/SearchWarehouseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/warehouse/{id}": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns a warehouse and its details",
				"description": "This API call returns a specific Warehouse.",
				"operationId": "getWarehouse_1",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Warehouse Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						},
						"responseSchema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Deletes a warehouse",
				"description": "This API call deletes a specific Warehouse.",
				"operationId": "deleteWarehouse",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Warehouse Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/warehouse": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns all warehouses",
				"description": "This API call returns all existing warehouses, active or not.",
				"operationId": "getAllWarehouses",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						},
						"responseSchema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Creates a warehouse",
				"description": "This API call creates  a new warehouse.",
				"operationId": "createWarehouse",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Updates a warehouse",
				"description": "This API call updates a warehouse.",
				"operationId": "updateWarehouse",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "WarehouseDto",
							"$ref": "#/definitions/WarehouseDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/warehouse/active": {
			"get": {
				"tags": [
					"Instant Games - Configuration API"
				],
				"summary": "Returns Active Warehouses",
				"description": "This API call returns all active warehouses.",
				"operationId": "getActiveWarehouses",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "WarehouseDto",
								"$ref": "#/definitions/WarehouseDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "WarehouseDto",
								"$ref": "#/definitions/WarehouseDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/game/{id}": {
			"get": {
				"tags": [
					"Instant Games - Games API"
				],
				"summary": "Retrieve Game details",
				"description": "",
				"operationId": "getGameDetails",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/game/gift/{productId}": {
			"get": {
				"tags": [
					"Instant Games - Games API"
				],
				"summary": "Returns Gift description for specific product",
				"description": "Returns Gift description for specific product ",
				"operationId": "getGiftDescription",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "productId",
						"in": "path",
						"description": "The id of the product.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "GiftDto",
							"$ref": "#/definitions/GiftDto"
						},
						"responseSchema": {
							"originalRef": "GiftDto",
							"$ref": "#/definitions/GiftDto"
						}
					},
					"500": {
						"description": "Unexpected Error",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/game": {
			"post": {
				"tags": [
					"Instant Games - Games API"
				],
				"summary": "Creates a Game",
				"description": "This API call creates a new Game.",
				"operationId": "createGame",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "CreateGameRequestDto",
							"$ref": "#/definitions/CreateGameRequestDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/game/active": {
			"get": {
				"tags": [
					"Instant Games - Games API"
				],
				"summary": "Returns All Active Games",
				"description": "Returns All ActiveGames",
				"operationId": "getGames",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ActiveGamesResponseDto",
							"$ref": "#/definitions/ActiveGamesResponseDto"
						},
						"responseSchema": {
							"originalRef": "ActiveGamesResponseDto",
							"$ref": "#/definitions/ActiveGamesResponseDto"
						}
					},
					"500": {
						"description": "Unexpected Error",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/create-or-update-with-details": {
			"post": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Creates or updates an Order with packs",
				"description": "This API call creates or updates an Order with packs.",
				"operationId": "createOrUpdateOrderWithPacks",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Source",
						"in": "header",
						"description": "Source of the caller",
						"required": false,
						"type": "string",
						"enum": [
							"EXTERNAL_ERP"
						]
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "OrderWithPacksDto",
							"$ref": "#/definitions/OrderWithPacksDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/{id}": {
			"get": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Retrieve order details",
				"description": "",
				"operationId": "getOrderById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Updates an Order",
				"description": "This API call updates an Order.",
				"operationId": "updateOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Source",
						"in": "header",
						"description": "Source of the caller",
						"required": false,
						"type": "string",
						"enum": [
							"API",
							"UI"
						]
					},
					{
						"name": "id",
						"in": "path",
						"description": "The Order Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "OrderDto",
							"$ref": "#/definitions/OrderDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Delete order",
				"description": "",
				"operationId": "deleteOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/iris/{id}": {
			"get": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Retrieve order details by orderId for iris",
				"description": "",
				"operationId": "getOrderIrisById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "orderId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ReceiveOrdersResponseDto",
							"$ref": "#/definitions/ReceiveOrdersResponseDto"
						},
						"responseSchema": {
							"originalRef": "ReceiveOrdersResponseDto",
							"$ref": "#/definitions/ReceiveOrdersResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/history/{orderId}": {
			"get": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Retrieve order history by orderId",
				"description": "",
				"operationId": "getOrderHistoryById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "orderId",
						"in": "path",
						"description": "orderId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "OrderHistoryDto",
								"$ref": "#/definitions/OrderHistoryDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "OrderHistoryDto",
								"$ref": "#/definitions/OrderHistoryDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/search": {
			"get": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Gets orders based on search criteria",
				"description": "This API call gets all orders based on search criteria.",
				"operationId": "searchOrders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "includeDetails",
						"in": "query",
						"description": "Include Order Details",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "orderId"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					},
					{
						"name": "fromDate",
						"in": "query",
						"description": "From Date",
						"required": false,
						"type": "string"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "To Date",
						"required": false,
						"type": "string"
					},
					{
						"name": "warehouseId",
						"in": "query",
						"description": "Warehouse Id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "retailerId",
						"in": "query",
						"description": "Retailer Ids",
						"required": false,
						"type": "string"
					},
					{
						"name": "orderId",
						"in": "query",
						"description": "Order Ids",
						"required": false,
						"type": "string"
					},
					{
						"name": "statusId",
						"in": "query",
						"description": "Status Id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "priorityId",
						"in": "query",
						"description": "Priority Id",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "SearchOrderResponseDto",
							"$ref": "#/definitions/SearchOrderResponseDto"
						},
						"responseSchema": {
							"originalRef": "SearchOrderResponseDto",
							"$ref": "#/definitions/SearchOrderResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/receive": {
			"post": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Receive order",
				"description": "",
				"operationId": "receiveOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Operator",
						"in": "header",
						"description": "The operator's id.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The id of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Source",
						"in": "header",
						"description": "Source of the caller",
						"required": false,
						"type": "string",
						"enum": [
							"API",
							"UI"
						]
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "ReceiveOrdersRequestDto",
							"$ref": "#/definitions/ReceiveOrdersRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ReceiveOrdersResponseDto",
							"$ref": "#/definitions/ReceiveOrdersResponseDto"
						},
						"responseSchema": {
							"originalRef": "ReceiveOrdersResponseDto",
							"$ref": "#/definitions/ReceiveOrdersResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order": {
			"post": {
				"tags": [
					"Instant Games - Order API"
				],
				"summary": "Creates an Order",
				"description": "This API call creates a new Order.",
				"operationId": "createOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Source",
						"in": "header",
						"description": "Source of the caller",
						"required": false,
						"type": "string",
						"enum": [
							"API",
							"UI"
						]
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "OrderDto",
							"$ref": "#/definitions/OrderDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/status/eligible/{currentOrderStatus}": {
			"get": {
				"tags": [
					"Instant Games - Order Status API"
				],
				"summary": "Retrieve list of eligible order statuses to transit based on the current status",
				"description": "",
				"operationId": "getEligibleOrderStatuses",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "currentOrderStatus",
						"in": "path",
						"description": "The current order status",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"originalRef": "OrderStatusDto",
								"$ref": "#/definitions/OrderStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "OrderStatusDto",
								"$ref": "#/definitions/OrderStatusDto"
							},
							"uniqueItems": true
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/status/update/{orderId}/{targetStatusId}": {
			"post": {
				"tags": [
					"Instant Games - Order Status API"
				],
				"summary": "Order Status Update",
				"description": "",
				"operationId": "updateOrderStatus",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Operator",
						"in": "header",
						"description": "The operator's id.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Source",
						"in": "header",
						"description": "Source of the caller",
						"required": false,
						"type": "string",
						"enum": [
							"API",
							"UI"
						]
					},
					{
						"name": "orderId",
						"in": "path",
						"description": "The order id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "targetStatusId",
						"in": "path",
						"description": "The target status id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/order/status/all": {
			"get": {
				"tags": [
					"Instant Games - Order Status API"
				],
				"summary": "Retrieve list of order statuses",
				"description": "",
				"operationId": "getAvailableOrderStatuses",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"originalRef": "OrderStatusDto",
								"$ref": "#/definitions/OrderStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "OrderStatusDto",
								"$ref": "#/definitions/OrderStatusDto"
							},
							"uniqueItems": true
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/history/{packId}/{productId}/{ticketFrom}/{ticketTo}": {
			"get": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Pack History",
				"description": "",
				"operationId": "getPackHistory",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "packId",
						"in": "path",
						"description": "The pack id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "productId",
						"in": "path",
						"description": "The product id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ticketFrom",
						"in": "path",
						"description": "The starting ticket number",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ticketTo",
						"in": "path",
						"description": "The ending ticket number",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationTypeFrom",
						"in": "query",
						"description": "The location type From",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationTypeTo",
						"in": "query",
						"description": "The location type To",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationIdFrom",
						"in": "query",
						"description": "The location Id From",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationIdTo",
						"in": "query",
						"description": "The location Id To",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packStatusFrom",
						"in": "query",
						"description": "The pack status From",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packStatusTo",
						"in": "query",
						"description": "The pack status To",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "dateFrom",
						"in": "query",
						"description": "The starting date",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"description": "The ending date",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"default": "changeTime"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ReturnPackHistoryDto",
							"$ref": "#/definitions/ReturnPackHistoryDto"
						},
						"responseSchema": {
							"originalRef": "ReturnPackHistoryDto",
							"$ref": "#/definitions/ReturnPackHistoryDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/search": {
			"get": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Gets packs based on search criteria",
				"description": "",
				"operationId": "searchPacks",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "productId",
						"in": "query",
						"description": "The product Id",
						"required": false,
						"type": "string"
					},
					{
						"name": "locationType",
						"in": "query",
						"description": "The location type",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "query",
						"description": "The location Id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packStatus",
						"in": "query",
						"description": "The pack status",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packFrom",
						"in": "query",
						"description": "The starting pack number",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packTo",
						"in": "query",
						"description": "The ending pack number",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "orderId",
						"in": "query",
						"description": "The order id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "dateFrom",
						"in": "query",
						"description": "The starting date",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"description": "The ending date",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "id.packId"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ReturnInventoryManagementDto",
							"$ref": "#/definitions/ReturnInventoryManagementDto"
						},
						"responseSchema": {
							"originalRef": "ReturnInventoryManagementDto",
							"$ref": "#/definitions/ReturnInventoryManagementDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/sell/{barcode}": {
			"post": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Sell pack",
				"description": "This API call sells all tickets in a pack",
				"operationId": "sellPackByBarcode",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/sell/{firstTicketBarcode}/{lastTicketBarcode}": {
			"post": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Sell pack",
				"description": "This API call sells all tickets in a pack",
				"operationId": "sellPackByTickets",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "firstTicketBarcode",
						"in": "path",
						"description": "The first ticket barcode.",
						"required": true,
						"type": "string"
					},
					{
						"name": "lastTicketBarcode",
						"in": "path",
						"description": "The last ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/receive/{ticketBarcode}": {
			"put": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Receive pack",
				"description": "This API call receives a pack",
				"operationId": "receivePackByBarcode",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ticketBarcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/cancel/{barcode}": {
			"put": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Cancel pack",
				"description": "This API call cancels all sold tickets in a pack",
				"operationId": "cancelPackByBarcode",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/cancel/{firstTicketBarcode}/{lastTicketBarcode}": {
			"put": {
				"tags": [
					"Instant Games - Pack API"
				],
				"summary": "Cancel pack",
				"description": "This API call cancels all sold tickets in a pack",
				"operationId": "cancelPackByTickets",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "firstTicketBarcode",
						"in": "path",
						"description": "The first ticket barcode.",
						"required": true,
						"type": "string"
					},
					{
						"name": "lastTicketBarcode",
						"in": "path",
						"description": "The last ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "PackSellResponseDto",
							"$ref": "#/definitions/PackSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/all": {
			"get": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Retrieve list of pack statuses",
				"description": "",
				"operationId": "getAvailablePackStatuses",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/nonfinal": {
			"get": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Retrieve list of pack statuses",
				"description": "",
				"operationId": "getNonFinalAvailableStatuses",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/eligible/{sourceLocationType}/{currentPackStatus}": {
			"get": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Retrieve list of eligible pack statuses to transit based on the current status",
				"description": "",
				"operationId": "getEligiblePackStatuses",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "sourceLocationType",
						"in": "path",
						"description": "The location type",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "currentPackStatus",
						"in": "path",
						"description": "The current pack status",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "PackStatusDto",
								"$ref": "#/definitions/PackStatusDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/{packId}/{productId}/{ticketFrom}/{ticketTo}": {
			"post": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Update Status of a single pack",
				"description": "",
				"operationId": "updatePackStatus",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "packId",
						"in": "path",
						"description": "The pack id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "productId",
						"in": "path",
						"description": "The product id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ticketFrom",
						"in": "path",
						"description": "The starting ticket number",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ticketTo",
						"in": "path",
						"description": "The ending ticket number",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PackStatusUpdateDto",
							"$ref": "#/definitions/PackStatusUpdateDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk/MoveToAnotherWarehouse": {
			"put": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Move packs to another warehouse",
				"description": "",
				"operationId": "movePacksFromWarehouseToWarehouse",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusMove",
							"$ref": "#/definitions/PacksStatusMove"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk/MoveToAnotherRetailer": {
			"put": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Move packs to another retailer",
				"description": "",
				"operationId": "movePacksFromRetailerToRetailer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusMove",
							"$ref": "#/definitions/PacksStatusMove"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk": {
			"post": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Update Status of a multiple packs",
				"description": "",
				"operationId": "updateBulkPacksStatus",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusUpdateDto",
							"$ref": "#/definitions/PacksStatusUpdateDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk/ToAnotherWarehouse": {
			"post": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Transition packs to another warehouse",
				"description": "",
				"operationId": "transitionPacksFromWarehouseToWarehouse",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusUpdateToAnotherLocationDto",
							"$ref": "#/definitions/PacksStatusUpdateToAnotherLocationDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk/ToAnotherRetailer": {
			"post": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Transition packs to another retailer",
				"description": "",
				"operationId": "transitionPacksFromRetailerToRetailer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusUpdateToAnotherLocationDto",
							"$ref": "#/definitions/PacksStatusUpdateToAnotherLocationDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pack/status/update/bulk/FromWarehouseToRetailer": {
			"post": {
				"tags": [
					"Instant Games - Pack Status API"
				],
				"summary": "Transition packs from warehouse to retailer",
				"description": "",
				"operationId": "transitionPacksFromWarehouseToRetailer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "PacksStatusUpdateToAnotherLocationDto",
							"$ref": "#/definitions/PacksStatusUpdateToAnotherLocationDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						},
						"responseSchema": {
							"originalRef": "BulkUpdateSizeDto",
							"$ref": "#/definitions/BulkUpdateSizeDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pick-and-pack/assign/{packingLineId}/{orderId}/{packBarcode}": {
			"put": {
				"tags": [
					"Instant Games - Pick and Pack API"
				],
				"summary": "Assign Pack to Order",
				"description": "",
				"operationId": "assignPackToOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"name": "packingLineId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "orderId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packBarcode",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pick-and-pack/unassign/{packingLineId}/{orderId}/{productId}/{packId}": {
			"put": {
				"tags": [
					"Instant Games - Pick and Pack API"
				],
				"summary": "Unassign Pack From Order",
				"description": "",
				"operationId": "unassignPackToOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"name": "packingLineId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "orderId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "productId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "packId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/pick-and-pack/order/{packingLineId}": {
			"put": {
				"tags": [
					"Instant Games - Pick and Pack API"
				],
				"summary": "Get Order For Packing",
				"description": "",
				"operationId": "getOrderForPacking",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "packingLineId",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "User",
						"in": "header",
						"description": "The user.",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "OrderForPackingRequestDto",
							"$ref": "#/definitions/OrderForPackingRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						},
						"responseSchema": {
							"originalRef": "OrderInfoDto",
							"$ref": "#/definitions/OrderInfoDto"
						}
					},
					"204": {
						"description": "Success, there is no available order"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/terminalreports/summary": {
			"get": {
				"tags": [
					"Instant Games - Terminal Reports API"
				],
				"summary": "Generate Summary Report for terminal",
				"description": "This API call returns summary report for terminal",
				"operationId": "generateSummaryReport",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnSummaryReportDto",
							"$ref": "#/definitions/ReturnSummaryReportDto"
						},
						"responseSchema": {
							"originalRef": "ReturnSummaryReportDto",
							"$ref": "#/definitions/ReturnSummaryReportDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/terminalreports/packstatus": {
			"get": {
				"tags": [
					"Instant Games - Terminal Reports API"
				],
				"summary": "Generate Pack Status Report for terminal",
				"description": "This API call returns pack status report for terminal",
				"operationId": "generatePackStatusReport",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ProductId",
						"in": "header",
						"description": "The id of the product.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnPackStatusReportDto",
							"$ref": "#/definitions/ReturnPackStatusReportDto"
						},
						"responseSchema": {
							"originalRef": "ReturnPackStatusReportDto",
							"$ref": "#/definitions/ReturnPackStatusReportDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/terminalreports/orderstatus": {
			"get": {
				"tags": [
					"Instant Games - Terminal Reports API"
				],
				"summary": "Generate Order Status Report for terminal",
				"description": "This API call returns order status report for terminal",
				"operationId": "generateOrderStatusReport",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "OrderId",
						"in": "header",
						"description": "The order id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "OrderStatusId",
						"in": "header",
						"description": "The order status id",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "dateFrom",
						"in": "header",
						"description": "The starting date",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "header",
						"description": "The ending date",
						"required": false,
						"type": "string"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnOrderStatusReportDto",
							"$ref": "#/definitions/ReturnOrderStatusReportDto"
						},
						"responseSchema": {
							"originalRef": "ReturnOrderStatusReportDto",
							"$ref": "#/definitions/ReturnOrderStatusReportDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/terminalreports/details": {
			"get": {
				"tags": [
					"Instant Games - Terminal Reports API"
				],
				"summary": "Generate Details Report for terminal",
				"description": "This API call returns details report for terminal",
				"operationId": "generateDetailsReport",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The retailer's id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "DateInserted",
						"in": "header",
						"description": "The insertion date.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnDetailsReportDto",
							"$ref": "#/definitions/ReturnDetailsReportDto"
						},
						"responseSchema": {
							"originalRef": "ReturnDetailsReportDto",
							"$ref": "#/definitions/ReturnDetailsReportDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return/complete": {
			"post": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Complete a return",
				"description": "",
				"operationId": "completeReturn",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "barcode",
						"in": "query",
						"description": "The EAN code of the Return",
						"required": false,
						"type": "string"
					},
					{
						"name": "vid",
						"in": "query",
						"description": "The VID of the Return",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "User",
						"in": "header",
						"description": "The id of the user",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return/bo": {
			"post": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Return tickets from back office",
				"description": "This API call returns a ticket",
				"operationId": "backOfficeReturnTickets",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The id of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"description": "The body of return tickets request",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "ReturnTicketRequestDto",
								"$ref": "#/definitions/ReturnTicketRequestDto"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						},
						"responseSchema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return/barcode/{barcode}": {
			"get": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Get details of a Return by Barcode",
				"description": "",
				"operationId": "getReturnDetailsByBarcode",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "barcode",
						"in": "path",
						"description": "The EAN code of the Return",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "ReturnDetailsDto",
								"$ref": "#/definitions/ReturnDetailsDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "ReturnDetailsDto",
								"$ref": "#/definitions/ReturnDetailsDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return/vid/{vid}": {
			"get": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Get details of a Return by VID",
				"description": "",
				"operationId": "getReturnDetailsByVid",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "vid",
						"in": "path",
						"description": "The VID of the Return",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "ReturnDetailsDto",
								"$ref": "#/definitions/ReturnDetailsDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "ReturnDetailsDto",
								"$ref": "#/definitions/ReturnDetailsDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return/search": {
			"get": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Search Pack returns",
				"description": "",
				"operationId": "searchReturns",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page",
						"required": true,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit",
						"required": true,
						"type": "integer",
						"default": 10,
						"format": "int32"
					},
					{
						"name": "column",
						"in": "query",
						"description": "Column",
						"required": false,
						"type": "string",
						"x-example": "id"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort",
						"required": false,
						"type": "string",
						"x-example": "asc"
					},
					{
						"name": "returnId",
						"in": "query",
						"description": "returnId",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "query",
						"description": "barcode",
						"required": false,
						"type": "string"
					},
					{
						"name": "locationId",
						"in": "query",
						"description": "locationId",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "isCompleted",
						"in": "query",
						"description": "isCompleted",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"description": "dateTo",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "SearchReturnsResultDto",
							"$ref": "#/definitions/SearchReturnsResultDto"
						},
						"responseSchema": {
							"originalRef": "SearchReturnsResultDto",
							"$ref": "#/definitions/SearchReturnsResultDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/return": {
			"post": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Return tickets",
				"description": "This API call returns a ticket",
				"operationId": "returnTickets",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The id of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "The body of return tickets request",
						"required": false,
						"schema": {
							"originalRef": "ReturnTicketsRequestDto",
							"$ref": "#/definitions/ReturnTicketsRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						},
						"responseSchema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v2.0/igms/return": {
			"post": {
				"tags": [
					"Instant Games - Returns API"
				],
				"summary": "Return tickets V2",
				"description": "This API call returns a full or partial pack(s) using first/last ticket barcodes",
				"operationId": "returnTicketsV2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EanCode",
						"in": "header",
						"description": "Ean Code from terminal",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"description": "The body of return tickets request",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "TicketsForReturnRequestDto",
								"$ref": "#/definitions/TicketsForReturnRequestDto"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						},
						"responseSchema": {
							"originalRef": "ReturnTicketsResponseDto",
							"$ref": "#/definitions/ReturnTicketsResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/rms/retailer/{retailercd}": {
			"get": {
				"tags": [
					"Instant Games - RMS API"
				],
				"summary": "Get retailer details",
				"description": "Get retailer details",
				"operationId": "getRetailerDetails",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "retailercd",
						"in": "path",
						"description": "Retailer Code",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "RmsRetailerDetailsDto",
							"$ref": "#/definitions/RmsRetailerDetailsDto"
						},
						"responseSchema": {
							"originalRef": "RmsRetailerDetailsDto",
							"$ref": "#/definitions/RmsRetailerDetailsDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/rms/retailer/{retailercd}/employees": {
			"get": {
				"tags": [
					"Instant Games - RMS API"
				],
				"summary": "Get retailer employees",
				"description": "Get retailer employees",
				"operationId": "getRetailerEmployees",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "retailercd",
						"in": "path",
						"description": "Retailer Code",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "RmsKeyValueResponseDto",
								"$ref": "#/definitions/RmsKeyValueResponseDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "RmsKeyValueResponseDto",
								"$ref": "#/definitions/RmsKeyValueResponseDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/rms/retailer/{lottery}/search": {
			"get": {
				"tags": [
					"Instant Games - RMS API"
				],
				"summary": "Search Retailers",
				"description": "Search Retailers",
				"operationId": "searchRetailer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "lottery",
						"in": "path",
						"description": "Lottery Code (operator)",
						"required": true,
						"type": "string"
					},
					{
						"name": "token",
						"in": "query",
						"description": "Input search Data",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Input type of retailer",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "RmsKeyValueResponseDto",
								"$ref": "#/definitions/RmsKeyValueResponseDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "RmsKeyValueResponseDto",
								"$ref": "#/definitions/RmsKeyValueResponseDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/document": {
			"post": {
				"tags": [
					"Instant Games - Ticket Document API"
				],
				"summary": "Created Ticket Document",
				"description": "This API call creates a ticket document request based on the given parameters.",
				"operationId": "createDocument",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "The parameters for ticket document request",
						"required": false,
						"schema": {
							"originalRef": "TicketDocumentRequestDto",
							"$ref": "#/definitions/TicketDocumentRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"responseSchema": {
							"type": "integer",
							"format": "int32"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/document/status/{id}": {
			"get": {
				"tags": [
					"Instant Games - Ticket Document API"
				],
				"summary": "Created Ticket Document",
				"description": "This API call creates a ticket document request based on the given parameters.",
				"operationId": "getStatus",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The File monitoring Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						},
						"responseSchema": {
							"type": "string"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/{firstTicketBarcode}/{lastTicketBarcode}": {
			"post": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Sell tickets in Range",
				"description": "This API call sells tickets in range",
				"operationId": "sellTicketInRange",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "firstTicketBarcode",
						"in": "path",
						"description": "The first ticket barcode.",
						"required": true,
						"type": "string"
					},
					{
						"name": "lastTicketBarcode",
						"in": "path",
						"description": "The last ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Rollback tickets in Range",
				"description": "This API call rollbacks sold tickets in range",
				"operationId": "specialCancelTicketInRange",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "firstTicketBarcode",
						"in": "path",
						"description": "The first ticket barcode.",
						"required": true,
						"type": "string"
					},
					{
						"name": "lastTicketBarcode",
						"in": "path",
						"description": "The last ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/cancel/{barcode}": {
			"put": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Cancel ticket",
				"description": "This API call cancels a sold ticket",
				"operationId": "cancelTicket",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/cancel/bo/{barcode}": {
			"put": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Cancel ticket from back-office",
				"description": "This API call cancels a sold ticket from back-office",
				"operationId": "backOfficeCancelTicket",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/{barcode}": {
			"post": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Sell ticket",
				"description": "This API call sells a ticket",
				"operationId": "sellTicket",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Rollback ticket",
				"description": "This API call rollbacks a sold ticket",
				"operationId": "specialCancelTicket",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketSellResponseDto",
							"$ref": "#/definitions/TicketSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/pre-sell/range/{barcode}": {
			"get": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Pre-Sell tickets in Range",
				"description": "This API call pre-sells tickets in range",
				"operationId": "preSellTicketInRange",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "barcode",
						"in": "path",
						"description": "The ticket barcode.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						},
						"responseSchema": {
							"originalRef": "TicketInRangeSellResponseDto",
							"$ref": "#/definitions/TicketInRangeSellResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/status/eligible/{currentTicketStatus}": {
			"get": {
				"tags": [
					"Instant Games - Ticket Status API"
				],
				"summary": "Retrieve list of eligible ticket statuses to transit based on the current status",
				"description": "This API retrieves list of eligible ticket statuses to transit based on the current status",
				"operationId": "getEligibleOrderStatuses_1",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "currentTicketStatus",
						"in": "path",
						"description": "The current ticket status",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "TicketStatusDto",
								"$ref": "#/definitions/TicketStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "TicketStatusDto",
								"$ref": "#/definitions/TicketStatusDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/status/all": {
			"get": {
				"tags": [
					"Instant Games - Ticket Status API"
				],
				"summary": "Retrieve list of ticket statuses",
				"description": "This API retrieves list of ticket statuses",
				"operationId": "getAvailableOrderStatuses_1",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"originalRef": "TicketStatusDto",
								"$ref": "#/definitions/TicketStatusDto"
							}
						},
						"responseSchema": {
							"type": "array",
							"items": {
								"originalRef": "TicketStatusDto",
								"$ref": "#/definitions/TicketStatusDto"
							}
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/validation": {
			"post": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Validate ticket",
				"description": "",
				"operationId": "validate",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The id of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "CrId",
						"in": "header",
						"description": "Cash register",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "PaymentLevel",
						"in": "header",
						"description": "Payment Level",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "ValidationRequestDto",
							"$ref": "#/definitions/ValidationRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ValidationResponseDto",
							"$ref": "#/definitions/ValidationResponseDto"
						},
						"responseSchema": {
							"originalRef": "ValidationResponseDto",
							"$ref": "#/definitions/ValidationResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/ticket/winnings": {
			"post": {
				"tags": [
					"Instant Games - Ticket API"
				],
				"summary": "Find Ticket Winnings",
				"description": "",
				"operationId": "inquire",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Channel",
						"in": "header",
						"description": "The channel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The id of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "ExternalEmployeeId",
						"in": "header",
						"description": "The id of the external employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "ExternalRetailerId",
						"in": "header",
						"description": "The id of the external retailer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "CrId",
						"in": "header",
						"description": "Cash register",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "PaymentLevel",
						"in": "header",
						"description": "Payment Level",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "ValidationRequestDto",
							"$ref": "#/definitions/ValidationRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "ValidationResponseDto",
							"$ref": "#/definitions/ValidationResponseDto"
						},
						"responseSchema": {
							"originalRef": "ValidationResponseDto",
							"$ref": "#/definitions/ValidationResponseDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/bos/period": {
			"post": {
				"tags": [
					"Instant Games - BOS API"
				],
				"summary": "Receive notification from BOS about Accounting Period updates",
				"description": "Receive notification from BOS about Accounting Period updates",
				"operationId": "accountingPeriodUpdated",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": false,
						"schema": {
							"originalRef": "AccPerDto",
							"$ref": "#/definitions/AccPerDto"
						}
					},
					{
						"name": "RetailerId",
						"in": "header",
						"description": "The id of the Retailer.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "EmployeeId",
						"in": "header",
						"description": "The username of the employee.",
						"required": false,
						"type": "string"
					},
					{
						"name": "TerminalId",
						"in": "header",
						"description": "The id of the terminal.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Pin",
						"in": "header",
						"description": "Pin of the Employee",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/desadv/handle/{type}": {
			"post": {
				"tags": [
					"Instant Games - File Management API / DESADV"
				],
				"summary": "Create and Upload CSV | XML  DESADV files to Seeburger",
				"description": "Create and Upload CSV | XML DESADV files to Seeburger",
				"operationId": "createAndUploadDesadv",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "type",
						"in": "path",
						"description": "Type of file",
						"required": true,
						"type": "string",
						"enum": [
							"CSV",
							"XML"
						]
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/dlv/load": {
			"post": {
				"tags": [
					"Instant Games - File Management API / DLV"
				],
				"summary": "Load (download + load to SG data) but NOT process all pending (i.e. not already downloaded) DLV files",
				"description": "Load (download + load to SG data) but NOT process all pending (i.e. not already downloaded) DLV files",
				"operationId": "loadDlv",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/dlv/process": {
			"post": {
				"tags": [
					"Instant Games - File Management API / DLV"
				],
				"summary": "Process DLV file that is already loaded to SG data",
				"description": "Process DLV file that is already loaded to SG data",
				"operationId": "processDlvFile",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "fileName",
						"in": "header",
						"description": "The file name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "boolean"
						},
						"responseSchema": {
							"type": "boolean"
						}
					},
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/dlv/handle": {
			"post": {
				"tags": [
					"Instant Games - File Management API / DLV"
				],
				"summary": "Load (download + load to SG data) and process all pending (i.e. not already downloaded) DLV files",
				"description": "Load (download + load to SG data) and process all pending (i.e. not already downloaded) DLV files",
				"operationId": "loadAndProcessDlv",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/invoic-order/handle/{type}/{operatorId}/year/{year}/period/{accCd}": {
			"post": {
				"tags": [
					"Instant Games - File Management API / INVOIC"
				],
				"summary": "Create and Upload CSV | XML INVOIC-Order files to Seeburger",
				"description": "Create and Upload CSV | XML INVOIC-Order files to Seeburger",
				"operationId": "createAndUploadInvoicOrder",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "type",
						"in": "path",
						"description": "Type of file",
						"required": true,
						"type": "string",
						"enum": [
							"CSV",
							"XML"
						]
					},
					{
						"name": "operatorId",
						"in": "path",
						"description": "Operator Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "year",
						"in": "path",
						"description": "Account Period Year",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accCd",
						"in": "path",
						"description": "Account Period Code",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/invoic-return/handle/{operatorId}/year/{year}/period/{accCd}": {
			"post": {
				"tags": [
					"Instant Games - File Management API / INVOIC"
				],
				"summary": "Create and Upload CSV INVOIC-Return file to Seeburger",
				"description": "Create and Upload CSV INVOIC-Return file to Seeburger",
				"operationId": "createAndUploadInvoicReturn",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "operatorId",
						"in": "path",
						"description": "Operator Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "year",
						"in": "path",
						"description": "Account Period Year",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accCd",
						"in": "path",
						"description": "Account Period Code",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/ean/{productId}": {
			"get": {
				"tags": [
					"Instant Games - File Management API / INVOIC"
				],
				"summary": "Retrieves ean fields per product for Invoic file",
				"description": "This API call Retrieves ean fields per product for Invoic file",
				"operationId": "getEanFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "productId",
						"in": "path",
						"description": "The id of the product.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"originalRef": "EanDto",
							"$ref": "#/definitions/EanDto"
						},
						"responseSchema": {
							"originalRef": "EanDto",
							"$ref": "#/definitions/EanDto"
						}
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/return/handle": {
			"post": {
				"tags": [
					"Instant Games - File Management API / RETURN"
				],
				"summary": "Create and Upload CSV RETURN files to Seeburger",
				"description": "Create and Upload CSV RETURN files to Seeburger",
				"operationId": "createAndUploadReturn",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": true,
						"type": "string",
						"x-example": "21/09/2019"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		},
		"/api/v1.0/igms/management/interface/handle/{type}": {
			"post": {
				"tags": [
					"Instant Games - File Management API / SG Interface Files"
				],
				"summary": "Create and Upload PKG, CNF or VAL files to SG",
				"description": "Create and Upload PKG, CNF or VAL files to SG",
				"operationId": "createAndUploadInterface",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "type",
						"in": "path",
						"description": "Type of file",
						"required": true,
						"type": "string",
						"enum": [
							"PKG",
							"VAL",
							"CNF"
						]
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"500": {
						"description": "Runtime Fault",
						"schema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						},
						"responseSchema": {
							"originalRef": "FaultInfo",
							"$ref": "#/definitions/FaultInfo"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"LocationTypeDto": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Location type Id"
				},
				"name": {
					"type": "string",
					"description": "Location type name"
				}
			},
			"description": "Location type Info"
		},
		"FaultInfo": {
			"type": "object",
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32",
					"description": "The error code"
				},
				"message": {
					"type": "string",
					"description": "The error message"
				},
				"data": {
					"type": "array",
					"description": "The error data which is an abstract object that may be used to provide any error metadata",
					"items": {
						"type": "object"
					}
				},
				"source": {
					"type": "string",
					"description": "The application at which the API error occured"
				},
				"type": {
					"type": "string",
					"description": "The error family, e.g. RUNTIME, VALIDATION, etc"
				}
			},
			"description": "The FaultInfo object contains all the details assosiated with an API error"
		},
		"OrderPriority": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"description": {
					"type": "string"
				}
			}
		},
		"PackingLineResponseDto": {
			"type": "object",
			"required": [
				"description",
				"id",
				"ipAddress",
				"packingTypeDescription",
				"packingTypeId",
				"printClientIp",
				"printClientPort",
				"warehouseId",
				"warehouseName"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Id of Packing Line"
				},
				"description": {
					"type": "string",
					"description": "Description of Packing Line"
				},
				"ipAddress": {
					"type": "string",
					"description": "ip address"
				},
				"packingTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Packing type id"
				},
				"packingTypeDescription": {
					"type": "string",
					"description": "Packing type description"
				},
				"warehouseId": {
					"type": "integer",
					"format": "int32",
					"description": "Warehouse id"
				},
				"warehouseName": {
					"type": "string",
					"description": "WarehouseName"
				},
				"printClientIp": {
					"type": "string",
					"description": "Print client ip address"
				},
				"printClientPort": {
					"type": "integer",
					"format": "int32",
					"description": "Print client port"
				}
			},
			"description": "PackingLineResponse"
		},
		"SearchPackingLineDto": {
			"type": "object",
			"required": [
				"packingLines",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"packingLines": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "PackingLineResponseDto",
						"$ref": "#/definitions/PackingLineResponseDto"
					}
				}
			},
			"description": "Packing line search results"
		},
		"PackingLineDto": {
			"type": "object",
			"required": [
				"description",
				"ipAddress",
				"packingTypeId",
				"printClientIp",
				"printClientPort",
				"warehouseId"
			],
			"properties": {
				"description": {
					"type": "string",
					"description": "Description of Packing Line"
				},
				"ipAddress": {
					"type": "string",
					"description": "ip address"
				},
				"packingTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Packing type id"
				},
				"warehouseId": {
					"type": "integer",
					"format": "int32",
					"description": "Warehouse id"
				},
				"printClientIp": {
					"type": "string",
					"description": "Print client ip address"
				},
				"printClientPort": {
					"type": "integer",
					"format": "int32",
					"description": "Print client port"
				}
			},
			"description": "PackingLine"
		},
		"PackingType": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"description": {
					"type": "string"
				},
				"minWeight": {
					"type": "integer",
					"format": "int32"
				},
				"maxWeight": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"PackingTypeDto": {
			"type": "object",
			"required": [
				"description",
				"maxWeight",
				"minWeight"
			],
			"properties": {
				"description": {
					"type": "string",
					"description": "Description/Name of Packing Type"
				},
				"minWeight": {
					"type": "integer",
					"format": "int32",
					"description": "Minimum weight"
				},
				"maxWeight": {
					"type": "integer",
					"format": "int32",
					"description": "Maximum weight"
				}
			},
			"description": "PackingType"
		},
		"SearchPackingTypeDto": {
			"type": "object",
			"required": [
				"packingTypes",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"packingTypes": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "PackingType",
						"$ref": "#/definitions/PackingType"
					}
				}
			},
			"description": "Packing type search results"
		},
		"UnitType": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"description": {
					"type": "string"
				}
			}
		},
		"SearchWarehouseDto": {
			"type": "object",
			"required": [
				"totalElements",
				"warehouses"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"warehouses": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "WarehouseDto",
						"$ref": "#/definitions/WarehouseDto"
					}
				}
			},
			"description": "Warehouse search results"
		},
		"WarehouseDto": {
			"type": "object",
			"required": [
				"id",
				"is_default",
				"is_enabled",
				"name"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Id of warehouse"
				},
				"name": {
					"type": "string",
					"description": "Name of warehouse"
				},
				"phone1": {
					"type": "string",
					"description": "Primary Phone of warehouse"
				},
				"phone2": {
					"type": "string",
					"description": "Secondary Phone of warehouse"
				},
				"contact_name": {
					"type": "string",
					"description": "Contact Person of warehouse"
				},
				"address1": {
					"type": "string",
					"description": "Address 1 of warehouse"
				},
				"address2": {
					"type": "string",
					"description": "Address 2 of warehouse"
				},
				"address3": {
					"type": "string",
					"description": "Municipality of warehouse"
				},
				"address4": {
					"type": "string",
					"description": "City of warehouse"
				},
				"postal_code": {
					"type": "string",
					"description": "Postal Code of warehouse"
				},
				"fax": {
					"type": "string",
					"description": "Fax of warehouse"
				},
				"is_default": {
					"type": "integer",
					"format": "int32",
					"description": "If warehouse is default"
				},
				"is_enabled": {
					"type": "integer",
					"format": "int32",
					"description": "If warehouse is enabled"
				}
			},
			"description": "Warehouse"
		},
		"GameDetailsResponseDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Product Id"
				},
				"productDescription": {
					"type": "string",
					"description": "Product Description"
				},
				"productStatus": {
					"type": "integer",
					"format": "int32",
					"description": "Product Status"
				},
				"productStatusDescription": {
					"type": "string",
					"description": "Product Status Description"
				},
				"ticketPrice": {
					"type": "number",
					"description": "Ticket Price"
				},
				"externalId": {
					"type": "string",
					"description": "External Id (EPR code, etc.)"
				},
				"inventoryStartDate": {
					"type": "string",
					"format": "date-time",
					"description": "Inventory Control Start Date"
				},
				"inventoryEndDate": {
					"type": "string",
					"format": "date-time",
					"description": "Inventory Control End Date"
				},
				"inventoryStatusId": {
					"type": "integer",
					"format": "int32",
					"description": "Inventory Control Status"
				},
				"paymentStartDate": {
					"type": "string",
					"format": "date-time",
					"description": "Prize Payment Start Date"
				},
				"paymentEndDate": {
					"type": "string",
					"format": "date-time",
					"description": "Prize Payment End Date"
				},
				"paymentStatusId": {
					"type": "integer",
					"format": "int32",
					"description": "Prize Payment Status"
				},
				"activationStartDate": {
					"type": "string",
					"format": "date-time",
					"description": "Activation Start Date"
				},
				"activationEndDate": {
					"type": "string",
					"format": "date-time",
					"description": "Activation End Date"
				},
				"packsPerCarton": {
					"type": "integer",
					"format": "int32",
					"description": "Packs Per Carton"
				},
				"ticketsPerPack": {
					"type": "integer",
					"format": "int32",
					"description": "Tickets Per Pack"
				},
				"startingPackNo": {
					"type": "integer",
					"format": "int32",
					"description": "Starting Pack No"
				}
			}
		},
		"OrderDetailTransResponseDto": {
			"type": "object",
			"required": [
				"box",
				"orderStatus",
				"packId",
				"productId",
				"productName"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of product"
				},
				"productName": {
					"type": "string",
					"description": "Name of product"
				},
				"packId": {
					"type": "integer",
					"format": "int32",
					"description": "Pack id"
				},
				"box": {
					"type": "integer",
					"format": "int32",
					"description": "Box"
				},
				"orderStatus": {
					"type": "string",
					"description": "Order status"
				}
			},
			"description": "Order Detail Trans Response Dto"
		},
		"OrderDetailsResponseDto": {
			"type": "object",
			"required": [
				"externalProductId",
				"itemId",
				"productId",
				"productName",
				"unitCount",
				"unitCountShipped",
				"unitType",
				"unitTypeId"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of product"
				},
				"externalProductId": {
					"type": "string",
					"description": "External Id of product"
				},
				"productName": {
					"type": "string",
					"description": "Name of product"
				},
				"itemId": {
					"type": "integer",
					"format": "int32",
					"description": "Item id"
				},
				"unitCount": {
					"type": "integer",
					"format": "int32",
					"description": "Unit count"
				},
				"unitCountShipped": {
					"type": "integer",
					"format": "int32",
					"description": "Unit count shipped"
				},
				"unitTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Unit type id"
				},
				"unitType": {
					"type": "string",
					"description": "Unit type"
				}
			},
			"description": "Order Details Response Dto"
		},
		"OrderInfoDto": {
			"type": "object",
			"required": [
				"orderDetailTrans",
				"orderDetails",
				"orderId",
				"retailerId"
			],
			"properties": {
				"orderId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of order"
				},
				"externalOrderId": {
					"type": "string",
					"description": "External Order Id"
				},
				"priorityId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of priority"
				},
				"warehouseId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of warehouse"
				},
				"orderStatus": {
					"type": "string",
					"description": "Name of order status"
				},
				"user": {
					"type": "string",
					"description": "Name of user"
				},
				"issuedOn": {
					"type": "string",
					"format": "date-time",
					"description": "Date the order was issued"
				},
				"dateTimeMod": {
					"type": "string",
					"format": "date-time",
					"description": "Date the order was modified"
				},
				"retailerId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of retailer"
				},
				"employeeId": {
					"type": "string",
					"description": "The username of the employee"
				},
				"orderTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of order status"
				},
				"orderDetails": {
					"type": "array",
					"description": "Order Details",
					"items": {
						"originalRef": "OrderDetailsResponseDto",
						"$ref": "#/definitions/OrderDetailsResponseDto"
					}
				},
				"orderDetailTrans": {
					"type": "array",
					"description": "Order Detail Transactions",
					"items": {
						"originalRef": "OrderDetailTransResponseDto",
						"$ref": "#/definitions/OrderDetailTransResponseDto"
					}
				}
			},
			"description": "All order info"
		},
		"GiftDescriptionDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"tierType": {
					"type": "integer",
					"format": "int32"
				},
				"prizeDescription": {
					"type": "string"
				},
				"tierPrizeDescription": {
					"type": "string"
				},
				"tierLevel": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"GiftDto": {
			"type": "object",
			"properties": {
				"giftDescriptionDtoList": {
					"type": "array",
					"items": {
						"originalRef": "GiftDescriptionDto",
						"$ref": "#/definitions/GiftDescriptionDto"
					}
				}
			}
		},
		"CreateGameRequestDto": {
			"type": "object",
			"required": [
				"gameId",
				"integrationId",
				"name",
				"sellPrice",
				"series"
			],
			"properties": {
				"gameId": {
					"type": "integer",
					"format": "int32",
					"example": 7,
					"description": "Identifier of Game (7-Express Lottery, 8-Scientific Games International"
				},
				"series": {
					"type": "integer",
					"format": "int32",
					"example": 14,
					"description": "Series of Game"
				},
				"name": {
					"type": "string",
					"example": "EL-14",
					"description": "Name of Game"
				},
				"integrationId": {
					"type": "string",
					"example": "123456",
					"description": "Integration id of Game"
				},
				"sellPrice": {
					"type": "number",
					"example": 5.0,
					"description": "Sell Price of Game"
				}
			},
			"description": "Game"
		},
		"ActiveGameResponseDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Product Id"
				},
				"productStatus": {
					"type": "integer",
					"format": "int32",
					"description": "Product Status"
				},
				"productStatusDescription": {
					"type": "string",
					"description": "Product Status Description"
				},
				"productDescription": {
					"type": "string",
					"description": "Product Description"
				},
				"productVersion": {
					"type": "integer",
					"format": "int32",
					"description": "Product Version"
				},
				"productOperator": {
					"type": "integer",
					"format": "int32",
					"description": "Product Operator"
				},
				"ticketPrice": {
					"type": "number",
					"description": "Ticket Price"
				},
				"externalId": {
					"type": "string",
					"description": "External Id (EPR code, etc.)"
				},
				"eanPayout": {
					"type": "string",
					"description": "Product EAN Payout"
				},
				"packsPerCarton": {
					"type": "integer",
					"format": "int32",
					"description": "Packs Per Carton"
				},
				"ticketsPerPack": {
					"type": "integer",
					"format": "int32",
					"description": "Tickets Per Pack"
				},
				"startingPackNo": {
					"type": "integer",
					"format": "int32",
					"description": "Starting Pack No"
				}
			}
		},
		"ActiveGamesResponseDto": {
			"type": "object",
			"properties": {
				"activeGames": {
					"type": "array",
					"items": {
						"originalRef": "ActiveGameResponseDto",
						"$ref": "#/definitions/ActiveGameResponseDto"
					}
				}
			}
		},
		"OrderWithPacksDto": {
			"type": "object",
			"required": [
				"externalId"
			],
			"properties": {
				"orderId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Id"
				},
				"externalId": {
					"type": "string",
					"description": "External order Id"
				},
				"warehouseId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of warehouse"
				},
				"priorityId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Priority (1 LOW, 2 HIGH, default LOW)",
					"enum": [
						1,
						2
					]
				},
				"orderTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Type (1 TERMINAL, 2 BACKOFFICE, 3 SUGO, default TERMINAL)",
					"enum": [
						1,
						2,
						3
					]
				},
				"packDtoList": {
					"type": "array",
					"description": "Packs in an order",
					"items": {
						"originalRef": "PackDto",
						"$ref": "#/definitions/PackDto"
					}
				}
			},
			"description": "New Order that contains packs"
		},
		"PackDto": {
			"type": "object",
			"required": [
				"packId",
				"productId"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of product"
				},
				"packId": {
					"type": "integer",
					"format": "int32",
					"description": "Pack id"
				}
			},
			"description": "Pack in an order"
		},
		"OrderDetailsDto": {
			"type": "object",
			"required": [
				"productId",
				"unitCount",
				"unitTypeId"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of product"
				},
				"unitCount": {
					"type": "integer",
					"format": "int32",
					"example": 300,
					"description": "Unit count"
				},
				"unitTypeId": {
					"type": "integer",
					"format": "int32",
					"example": 2,
					"description": "Unit type (1 - PACK, 2 - TICKET)",
					"enum": [
						1,
						2
					]
				}
			},
			"description": "Order Details Dto"
		},
		"OrderDto": {
			"type": "object",
			"properties": {
				"warehouseId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of warehouse"
				},
				"priorityId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Priority (1 LOW, 2 HIGH, default LOW)",
					"enum": [
						1,
						2
					]
				},
				"orderTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Type (1 TERMINAL, 2 BACKOFFICE, 3 SUGO, default TERMINAL)",
					"enum": [
						1,
						2,
						3
					]
				},
				"orderDetailsDtoList": {
					"type": "array",
					"description": "Order Details",
					"items": {
						"originalRef": "OrderDetailsDto",
						"$ref": "#/definitions/OrderDetailsDto"
					}
				}
			},
			"description": "Order Dto"
		},
		"ReceiveOrderResponseDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int64"
				},
				"productStatus": {
					"type": "integer",
					"format": "int64"
				},
				"productDescription": {
					"type": "string"
				},
				"packsConfirmed": {
					"type": "integer",
					"format": "int64"
				},
				"packQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"ticketQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"ticketCost": {
					"type": "number"
				}
			}
		},
		"ReceiveOrdersResponseDto": {
			"type": "object",
			"properties": {
				"receivedOrders": {
					"type": "array",
					"items": {
						"originalRef": "ReceiveOrderResponseDto",
						"$ref": "#/definitions/ReceiveOrderResponseDto"
					}
				}
			}
		},
		"OrderHistoryDto": {
			"type": "object",
			"required": [
				"changeTime",
				"id",
				"newStatus",
				"oldStatus",
				"source",
				"user"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Id "
				},
				"user": {
					"type": "string",
					"description": "User"
				},
				"source": {
					"type": "string",
					"description": "Source od change"
				},
				"changeTime": {
					"type": "string",
					"format": "date-time",
					"description": "Change Time"
				},
				"newStatus": {
					"type": "string",
					"description": "New order status"
				},
				"oldStatus": {
					"type": "string",
					"description": "Old order status"
				}
			},
			"description": "Order History Dto"
		},
		"OrderResponseDto": {
			"type": "object",
			"required": [
				"orderId",
				"retailerId"
			],
			"properties": {
				"orderId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of order"
				},
				"externalOrderId": {
					"type": "string",
					"description": "External Order Id"
				},
				"retailerId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of retailer"
				},
				"employeeId": {
					"type": "string",
					"description": "The username of the employee"
				},
				"orderStatus": {
					"type": "string",
					"description": "Name of order status"
				},
				"orderStatusId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of order status"
				},
				"priority": {
					"type": "string",
					"description": "Name of priority"
				},
				"warehouse": {
					"type": "string",
					"description": "Name of warehouse"
				},
				"issuedOn": {
					"type": "string",
					"format": "date-time",
					"description": "Date the order was issued"
				},
				"orderDetails": {
					"type": "array",
					"items": {
						"originalRef": "OrderDetailsResponseDto",
						"$ref": "#/definitions/OrderDetailsResponseDto"
					}
				},
				"editable": {
					"type": "boolean"
				}
			},
			"description": "Order Response Dto"
		},
		"SearchOrderResponseDto": {
			"type": "object",
			"required": [
				"orders",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"orders": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "OrderResponseDto",
						"$ref": "#/definitions/OrderResponseDto"
					}
				}
			},
			"description": "Order search results"
		},
		"ReceiveOrdersRequestDto": {
			"type": "object",
			"properties": {
				"orderId": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"OrderStatusDto": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Order status Id"
				},
				"name": {
					"type": "string",
					"description": "Order status name"
				}
			},
			"description": "Order Status Info"
		},
		"Order": {
			"type": "object",
			"properties": {
				"orderId": {
					"type": "integer",
					"format": "int32"
				},
				"packingLine": {
					"originalRef": "PackingLine",
					"$ref": "#/definitions/PackingLine"
				},
				"packingLineDt": {
					"type": "string",
					"format": "date-time"
				},
				"shipmentTypeId": {
					"type": "integer",
					"format": "int32"
				},
				"shipmentDt": {
					"type": "string",
					"format": "date-time"
				},
				"arrivalDt": {
					"type": "string",
					"format": "date-time"
				},
				"shipmentValue": {
					"type": "number"
				},
				"user": {
					"type": "string"
				},
				"userDtIssued": {
					"type": "string",
					"format": "date-time"
				},
				"recipientId": {
					"type": "integer",
					"format": "int32"
				},
				"employeeId": {
					"type": "string"
				},
				"orderStatusId": {
					"type": "integer",
					"format": "int32"
				},
				"shipmentExtraFlag": {
					"type": "boolean"
				},
				"orderTypeId": {
					"type": "integer",
					"format": "int32"
				},
				"priority": {
					"type": "integer",
					"format": "int32"
				},
				"warehouse": {
					"originalRef": "Warehouse",
					"$ref": "#/definitions/Warehouse"
				},
				"dateTimeMod": {
					"type": "string",
					"format": "date-time"
				},
				"locationId": {
					"type": "integer",
					"format": "int32"
				},
				"locationType": {
					"type": "integer",
					"format": "int32"
				},
				"closeFlg": {
					"type": "boolean"
				},
				"eabFlg": {
					"type": "boolean"
				},
				"prnFlg": {
					"type": "boolean"
				},
				"terminalId": {
					"type": "integer",
					"format": "int32"
				},
				"externalOrderId": {
					"type": "string"
				}
			}
		},
		"PackingLine": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"description": {
					"type": "string"
				},
				"ipAddress": {
					"type": "string"
				},
				"packingType": {
					"originalRef": "PackingType",
					"$ref": "#/definitions/PackingType"
				},
				"warehouse": {
					"originalRef": "Warehouse",
					"$ref": "#/definitions/Warehouse"
				},
				"printClientIp": {
					"type": "string"
				},
				"printClientPort": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Warehouse": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"phone1": {
					"type": "string"
				},
				"phone2": {
					"type": "string"
				},
				"contactName": {
					"type": "string"
				},
				"address1": {
					"type": "string"
				},
				"address2": {
					"type": "string"
				},
				"address3": {
					"type": "string"
				},
				"address4": {
					"type": "string"
				},
				"postalCode": {
					"type": "string"
				},
				"fax": {
					"type": "string"
				},
				"isDefault": {
					"type": "boolean"
				},
				"salesRep": {
					"type": "boolean"
				},
				"enabled": {
					"type": "boolean"
				},
				"defaultFullReturns": {
					"type": "boolean"
				},
				"defaultPartialReturns": {
					"type": "boolean"
				}
			}
		},
		"PackHistoryDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"user": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"changeTime": {
					"type": "string",
					"format": "date-time"
				},
				"newStatus": {
					"type": "integer",
					"format": "int32"
				},
				"newStatusName": {
					"type": "string"
				},
				"oldStatus": {
					"type": "integer",
					"format": "int32"
				},
				"oldStatusName": {
					"type": "string"
				},
				"newLocation": {
					"type": "integer",
					"format": "int32"
				},
				"newLocationType": {
					"type": "string"
				},
				"oldLocation": {
					"type": "integer",
					"format": "int32"
				},
				"oldLocationType": {
					"type": "string"
				},
				"newLocationId": {
					"type": "integer",
					"format": "int32"
				},
				"oldLocationId": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ReturnPackHistoryDto": {
			"type": "object",
			"required": [
				"packHistoryDtoList",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"packHistoryDtoList": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "PackHistoryDto",
						"$ref": "#/definitions/PackHistoryDto"
					}
				}
			},
			"description": "Pack history search results"
		},
		"InventoryManagementDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"productDsc": {
					"type": "string"
				},
				"packId": {
					"type": "integer",
					"format": "int32"
				},
				"packStatus": {
					"type": "integer",
					"format": "int32"
				},
				"locationType": {
					"type": "integer",
					"format": "int32"
				},
				"locationId": {
					"type": "integer",
					"format": "int32"
				},
				"orderId": {
					"type": "integer",
					"format": "int32"
				},
				"ticketFrom": {
					"type": "integer",
					"format": "int32"
				},
				"ticketTo": {
					"type": "integer",
					"format": "int32"
				},
				"date": {
					"type": "string"
				}
			}
		},
		"ReturnInventoryManagementDto": {
			"type": "object",
			"required": [
				"inventoryManagementDtos",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"inventoryManagementDtos": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "InventoryManagementDto",
						"$ref": "#/definitions/InventoryManagementDto"
					}
				}
			},
			"description": "Pack search results"
		},
		"PackSellResponseDto": {
			"type": "object",
			"required": [
				"numberOfTickets",
				"tickets",
				"totalAmount"
			],
			"properties": {
				"packBarcode": {
					"type": "string",
					"description": "Pack Barcode"
				},
				"firstTicketBarcode": {
					"type": "string",
					"description": "First ticket Barcode"
				},
				"lastTicketBarcode": {
					"type": "string",
					"description": "Last ticket Barcode"
				},
				"numberOfTickets": {
					"type": "integer",
					"format": "int32",
					"description": "Number of tickets"
				},
				"totalAmount": {
					"type": "number",
					"description": "Total amount of tickets"
				},
				"tickets": {
					"type": "array",
					"description": "To ticket",
					"items": {
						"originalRef": "TicketSellResponseDto",
						"$ref": "#/definitions/TicketSellResponseDto"
					}
				}
			},
			"description": "Pack Sell Response Dto"
		},
		"TicketSellResponseDto": {
			"type": "object",
			"required": [
				"amount",
				"barcode",
				"packId",
				"productId",
				"ticketId",
				"ticketStatus",
				"ticketStatusId"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32",
					"description": "Product id"
				},
				"packId": {
					"type": "integer",
					"format": "int32",
					"description": "Pack id"
				},
				"ticketId": {
					"type": "integer",
					"format": "int32",
					"description": "Ticket id"
				},
				"barcode": {
					"type": "string",
					"description": "The ticket barcode"
				},
				"amount": {
					"type": "number",
					"description": "Ticket amount"
				},
				"ticketStatus": {
					"type": "string",
					"description": "Ticket status",
					"enum": [
						"SOLD",
						"WAITING_UNSOLD",
						"PAID"
					]
				},
				"ticketStatusId": {
					"type": "integer",
					"format": "int32",
					"description": "Ticket status Id"
				},
				"externalId": {
					"type": "string"
				}
			},
			"description": "Ticket Sell Response Dto"
		},
		"PackStatusDto": {
			"type": "object",
			"required": [
				"locationTypeId",
				"locationTypeName",
				"statusId",
				"statusName"
			],
			"properties": {
				"statusId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of status"
				},
				"statusName": {
					"type": "string",
					"description": "Name of status"
				},
				"locationTypeId": {
					"type": "integer",
					"format": "int32",
					"description": "Id of location"
				},
				"locationTypeName": {
					"type": "string",
					"description": "Name of location"
				}
			},
			"description": "Pack Status Info"
		},
		"PackStatusUpdateDto": {
			"type": "object",
			"properties": {
				"locationId": {
					"type": "integer",
					"format": "int32"
				},
				"locationType": {
					"type": "integer",
					"format": "int32"
				},
				"newPackStatus": {
					"type": "integer",
					"format": "int32"
				},
				"userId": {
					"type": "string"
				}
			}
		},
		"BulkUpdateSizeDto": {
			"type": "object",
			"properties": {
				"size": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"PacksStatusMove": {
			"type": "object",
			"required": [
				"batchSize"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"currentLocationId": {
					"type": "integer",
					"format": "int32"
				},
				"newLocationId": {
					"type": "integer",
					"format": "int32"
				},
				"fromPack": {
					"type": "integer",
					"format": "int32"
				},
				"toPack": {
					"type": "integer",
					"format": "int32"
				},
				"userId": {
					"type": "string"
				},
				"batchSize": {
					"type": "integer",
					"format": "int32",
					"description": "Batch Size"
				}
			}
		},
		"PacksStatusUpdateDto": {
			"type": "object",
			"required": [
				"batchSize"
			],
			"properties": {
				"warehouseId": {
					"type": "integer",
					"format": "int32"
				},
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"currentStatus": {
					"type": "integer",
					"format": "int32"
				},
				"newStatus": {
					"type": "integer",
					"format": "int32"
				},
				"fromPack": {
					"type": "integer",
					"format": "int32"
				},
				"toPack": {
					"type": "integer",
					"format": "int32"
				},
				"userId": {
					"type": "string"
				},
				"batchSize": {
					"type": "integer",
					"format": "int32",
					"description": "Batch Size"
				}
			}
		},
		"PacksStatusUpdateToAnotherLocationDto": {
			"type": "object",
			"required": [
				"batchSize"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"currentLocationId": {
					"type": "integer",
					"format": "int32"
				},
				"newLocationId": {
					"type": "integer",
					"format": "int32"
				},
				"currentStatus": {
					"type": "integer",
					"format": "int32"
				},
				"newStatus": {
					"type": "integer",
					"format": "int32"
				},
				"fromPack": {
					"type": "integer",
					"format": "int32"
				},
				"toPack": {
					"type": "integer",
					"format": "int32"
				},
				"userId": {
					"type": "string"
				},
				"batchSize": {
					"type": "integer",
					"format": "int32",
					"description": "Batch Size"
				}
			}
		},
		"OrderForPackingRequestDto": {
			"type": "object",
			"properties": {
				"zipCodeFrom": {
					"type": "integer",
					"format": "int32",
					"description": "Zip Code From"
				},
				"zipCodeTo": {
					"type": "integer",
					"format": "int32",
					"description": "Zip Code To"
				},
				"orderId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Id"
				},
				"routeId": {
					"type": "integer",
					"format": "int32",
					"description": "Route Id"
				},
				"orderPriorityId": {
					"type": "integer",
					"format": "int32",
					"description": "Order Priority Id"
				}
			}
		},
		"ReturnSummaryReportDto": {
			"type": "object",
			"properties": {
				"summaryReport": {
					"type": "array",
					"items": {
						"originalRef": "SummaryReportDto",
						"$ref": "#/definitions/SummaryReportDto"
					}
				}
			}
		},
		"SummaryReportDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"packsInTransit": {
					"type": "integer",
					"format": "int32"
				},
				"receivedPacks": {
					"type": "integer",
					"format": "int32"
				},
				"activatedPacks": {
					"type": "integer",
					"format": "int32"
				},
				"getsettledPacks": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"PackStatusReportDto": {
			"type": "object",
			"properties": {
				"packId": {
					"type": "integer",
					"format": "int32"
				},
				"packStatus": {
					"type": "string"
				}
			}
		},
		"ReturnPackStatusReportDto": {
			"type": "object",
			"properties": {
				"packStatusReport": {
					"type": "array",
					"items": {
						"originalRef": "PackStatusReportDto",
						"$ref": "#/definitions/PackStatusReportDto"
					}
				}
			}
		},
		"OrderStatusReportDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"productDescription": {
					"type": "string"
				},
				"quantity": {
					"type": "integer",
					"format": "int32"
				},
				"orderId": {
					"type": "integer",
					"format": "int32"
				},
				"dateCreated": {
					"type": "string"
				},
				"dateUpdated": {
					"type": "string"
				},
				"orderStatusId": {
					"type": "string"
				},
				"orderStatusDescription": {
					"type": "string"
				}
			}
		},
		"ReturnOrderStatusReportDto": {
			"type": "object",
			"properties": {
				"orderStatus": {
					"type": "array",
					"items": {
						"originalRef": "OrderStatusReportDto",
						"$ref": "#/definitions/OrderStatusReportDto"
					}
				}
			}
		},
		"DetailsReportDto": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"packId": {
					"type": "integer",
					"format": "int32"
				},
				"packStatus": {
					"type": "string"
				},
				"date": {
					"type": "string"
				}
			}
		},
		"ReturnDetailsReportDto": {
			"type": "object",
			"properties": {
				"detailsReport": {
					"type": "array",
					"items": {
						"originalRef": "DetailsReportDto",
						"$ref": "#/definitions/DetailsReportDto"
					}
				}
			}
		},
		"ReturnTicketResponseDto": {
			"type": "object",
			"required": [
				"itemFrom",
				"itemTo",
				"packId",
				"productId",
				"returnId",
				"status",
				"ticketPrice"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int64",
					"description": "Product Id"
				},
				"packId": {
					"type": "integer",
					"format": "int64",
					"description": "Pack Id"
				},
				"salesAdjustment": {
					"type": "number"
				},
				"itemFrom": {
					"type": "integer",
					"format": "int64",
					"description": "Ticket From"
				},
				"itemTo": {
					"type": "integer",
					"format": "int64",
					"description": "Ticket To"
				},
				"returnId": {
					"type": "integer",
					"format": "int32",
					"description": "Return Id"
				},
				"ticketPrice": {
					"type": "number",
					"description": "Ticket Price"
				},
				"status": {
					"type": "integer",
					"format": "int32",
					"description": "The status od the specific return item (0 for Success, ErrorCode for error)"
				},
				"reason": {
					"type": "string",
					"description": "The  error reason"
				},
				"data": {
					"type": "array",
					"description": "The  error data",
					"items": {
						"type": "object"
					}
				}
			},
			"description": "Return ticket response"
		},
		"ReturnTicketsResponseDto": {
			"type": "object",
			"required": [
				"tickets"
			],
			"properties": {
				"tickets": {
					"type": "array",
					"description": "List of tickets returned",
					"items": {
						"originalRef": "ReturnTicketResponseDto",
						"$ref": "#/definitions/ReturnTicketResponseDto"
					}
				}
			},
			"description": "Return tickets response"
		},
		"ReturnTicketRequestDto": {
			"type": "object",
			"required": [
				"itemFrom",
				"itemTo",
				"productId",
				"unitId"
			],
			"properties": {
				"productId": {
					"type": "integer",
					"format": "int64",
					"description": "Product Id"
				},
				"unitId": {
					"type": "integer",
					"format": "int64",
					"description": "Pack Id"
				},
				"itemFrom": {
					"type": "integer",
					"format": "int64",
					"description": "Ticket From"
				},
				"itemTo": {
					"type": "integer",
					"format": "int64",
					"description": "Ticket To"
				}
			},
			"description": "Return ticket request"
		},
		"ReturnDetailsDto": {
			"type": "object",
			"properties": {
				"returnId": {
					"type": "integer",
					"format": "int32"
				},
				"barcode": {
					"type": "string"
				},
				"returnType": {
					"type": "string"
				},
				"retailerId": {
					"type": "integer",
					"format": "int32"
				},
				"productId": {
					"type": "integer",
					"format": "int32"
				},
				"productDescription": {
					"type": "string"
				},
				"unitDescription": {
					"type": "string"
				},
				"unitId": {
					"type": "integer",
					"format": "int32"
				},
				"ticketFrom": {
					"type": "integer",
					"format": "int32"
				},
				"ticketTo": {
					"type": "integer",
					"format": "int32"
				},
				"dateReturned": {
					"type": "string",
					"format": "date-time"
				},
				"dateConfirmed": {
					"type": "string",
					"format": "date-time"
				},
				"confirmationUser": {
					"type": "string"
				},
				"completed": {
					"type": "boolean"
				}
			}
		},
		"SearchReturnsResultDto": {
			"type": "object",
			"required": [
				"returns",
				"totalElements"
			],
			"properties": {
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"description": "Number of total results"
				},
				"returns": {
					"type": "array",
					"description": "List of results",
					"items": {
						"originalRef": "ReturnDetailsDto",
						"$ref": "#/definitions/ReturnDetailsDto"
					}
				}
			},
			"description": "Search Pack Returns results"
		},
		"ReturnTicketsRequestDto": {
			"type": "object",
			"properties": {
				"eanCode": {
					"type": "string",
					"description": "The EAN code of the return"
				},
				"tickets": {
					"type": "array",
					"description": "Tickets for return",
					"items": {
						"originalRef": "ReturnTicketRequestDto",
						"$ref": "#/definitions/ReturnTicketRequestDto"
					}
				}
			},
			"description": "Return tickets request"
		},
		"TicketsForReturnRequestDto": {
			"type": "object",
			"required": [
				"firstTicketBarcode"
			],
			"properties": {
				"firstTicketBarcode": {
					"type": "string",
					"description": "Ticket Barcode From"
				},
				"lastTicketBarcode": {
					"type": "string",
					"description": "Ticket Barcode To"
				}
			},
			"description": "Return ticket request"
		},
		"RmsRetailerDetailsDto": {
			"type": "object",
			"properties": {
				"retailerCd": {
					"type": "integer",
					"format": "int32"
				},
				"tradingName": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			}
		},
		"RmsKeyValueResponseDto": {
			"type": "object",
			"properties": {
				"key": {
					"type": "integer",
					"format": "int32"
				},
				"value": {
					"type": "string"
				}
			}
		},
		"TicketDocumentRequestDto": {
			"type": "object",
			"required": [
				"products"
			],
			"properties": {
				"products": {
					"type": "string",
					"description": "Product Ids"
				},
				"packs": {
					"type": "string",
					"description": "Pack Ids"
				},
				"tickets": {
					"type": "string",
					"description": "Ticket Ids"
				},
				"ticketStatusId": {
					"type": "integer",
					"format": "int32",
					"description": "Ticket status Id"
				}
			},
			"description": "Ticket Document Request Info"
		},
		"TicketInRangeSellResponseDto": {
			"type": "object",
			"required": [
				"numberOfTickets",
				"ticketFrom",
				"ticketTo",
				"totalAmount"
			],
			"properties": {
				"ticketFrom": {
					"description": "From ticket",
					"originalRef": "TicketSellResponseDto",
					"$ref": "#/definitions/TicketSellResponseDto"
				},
				"ticketTo": {
					"description": "To ticket",
					"originalRef": "TicketSellResponseDto",
					"$ref": "#/definitions/TicketSellResponseDto"
				},
				"numberOfTickets": {
					"type": "integer",
					"format": "int32",
					"description": "Number of tickets"
				},
				"totalAmount": {
					"type": "number",
					"description": "Total amount of tickets"
				}
			},
			"description": "Ticket In Range Sell Response Dto"
		},
		"TicketStatusDto": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Ticket status Id"
				},
				"name": {
					"type": "string",
					"description": "Ticket status name"
				}
			},
			"description": "Ticket Status Info"
		},
		"TicketForValidationInquireResponseDto": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"format": "int32"
				},
				"commision": {
					"type": "number"
				},
				"creditIndicator": {
					"type": "integer",
					"format": "int32"
				},
				"sellingLocation": {
					"type": "integer",
					"format": "int32"
				},
				"tier": {
					"type": "integer",
					"format": "int32"
				},
				"tierLevel": {
					"type": "integer",
					"format": "int32"
				},
				"tierType": {
					"type": "integer",
					"format": "int32"
				},
				"amounts": {
					"originalRef": "ValidationAmountsDto",
					"$ref": "#/definitions/ValidationAmountsDto"
				},
				"categoryId": {
					"type": "string"
				},
				"gift": {
					"originalRef": "ValidationGiftDto",
					"$ref": "#/definitions/ValidationGiftDto"
				},
				"payoutOption": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ValidationAmountsDto": {
			"type": "object",
			"properties": {
				"grossAmount": {
					"type": "number"
				},
				"netAmount": {
					"type": "number"
				},
				"refAmount": {
					"type": "number"
				},
				"taxAmount": {
					"type": "number"
				},
				"bonusAmount": {
					"type": "number"
				}
			}
		},
		"ValidationGiftDto": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"amount": {
					"type": "number"
				},
				"giftId": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"ValidationResponseDto": {
			"type": "object",
			"properties": {
				"tickets": {
					"type": "array",
					"items": {
						"originalRef": "TicketForValidationInquireResponseDto",
						"$ref": "#/definitions/TicketForValidationInquireResponseDto"
					}
				}
			}
		},
		"PayoutLevelDto": {
			"type": "object",
			"properties": {
				"type": {
					"type": "integer",
					"format": "int32"
				},
				"min": {
					"type": "number"
				},
				"max": {
					"type": "number"
				}
			}
		},
		"TicketForValidationInquireRequestDto": {
			"type": "object",
			"properties": {
				"transactionType": {
					"type": "string",
					"description": "Transaction Type"
				},
				"virn": {
					"type": "string",
					"description": "Virn"
				},
				"barcode": {
					"type": "string",
					"description": "Ticket Barcode"
				}
			}
		},
		"ValidationRequestDto": {
			"type": "object",
			"properties": {
				"tickets": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"originalRef": "TicketForValidationInquireRequestDto",
						"$ref": "#/definitions/TicketForValidationInquireRequestDto"
					}
				},
				"payouts": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"originalRef": "PayoutLevelDto",
						"$ref": "#/definitions/PayoutLevelDto"
					}
				}
			}
		},
		"AccPerDto": {
			"type": "object",
			"required": [
				"code",
				"endDate",
				"operator",
				"period",
				"startDate",
				"status",
				"vatPcg",
				"year"
			],
			"properties": {
				"operator": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Accounting Period Operator"
				},
				"year": {
					"type": "integer",
					"format": "int32",
					"example": 2019,
					"description": "Accounting Period Year"
				},
				"code": {
					"type": "integer",
					"format": "int32",
					"example": 10,
					"description": "Accounting Period Code"
				},
				"status": {
					"type": "integer",
					"format": "int32",
					"example": 3,
					"description": "Accounting Period Status",
					"enum": [
						1,
						2,
						3,
						4,
						5,
						6,
						7,
						8,
						10
					]
				},
				"vatPcg": {
					"type": "number",
					"example": 0.2,
					"description": "Accounting Period VAT percentage"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"example": "2019-09-23",
					"description": "Accounting Period Start Date"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"example": "2019-09-26",
					"description": "Accounting Period End Date"
				},
				"period": {
					"type": "string",
					"example": "10",
					"description": "Accounting Period XXX"
				}
			},
			"description": "Accounting Period Info DTO"
		},
		"EanDto": {
			"type": "object",
			"properties": {
				"eanPayout": {
					"type": "string"
				},
				"eanTckBox": {
					"type": "string"
				}
			}
		}
	}
}
