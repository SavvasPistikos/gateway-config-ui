{
  "swagger": "2.0",
  "info": {
    "description": "API specification",
    "version": "1.0",
    "title": "croatia-spb-adaptor"
  },
  "tags": [
    {
      "name": "Loto Betting Wagers"
    },
    {
      "name": "sportsbook"
    },
    {
      "name": "wager"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/v1.0/lotto/betting/wagers": {
      "post": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Places a betslip",
        "description": "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/lotobetting-wagerRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/lotobetting-wagerResponse.json'> response.</a>",
        "operationId": "placeBet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The place bet request domain object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BetRequest",
              "originalRef": "BetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Rolls back a betting transaction",
        "description": "Used by agj to rollback a betting transaction",
        "operationId": "rollbackTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trnsId",
            "in": "header",
            "description": "The betslip id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "RetailId",
            "in": "header",
            "description": "The retail id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The terminal id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EmployeeId",
            "in": "header",
            "description": "The employee id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ChannelId",
            "in": "header",
            "description": "The channel id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "description": "The player id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/verify": {
      "post": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Verifies a betslip",
        "description": "When a Loto Betting customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/lotobetting-verifyRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/lotobetting-verifyResponse.json'> response.</a>",
        "operationId": "verifyBet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The place bet request domain object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BetRequest",
              "originalRef": "BetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/betslips": {
      "delete": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Cancels a betslip",
        "description": "Used by terminals to cancel a betslip. The wagerId for terminal coupon and hlCouponId for online",
        "operationId": "cancelBetslip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "wagerId",
            "in": "query",
            "description": "The betslip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hlCouponId",
            "in": "query",
            "description": "The HL couponId id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "RetailId",
            "in": "header",
            "description": "The retail id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The terminal id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EmployeeId",
            "in": "header",
            "description": "The employee id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "description": "The player id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ChannelId",
            "in": "header",
            "description": "The channel id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Status",
            "in": "query",
            "description": "New status of the coupon",
            "required": true,
            "type": "string",
            "enum": [
              "CANCEL",
              "UNDO_CANCEL"
            ]
          },
          {
            "name": "CancelType",
            "in": "query",
            "description": "The cancel type",
            "required": true,
            "type": "string",
            "enum": [
              "CANCEL",
              "ADMIN_CANCEL",
              "SUPER_ADMIN_CANCEL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/trns/{trnsId}/winnings": {
      "get": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Returns the winnings for a specific transaction id (retail)",
        "description": "Returns the betslip info. Sample response <a target='_blank' href='/swagger/examples/lotobetting-winningsResponse.json'> response.</a>",
        "operationId": "findWinningsByTrnsId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trnsId",
            "in": "path",
            "description": "The L10 transaction ID that the coupon was played for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsBookBetslipFSModel",
              "originalRef": "SportsBookBetslipFSModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsBookBetslipFSModel",
              "originalRef": "SportsBookBetslipFSModel"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "AUTHENTICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/{betSlipId}/winnings": {
      "get": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Returns the winnings for a specific transaction id (retail)",
        "description": "Returns the betslip info. Sample response <a target='_blank' href='/swagger/examples/lotobetting-winningsResponse.json'> response.</a>",
        "operationId": "findWinningsByBetSlipIdId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betSlipId",
            "in": "path",
            "description": "The L10 transaction ID that the coupon was played for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsBookBetslipFSModel",
              "originalRef": "SportsBookBetslipFSModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsBookBetslipFSModel",
              "originalRef": "SportsBookBetslipFSModel"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "AUTHENTICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/trns/{trnsId}/details": {
      "get": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Returns the winnings for a specific transaction id (retail)",
        "description": "Returns the betslip info. Sample response <a target='_blank' href='/swagger/examples/lotobetting-winningsResponse.json'> response.</a>",
        "operationId": "betslipDetailsByTrnsId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trnsId",
            "in": "path",
            "description": "The L10 transaction ID that the coupon was played for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "AUTHENTICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/{betSlipId}/details": {
      "get": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Returns the details for a specific betslip id (online)",
        "description": "Returns the betslip info. Sample response <a target='_blank' href='/swagger/examples/lotobetting-detailsResponse.json'> response.</a>",
        "operationId": "betslipDetailsByCouponId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betSlipId",
            "in": "path",
            "description": "The HL coupon Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "AUTHENTICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/{trnsId}/validation": {
      "post": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Validate a betting transaction",
        "description": "Used by agj to validate a betting transaction",
        "operationId": "validateTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trnsId",
            "in": "path",
            "description": "The betslip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "RetailId",
            "in": "header",
            "description": "The retail id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The terminal id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EmployeeId",
            "in": "header",
            "description": "The employee id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ChannelId",
            "in": "header",
            "description": "The channel id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "description": "The player id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Rollsback a Validate transaction",
        "description": "Used by agj to rollback a validate transaction",
        "operationId": "rollbackValidateTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trnsId",
            "in": "path",
            "description": "The betslip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "RetailId",
            "in": "header",
            "description": "The retail id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The terminal id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EmployeeId",
            "in": "header",
            "description": "The employee id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ChannelId",
            "in": "header",
            "description": "The channel id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "description": "The player id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/lotto/betting/wagers/templates/{templateId}": {
      "get": {
        "tags": [
          "Loto Betting Wagers"
        ],
        "summary": "Retrieves a stored betslip",
        "description": "Player can use the template id provided during a betslip verification in order to retrieve the betslip details and place the wager in retail shop.",
        "operationId": "getBetslipByTemplateId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The template id. This is the mnemonic code of the stored betslip.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/configuration": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get sportsbook configuration",
        "description": "Retrieves market type and market group configuration for all defined sports. <a target='_blank' href='/swagger/examples/sportsbook-config.json'>Click here to see a sample response.</a>",
        "operationId": "getConfiguration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsbookConfigurationDTO",
              "originalRef": "SportsbookConfigurationDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsbookConfigurationDTO",
              "originalRef": "SportsbookConfigurationDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/categories/all": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a tree of all categories",
        "description": "Retrieves a tree containing all the sport hierarchy. From top to bottom: Sport(e.g. Football), Category(e.g. England), Tournament(e.g. Premier League). <a target='_blank' href='/swagger/examples/sportsbook-categories-all.json'>Click here to see a sample response.</a>. The client can filter the response using the provided query parameters.",
        "operationId": "getCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "categoryType",
            "in": "query",
            "description": "The category type to include in the response. By default all types are returned.",
            "required": false,
            "type": "string",
            "enum": [
              "sport",
              "category",
              "tournament"
            ]
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "The sport id",
            "required": false,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "The category id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/{id}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get an event by id",
        "description": "Retrieves a sportsbook event using the event id. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId": "getEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the event",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsbookEventDTO",
              "originalRef": "SportsbookEventDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsbookEventDTO",
              "originalRef": "SportsbookEventDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/code/{code}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get an event by code",
        "description": "Retrieves a sportsbook event using the event code. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId": "getEventWithCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the event",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsbookEventDTO",
              "originalRef": "SportsbookEventDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsbookEventDTO",
              "originalRef": "SportsbookEventDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/{sportId}/{from}/{to}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of events by sport",
        "description": "Retrieves a list sportsbook events using the sport id.",
        "operationId": "getEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sportId",
            "in": "path",
            "description": "The id of the sport",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "path",
            "description": "The from date in RFC 3339 or Timestamp format",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The to date in RFC 3339 or Timestamp format",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "includeMarkets",
            "in": "query",
            "description": "If markets should be included in the response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available/inplay": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get all available inplay events",
        "description": "Retrieves a list containing all sportsbook events that are available for in play betting.",
        "operationId": "getInplayEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/search": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of events that match the search term",
        "description": "Retrieves a list sportsbook events based on the search term and optional filtering and paging parameters",
        "operationId": "searchEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "The search term",
            "required": true,
            "type": "string"
          },
          {
            "name": "onlyIds",
            "in": "header",
            "description": "True if only event Ids should be returned. Default to false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "The id of the sport",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "Used for pagination (defaults to page 0)",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Used for pagination (defaults to 10)",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Normal filter parameter, e.g. can filter based on siteId (probably not relevant)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/categories/available": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a tree of categories that have available events",
        "description": "Retrieves a tree containing the currently active sport hierarchy. From top to bottom: Sport(e.g. Football), Category(e.g. England), Tournament(e.g. Premier League). <a target='_blank' href='/swagger/examples/sportsbook-categories-available.json'>Click here to see a sample response.</a>",
        "operationId": "getAvailableCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/participants": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of all participants",
        "description": "Retrieves a list of all defined participants.",
        "operationId": "getAllParticipants",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParticipantDTO",
                "originalRef": "ParticipantDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParticipantDTO",
                "originalRef": "ParticipantDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/participants/{sportId}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of participants for a sport",
        "description": "Retrieves a list of defined participants for a sport. Additional filtering by tournament id is possible.",
        "operationId": "getSportParticipants",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "sportId",
            "in": "path",
            "description": "The sport id filter",
            "required": true,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "tournamentId",
            "in": "query",
            "description": "The tournament id filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParticipantDTO",
                "originalRef": "ParticipantDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParticipantDTO",
                "originalRef": "ParticipantDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/participants/{sportId}/{participantId}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a participant for a sport by id",
        "description": "Retrieves a participant for a sport by id.",
        "operationId": "getParticipantById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "sportId",
            "in": "path",
            "description": "The sport id filter",
            "required": true,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "participantId",
            "in": "path",
            "description": "The participant id filter",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/ParticipantDTO",
              "originalRef": "ParticipantDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/ParticipantDTO",
              "originalRef": "ParticipantDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/{id}/allDefinedMarkets": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get an event by id with all defined markets",
        "description": "Retrieves a sportsbook event containing all of its markets using the event id. Odds are not provided. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId": "getEventWithAllMarkets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the event",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/SportsbookEventWithAllMarketsDTO",
              "originalRef": "SportsbookEventWithAllMarketsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/SportsbookEventWithAllMarketsDTO",
              "originalRef": "SportsbookEventWithAllMarketsDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get all available events",
        "description": "Retrieves a list containing all sportsbook events that are available for betting. <a target='_blank' href='/swagger/examples/sportsbook-event-all.json'>Click here to see a sample response.</a>",
        "operationId": "getAvailableEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "ignoreEventsWithoutCouponCodes",
            "in": "query",
            "description": "Whether to ignore events without coupon codes. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available/minified": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get all available events in minified format",
        "description": "Retrieves a list containing all sportsbook events that are available for betting. <a target='_blank' href='/swagger/examples/sportsbook-event-all.json'>Click here to see a sample response.</a>",
        "operationId": "getAvailableEventsMinified",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "ignoreEventsWithoutCouponCodes",
            "in": "query",
            "description": "Whether to ignore events without coupon codes. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventMinifiedDTO",
                "originalRef": "SportsbookEventMinifiedDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventMinifiedDTO",
                "originalRef": "SportsbookEventMinifiedDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available/version": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get the version of each available event",
        "description": "Retrieves a list containing a summary of all sportsbook events that are available for betting. <a target='_blank' href='/swagger/examples/sportsbook-event-versions.json'>Click here to see a sample response.</a>",
        "operationId": "getAvailableEventsVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "includePrematch",
            "in": "query",
            "description": "Whether to include available prematch events. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeOutrights",
            "in": "query",
            "description": "Whether to include available outright events. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeInplay",
            "in": "query",
            "description": "Whether to include available inplay events. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "ignoreEventsWithNoMarkets",
            "in": "query",
            "description": "Whether to ignore events that have no available markets. Default value true.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventVersionDTO",
                "originalRef": "SportsbookEventVersionDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventVersionDTO",
                "originalRef": "SportsbookEventVersionDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available/prematch/highlights": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of available highlighted prematch events",
        "description": "Retrieves a list containing some sportsbook prematch(not in play) events that are highlighted by the CMS operators.",
        "operationId": "getTopPrematchEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "The sport id filter",
            "required": false,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of events in the response. Default is 10.",
            "required": false,
            "type": "integer",
            "default": 10,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/available/selections/popular": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of popular event selections",
        "description": "Retrieves a list containing the identifiers of the selections that are marked as popular on the betting provider.",
        "operationId": "getEventPopularSelections",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PopularSelection",
                "originalRef": "PopularSelection"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PopularSelection",
                "originalRef": "PopularSelection"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/categories/resulted": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a tree of categories that have resulted events",
        "description": "",
        "operationId": "getResultCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookCategoryDTO",
                "originalRef": "SportsbookCategoryDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/resulted/{sportId}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a page of resulted events of a sport",
        "description": "",
        "operationId": "getResultedEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Date from filter for event date in yyyy-mm-dd format",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          {
            "name": "sportId",
            "in": "path",
            "description": "The sport id filter",
            "required": true,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "The category id filter",
            "required": false,
            "type": "string",
            "pattern": "^c-.*"
          },
          {
            "name": "competitionId",
            "in": "query",
            "description": "The competition id filter",
            "required": false,
            "type": "string",
            "pattern": "^t-.*"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "required": true,
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size",
            "required": true,
            "type": "integer",
            "default": 50,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort parameter",
            "required": true,
            "type": "string",
            "enum": [
              "NONE",
              "DATE",
              "DATE_COMPETITION",
              "DATE_DESC",
              "DATE_DESC_COMPETITION",
              "COMPETITION"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/ResultsPageDTO",
              "originalRef": "ResultsPageDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/ResultsPageDTO",
              "originalRef": "ResultsPageDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/resulted/history": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get history of events",
        "description": "Retrieves a list containing all the events' history during a specific timeslot ",
        "operationId": "getResultedHistoryByDate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "The sport id filter",
            "required": true,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The Start Date",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The End Date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/{eventId}/resulted/history": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get history of events",
        "description": "Retrieves a list containing all the events' history during a specific timeslot ",
        "operationId": "getResultedHistoryByEventId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The event id ",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/football": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of football events",
        "description": "Retrieves a list of football events for BOS",
        "operationId": "getFootBallEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "minTime",
            "in": "query",
            "description": "The minTime in timestamp eg 1517731596192. If not set defaults to NOW",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "maxTime",
            "in": "query",
            "description": "The maxTime in timestamp eg 1517731596192",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "system",
            "in": "query",
            "description": "The system",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/FootballEventResponse",
              "originalRef": "FootballEventResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/FootballEventResponse",
              "originalRef": "FootballEventResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/resulted/{sportId}/ids": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of resulted events by ids",
        "description": "",
        "operationId": "getResultedEventsByIds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": true,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "sportId",
            "in": "path",
            "description": "The sport id filter",
            "required": true,
            "type": "string",
            "pattern": "^s-.*"
          },
          {
            "name": "eventIds",
            "in": "query",
            "description": "List of event ids",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "maxItems": 2147483647,
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SportsbookEventDTO",
                "originalRef": "SportsbookEventDTO"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/champions": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of betting champions",
        "description": "",
        "operationId": "getBettingChampions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingChampion",
                "originalRef": "BettingChampion"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingChampion",
                "originalRef": "BettingChampion"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/sportsbook/events/participants/{id}": {
      "get": {
        "tags": [
          "sportsbook"
        ],
        "summary": "Get a list of event Ids by participant Id",
        "description": "Retrieves a list of event Ids that the participant whose Id was given competes in",
        "operationId": "getEventsByParticipantId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the participant",
            "required": true,
            "type": "string",
            "pattern": "^p-.*"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string",
            "default": "en-gb"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "The channel Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "The system authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers": {
      "post": {
        "tags": [
          "wager"
        ],
        "summary": "Places a betslip",
        "description": "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-wagerRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-wagerResponse.json'> response.</a>",
        "operationId": "placeBet_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extendedResponse",
            "in": "header",
            "description": "If true selections/markets/events descriptions & events kickoff time will be returned",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The place bet request domain object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BetRequest",
              "originalRef": "BetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "wager"
        ],
        "summary": "Rollback a betslip",
        "description": "Used to rollback a betslip in case of timeout or of error after the betslip submission.",
        "operationId": "undoBet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The undo bet request domain object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UndoRequest",
              "originalRef": "UndoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RejectBetsResponse",
              "originalRef": "RejectBetsResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/RejectBetsResponse",
              "originalRef": "RejectBetsResponse"
            }
          },
          "204": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/RejectBetsResponse",
              "originalRef": "RejectBetsResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/RejectBetsResponse",
              "originalRef": "RejectBetsResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/verify": {
      "post": {
        "tags": [
          "wager"
        ],
        "summary": "Verifies a betslip",
        "description": "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-verifyRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-verifyResponse.json'> response.</a>",
        "operationId": "verifyBet_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The place bet request domain object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BetRequest",
              "originalRef": "BetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/betslips/{betSlipId}": {
      "delete": {
        "tags": [
          "wager"
        ],
        "summary": "Cancels a betslip",
        "description": "Used by terminals to cancel a betslip",
        "operationId": "cancelBetslip_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "header",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "name": "betSlipId",
            "in": "path",
            "description": "The betslip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TerminalCancelRequest",
              "originalRef": "TerminalCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/TerminalCancelResponse",
              "originalRef": "TerminalCancelResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/{betId}/success": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the success status for a specific bet id",
        "description": "Returns the the status and winnings for a specific bet id",
        "operationId": "findSuccess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betId",
            "in": "path",
            "description": "The bet IDs that the player ask for",
            "required": true,
            "type": "string"
          },
          {
            "name": "excludePartialCashOutBet",
            "in": "query",
            "description": "True: Exclude all the bets that are created through a partial cash out. False: Include them",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeWinSelections",
            "in": "query",
            "description": "True: Include WinSelections",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/FindSuccessResponseDTO",
              "originalRef": "FindSuccessResponseDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/FindSuccessResponseDTO",
              "originalRef": "FindSuccessResponseDTO"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/{betId}/details": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the full details for a specific bet id",
        "description": "Returns the full bet info",
        "operationId": "betDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betId",
            "in": "path",
            "description": "The bet IDs that the player ask for",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeEventResults",
            "in": "query",
            "description": "If the event result have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeChildBetSummaries",
            "in": "query",
            "description": "If the child bet summaries have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludePartialCashOutBet",
            "in": "query",
            "description": "True: Exclude all the bets that are created through a partial cash out. False: Include them",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeWinSelections",
            "in": "query",
            "description": "True: Include WinSelections",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetExtended",
              "originalRef": "BetExtended"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetExtended",
              "originalRef": "BetExtended"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/{uid}/b2b/details": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the full details for a specific betSlipId",
        "description": "Returns the full bet info",
        "operationId": "betDetailsB2B",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "The betSlipId or betId that the client asked for",
            "required": true,
            "type": "string"
          },
          {
            "name": "isBetId",
            "in": "query",
            "description": "If uid provided is a betId this must be true. If false uid is considered betSlipId",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeEventResults",
            "in": "query",
            "description": "If the event result have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeChildBetSummaries",
            "in": "query",
            "description": "If the child bet summaries have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludePartialCashOutBet",
            "in": "query",
            "description": "True: Exclude all the bets that are created through a partial cash out. False: Include them",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeWinSelections",
            "in": "query",
            "description": "True: Include WinSelections",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BetExtended",
                "originalRef": "BetExtended"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BetExtended",
                "originalRef": "BetExtended"
              }
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/{betId}": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the details for a specific bet id",
        "description": "Returns the bet info",
        "operationId": "betHistory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betId",
            "in": "path",
            "description": "The bet IDs that the player ask for",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeEventResults",
            "in": "query",
            "description": "If the event result have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeChildBetSummaries",
            "in": "query",
            "description": "If the child bet summaries have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludePartialCashOutBet",
            "in": "query",
            "description": "True: Exclude all the bets that are created through a partial cash out. False: Include them",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeWinSelections",
            "in": "query",
            "description": "True: Include WinSelections",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/betslips/{betslipId}/details": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the details for a specific betslip id",
        "description": "Returns the betslip info",
        "operationId": "betslipDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "betslipId",
            "in": "path",
            "description": "The betslip ID that the player ask for",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeEventResults",
            "in": "query",
            "description": "If the event result have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeChildBetSummaries",
            "in": "query",
            "description": "If the child bet summaries have to be returned",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludePartialCashOutBet",
            "in": "query",
            "description": "True: Exclude all the bets that are created through a partial cash out. False: Include them",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeWinSelections",
            "in": "query",
            "description": "True: Include WinSelections",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/betslips/{id}/bets": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Returns the bets of a specific betslip id",
        "description": "Returns the bets in specific betslip",
        "operationId": "findByBetslip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The beslipId that the player ask for",
            "required": true,
            "type": "string"
          },
          {
            "name": "retailerExtId",
            "in": "query",
            "description": "The retailerExtId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/betslips/{betSlipId}/settlements": {
      "put": {
        "tags": [
          "wager"
        ],
        "summary": "Settles a betslip",
        "description": "Used by terminals to settle a betslip",
        "operationId": "settleBetslip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "header",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "name": "betSlipId",
            "in": "path",
            "description": "The betslip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TerminalPayRequestL10",
              "originalRef": "TerminalPayRequestL10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/PaySuccessResponse",
              "originalRef": "PaySuccessResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaySuccessResponse",
              "originalRef": "PaySuccessResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/betslips/rollback": {
      "delete": {
        "tags": [
          "wager"
        ],
        "summary": "Rollback a paid or canceled betslip",
        "description": "Used by terminals to rollback the cancellation or payment of a betslip",
        "operationId": "rollBackBetslip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "header",
            "description": "The transaction id used in pay or cancel",
            "required": true,
            "type": "string"
          },
          {
            "name": "rollbackFrom",
            "in": "header",
            "description": "rollbackFrom PAID or CANCELLED",
            "required": true,
            "type": "string",
            "enum": [
              "PAID",
              "CANCELLED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/RollbackRetailResponse",
              "originalRef": "RollbackRetailResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/RollbackRetailResponse",
              "originalRef": "RollbackRetailResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/templates/{templateId}": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Retrieves a stored betslip",
        "description": "Player can use the template id provided during a betslip verification in order to retrieve the betslip details and place the wager in retail shop.",
        "operationId": "getBetslipByTemplateId_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The template id. This is the mnemonic code of the stored betslip.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/BetResponse",
              "originalRef": "BetResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    },
    "/api/v1.0/wagers/calculate/betbuilder": {
      "get": {
        "tags": [
          "wager"
        ],
        "summary": "Calculates build bet price.",
        "description": "",
        "operationId": "calculateBuildABetPrice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "The event id",
            "required": true,
            "type": "string"
          },
          {
            "name": "selectionIds",
            "in": "query",
            "description": "A comma separated list of selection ids",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "$ref": "#/definitions/CalculatePriceResponse",
              "originalRef": "CalculatePriceResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CalculatePriceResponse",
              "originalRef": "CalculatePriceResponse"
            }
          },
          "400": {
            "description": "VALIDATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "APPLICATION ERROR",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Mono": {
      "type": "object"
    },
    "MonoBetResponse": {
      "type": "object"
    },
    "BetExtended": {
      "type": "object",
      "required": [
        "selections",
        "stake",
        "system"
      ],
      "properties": {
        "selections": {
          "type": "array",
          "description": "The bet selections",
          "items": {
            "$ref": "#/definitions/Selection",
            "originalRef": "Selection"
          }
        },
        "stake": {
          "description": "The stake amount after tax (actual stake)",
          "$ref": "#/definitions/Stake",
          "originalRef": "Stake"
        },
        "system": {
          "description": "The selected bet system. Click <a target='_blank' href='/swagger/examples/system-combinations.xlsx'>here</a> to download the full system types table",
          "$ref": "#/definitions/System",
          "originalRef": "System"
        },
        "checkOdds": {
          "type": "integer",
          "format": "int32",
          "description": "Check type of the additional odds data. The system will reject a coupons when: 1. a selected forecast has lower current Odds or different current Handicap / UO value than these the player has seen  2. a selected forecast has different current Odds / Handicap / UO value than these the player has seen 3. a selected forecast has different Handicap / UO value than these the player has seen"
        },
        "totalStake": {
          "type": "number",
          "description": "Total selection stake"
        },
        "potentialPayout": {
          "type": "number",
          "description": "The potential payout"
        },
        "totalOdds": {
          "type": "number",
          "description": "Total odds of the specific bet part"
        },
        "betId": {
          "type": "integer",
          "format": "int64",
          "description": "The bet id"
        },
        "betNo": {
          "type": "integer",
          "format": "int32",
          "description": "The bet number"
        },
        "status": {
          "type": "string",
          "description": "Status of the part bet(e.g. ACCEPTED, REJECTED, VOID)"
        },
        "rejectionReason": {
          "type": "string",
          "description": "The reason why a bet has been rejected"
        },
        "liveBet": {
          "type": "boolean",
          "description": "Live bet indicator"
        },
        "cashOut": {
          "type": "boolean",
          "description": "In case this bet can be cashed out"
        },
        "totalPrice": {
          "type": "number",
          "description": "The total price of the bet"
        },
        "limitedStake": {
          "type": "number",
          "description": "When bet limit or stake limit validation fails, this contains the maximum stake the user can enter, in their currency"
        },
        "betTime": {
          "type": "string",
          "format": "date-time",
          "description": "Bet accepted Epoch time in msecs"
        },
        "channelId": {
          "type": "integer",
          "format": "int64",
          "description": "Channel ID that this bet part was played"
        },
        "barcode": {
          "type": "string",
          "description": "The betId in string (croatia)"
        },
        "payout": {
          "type": "number",
          "description": "Settled winning amount (net)"
        },
        "displayStatus": {
          "type": "string",
          "description": "Status of the part bet"
        },
        "overAskId": {
          "type": "string",
          "description": "Over/Ask identification number"
        },
        "extBetId": {
          "type": "string",
          "description": "The reserveRef in PAM. Used for over/ask."
        },
        "totalCost": {
          "type": "number",
          "description": "Bet's total cost that the player have pay"
        },
        "paidTime": {
          "type": "string",
          "format": "date-time",
          "description": "When the bet was paid"
        },
        "buildABet": {
          "type": "boolean",
          "description": "Indicates that bet is created by bet builder."
        },
        "payoutPerWonEvent": {
          "type": "array",
          "description": "The payout per number of won events. Applicable for system bets.",
          "items": {
            "$ref": "#/definitions/PayoutPerWonEvent",
            "originalRef": "PayoutPerWonEvent"
          }
        },
        "systemDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemDetails",
            "originalRef": "SystemDetails"
          }
        },
        "capturedStake": {
          "description": "The stake before tax",
          "$ref": "#/definitions/Stake",
          "originalRef": "Stake"
        },
        "taxOnStakePcnt": {
          "type": "number",
          "description": "Taxation percentage on stake amount"
        },
        "taxOnStakeAmount": {
          "type": "number",
          "description": "Taxation on stake amount"
        },
        "taxOnReturnsDetails": {
          "type": "array",
          "description": "Taxation on winnings amounts",
          "items": {
            "$ref": "#/definitions/TaxOnReturnDetails",
            "originalRef": "TaxOnReturnDetails"
          }
        },
        "taxOnReturnsAmount": {
          "type": "number",
          "description": "Taxation on winnings total amount"
        },
        "childBetSummaries": {
          "type": "array",
          "description": "Summaries for child bets",
          "items": {
            "$ref": "#/definitions/ChildBetSummary",
            "originalRef": "ChildBetSummary"
          }
        },
        "betSlipId": {
          "type": "integer",
          "format": "int64",
          "description": "Betslip identification number that the system gives to the specific bet"
        },
        "betStatus": {
          "type": "string",
          "description": "Status of the part bet",
          "enum": [
            "ACCEPTED",
            "REJECTED",
            "VOID",
            "SETTLED"
          ]
        },
        "resulted": {
          "type": "boolean",
          "description": "Is selection resulted"
        },
        "winnings": {
          "type": "number",
          "description": "The gross winning amount (before tax)"
        },
        "parts": {
          "description": "Bet parts",
          "$ref": "#/definitions/Parts",
          "originalRef": "Parts"
        },
        "additionalProperties": {
          "type": "object",
          "description": "Additional custom properties that do not fit in the model",
          "additionalProperties": {
            "type": "object"
          }
        },
        "currentlyInplay": {
          "type": "boolean"
        }
      },
      "description": "Contains extra information on a Bet"
    },
    "BetPart": {
      "type": "object",
      "properties": {
        "winSelections": {
          "type": "array",
          "description": "The selections of the market that are winning",
          "items": {
            "$ref": "#/definitions/EntitySummary",
            "originalRef": "EntitySummary"
          }
        },
        "eventResult": {
          "description": "The event result",
          "$ref": "#/definitions/EventResult",
          "originalRef": "EventResult"
        },
        "selection": {
          "description": "The selection",
          "$ref": "#/definitions/EntitySummary",
          "originalRef": "EntitySummary"
        }
      },
      "description": "Contains extra information on selection"
    },
    "BetResponse": {
      "type": "object",
      "required": [
        "betSlipId",
        "bets"
      ],
      "properties": {
        "acceptPriceChange": {
          "type": "boolean",
          "description": "If there is or not any price changed (true or false)"
        },
        "acceptOdds": {
          "type": "integer",
          "format": "int32",
          "description": "Accept odds types: 1 = Higher Odds, 2 = All, 3 = None (Only same odds)"
        },
        "bets": {
          "type": "array",
          "description": "List of placed bets",
          "items": {
            "$ref": "#/definitions/BetExtended",
            "originalRef": "BetExtended"
          }
        },
        "betSlipId": {
          "type": "integer",
          "format": "int64",
          "description": "The parent id of all bets on this request"
        },
        "gameId": {
          "type": "integer",
          "format": "int64",
          "description": "The gameId i.e. 15000"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of bets"
        },
        "placedTime": {
          "type": "integer",
          "format": "int64",
          "description": "Placed time of the bet"
        },
        "sumOfStake": {
          "type": "number",
          "description": "The sumOfStake"
        },
        "sumOfPayout": {
          "type": "number",
          "description": "The sumOfPayout"
        },
        "sumOfTotalCost": {
          "type": "number",
          "description": "The sumOfTotalCost"
        },
        "templateId": {
          "type": "string",
          "description": "The mnemonic code of the betslip. Player can play it in retail shop using this code."
        }
      },
      "description": "The place bet response"
    },
    "ChildBetSummary": {
      "type": "object",
      "properties": {
        "selectionIds": {
          "type": "array",
          "description": "Selection identification number in a specific BetId",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "displayStatus": {
          "type": "string",
          "description": "Combination display status of the specific BetId",
          "enum": [
            "OPEN",
            "CASHED",
            "LOSE",
            "WIN",
            "CLOSED"
          ]
        },
        "totalPrice": {
          "type": "number",
          "description": "Combination's total price/odds"
        },
        "payout": {
          "type": "number",
          "description": "This amount is non-zero when the displayStatus has on of the below values: CASHED,WIN"
        }
      },
      "description": "Summary for Child Bet"
    },
    "EntitySummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Entity identification number"
        },
        "name": {
          "type": "string",
          "description": "Entity name"
        },
        "code": {
          "type": "string",
          "description": "Entity description code"
        },
        "subCode": {
          "type": "string",
          "description": "Entity description sub-code"
        },
        "names": {
          "description": "Entity names",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        }
      },
      "description": "Summary for a sports entity"
    },
    "EventResult": {
      "type": "object",
      "required": [
        "reason"
      ],
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Event start time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Event finish time"
        },
        "event": {
          "type": "string",
          "description": "Event name"
        },
        "competition": {
          "type": "string",
          "description": "Competition name"
        },
        "category": {
          "type": "string",
          "description": "Category"
        },
        "sport": {
          "type": "string",
          "description": "Sport"
        },
        "score": {
          "type": "string",
          "description": "Event score"
        },
        "halfTimeScore": {
          "type": "string",
          "description": "Event half-time score"
        },
        "outright": {
          "type": "boolean",
          "description": "Is outright"
        },
        "abandoned": {
          "type": "boolean",
          "description": "Is abandoned"
        },
        "reason": {
          "type": "string",
          "description": "Result reason"
        }
      },
      "description": "Info for event result"
    },
    "Names": {
      "type": "object",
      "properties": {
        "longName": {
          "type": "string",
          "description": "Long name"
        },
        "shortName": {
          "type": "string",
          "description": "Short name"
        },
        "veryshortName": {
          "type": "string",
          "description": "Very short name"
        }
      },
      "description": "Bet part names"
    },
    "OddData": {
      "type": "object",
      "required": [
        "decimal"
      ],
      "properties": {
        "decimal": {
          "type": "number",
          "format": "double",
          "description": "Decimal odds of each selection (e.g. 2,60)"
        }
      },
      "description": "The odds data object contains info about the odds"
    },
    "Odds": {
      "type": "object",
      "properties": {
        "dec": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "frac": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "rootIdx": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "Parts": {
      "type": "object",
      "properties": {
        "betPart": {
          "type": "array",
          "description": "Contains extra information on selections",
          "items": {
            "$ref": "#/definitions/BetPart",
            "originalRef": "BetPart"
          }
        }
      }
    },
    "PayoutPerWonEvent": {
      "type": "object",
      "properties": {
        "minPayout": {
          "type": "number",
          "format": "double"
        },
        "maxPayout": {
          "type": "number",
          "format": "double"
        },
        "nrOfEvents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Selection": {
      "type": "object",
      "required": [
        "odds",
        "partNo",
        "selectionId"
      ],
      "properties": {
        "partNo": {
          "type": "integer",
          "format": "int32",
          "description": "The number of the selection. If there are 3 selections they should have 1,2,3 respectively"
        },
        "selectionId": {
          "type": "string",
          "description": "The selection id(For Iflex will be \"MARK_CODE_EVENT_CODE\")"
        },
        "eventId": {
          "type": "integer",
          "format": "int32",
          "description": "The event id"
        },
        "odds": {
          "description": "The odds data object",
          "$ref": "#/definitions/OddData",
          "originalRef": "OddData"
        },
        "newOdds": {
          "description": "When odds are changed we get the new ones.",
          "$ref": "#/definitions/Odds",
          "originalRef": "Odds"
        },
        "banker": {
          "type": "boolean",
          "description": "The banker definition"
        },
        "status": {
          "type": "string",
          "description": "The status of the selection, equivalent to the status of the BetPartPlacementResult"
        },
        "marketId": {
          "type": "integer",
          "format": "int64",
          "description": "The market ID"
        },
        "selectionNames": {
          "description": "An object contain variations of names",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "selectionName": {
          "type": "string",
          "description": "The selection name"
        },
        "marketName": {
          "type": "string",
          "description": "The market name"
        },
        "eventName": {
          "type": "string",
          "description": "The event name"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The event kickoff time"
        },
        "resultType": {
          "type": "string",
          "description": "Result description of selection result: e.g NOT_SET,WIN,LOST"
        },
        "inplay": {
          "type": "boolean",
          "description": "inplay"
        },
        "pitcherAName": {
          "type": "string",
          "description": "pitcherAName"
        },
        "pitcherBName": {
          "type": "string",
          "description": "pitcherBName"
        }
      },
      "description": "The selection domain object used to define the selections per bet"
    },
    "Stake": {
      "type": "object",
      "required": [
        "amount",
        "currency"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "double",
          "description": "Betting amount on each combination will be produced from those parts"
        },
        "amountPerSystem": {
          "type": "array",
          "description": "The stake per system",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "currency": {
          "type": "string",
          "description": "Description of the currency with letters e.g. \"GBP\""
        }
      },
      "description": "The stake data object contains the stake amount info"
    },
    "System": {
      "type": "object",
      "properties": {
        "systems": {
          "type": "array",
          "description": "The bet systems selected",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "description": "The system domain object which defines the bet type and describes the system type"
    },
    "SystemDetails": {
      "type": "object",
      "required": [
        "maxPayout",
        "minPayout",
        "numOfCombinations",
        "stakePerSystem",
        "systemId"
      ],
      "properties": {
        "systemId": {
          "type": "integer",
          "format": "int32",
          "description": "The system Id. 1 for single bet, 2 for doubles, 3 for triples etc"
        },
        "numOfCombinations": {
          "type": "integer",
          "format": "int64",
          "description": "The number of combinations (columns) that are created by the system"
        },
        "stakePerSystem": {
          "type": "number",
          "description": "The system's total stake"
        },
        "minPayout": {
          "type": "number",
          "description": "Win amount if you win the combination with the lowest odds"
        },
        "maxPayout": {
          "type": "number",
          "description": "Win amount if you win the combination with the highest odds"
        },
        "desc": {
          "type": "string",
          "description": "System description"
        },
        "totalPrice": {
          "type": "number",
          "description": "The system's odds"
        }
      }
    },
    "TaxOnReturnDetails": {
      "type": "object",
      "properties": {
        "rate": {
          "type": "number",
          "description": "Tax on winnings percentage"
        },
        "value": {
          "type": "number",
          "description": "Tax on winnings value"
        }
      }
    },
    "FaultInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "data": {
          "type": "object",
          "description": "The error data which is an abstract object that may be used to provide any error metadata"
        },
        "source": {
          "type": "string",
          "description": "The application at which the API error occured"
        },
        "type": {
          "type": "string",
          "description": "The error family, e.g. RUNTIME, VALIDATION, etc"
        },
        "guid": {
          "type": "string",
          "description": "The unique identifier of the error process"
        }
      },
      "description": "The FaultInfo object contains all the details assosiated with an API error"
    },
    "BetRequest": {
      "type": "object",
      "required": [
        "bets",
        "extBetslipId",
        "sumOfStake",
        "sumOfTotalCost",
        "transaction"
      ],
      "properties": {
        "playerId": {
          "type": "integer",
          "format": "int64",
          "description": "The player id"
        },
        "bets": {
          "type": "array",
          "description": "List of placed bets",
          "items": {
            "$ref": "#/definitions/BetExtended",
            "originalRef": "BetExtended"
          }
        },
        "transaction": {
          "description": "The transaction request",
          "$ref": "#/definitions/Transaction",
          "originalRef": "Transaction"
        },
        "acceptPriceChange": {
          "type": "boolean",
          "description": "The acceptPriceChange"
        },
        "acceptOdds": {
          "type": "integer",
          "format": "int32",
          "description": "Accept odds types: 1 = Higher Odds, 2 = All, 3 = None (Only same odds)"
        },
        "extBetslipId": {
          "type": "string",
          "description": "Used for undo bet request"
        },
        "sumOfStake": {
          "type": "number",
          "description": "Total stake after tax"
        },
        "sumOfTotalCost": {
          "type": "number",
          "description": "Total cost of ticket before tax"
        },
        "templateId": {
          "type": "string",
          "description": "The templateId"
        }
      },
      "description": "The place bet request object used to define request for a bet slip"
    },
    "Transaction": {
      "type": "object",
      "required": [
        "channelId",
        "id",
        "transactionTime"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "A unique internal id of the transaction request"
        },
        "channelId": {
          "type": "integer",
          "format": "int32",
          "description": "The related channel"
        },
        "retailerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the retailer"
        },
        "retailerTerminalId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the retailer terminal"
        },
        "retailerEmployeeId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the retailer employee"
        },
        "transactionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the transaction occurred"
        }
      },
      "description": "The transaction object which contains the transaction metadata"
    },
    "BetCancellationOutcome": {
      "type": "object",
      "required": [
        "betStatus",
        "cancellationOutcome"
      ],
      "properties": {
        "betID": {
          "type": "integer",
          "format": "int64"
        },
        "betStatus": {
          "type": "string",
          "enum": [
            "OPEN",
            "WIN",
            "LOSE",
            "PAID",
            "CANCELLED",
            "CLOSED",
            "PENDING",
            "PENDING_CASHOUT",
            "CASHED",
            "RESULTING",
            "REJECTED",
            "EXPIRED"
          ]
        },
        "cancellationOutcome": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "failureReason": {
          "type": "string",
          "enum": [
            "ALREADY_CANCELLED",
            "CANCEL_NOT_ALLOWED",
            "BET_CANCELATION_EXPIRED",
            "OVERASK_PENDING"
          ]
        },
        "stakeAmount": {
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TerminalCancelResponse": {
      "type": "object",
      "required": [
        "cancellationOutcome"
      ],
      "properties": {
        "betSlipID": {
          "type": "integer",
          "format": "int64"
        },
        "bets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BetCancellationOutcome",
            "originalRef": "BetCancellationOutcome"
          }
        },
        "cancellationOutcome": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "failureReason": {
          "type": "string",
          "enum": [
            "SAME_RETAILER_AS_PLAY_REQUIRED",
            "PROMOTION_MUST_BE_CANCELLED_FIRST",
            "UNKNOWN_BETSLIP",
            "CONFIRMATION_REQUIRED",
            "BETSLIP_CANCELATION_EXPIRED"
          ]
        },
        "totalCancelAmount": {
          "type": "number",
          "format": "double"
        },
        "totalDiscountAmount": {
          "type": "number",
          "format": "double"
        },
        "placedTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MonoSportsBookBetslipFSModel": {
      "type": "object"
    },
    "MinifiedBetModelPublic": {
      "type": "object",
      "properties": {
        "betId": {
          "type": "integer",
          "format": "int64",
          "description": "used for find winnings response"
        },
        "cashOut": {
          "type": "boolean",
          "description": "used for find winnings response"
        },
        "displayStatus": {
          "type": "string",
          "description": "used for find winnings response"
        },
        "payout": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "stake": {
          "description": "used for find winnings response",
          "$ref": "#/definitions/Stake",
          "originalRef": "Stake"
        },
        "status": {
          "type": "string",
          "description": "used for find winnings response"
        },
        "totalCost": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "betPaymentResult": {
          "type": "string",
          "description": "used for validation response"
        },
        "failureReason": {
          "type": "string",
          "description": "used for validation response"
        },
        "bonusAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "grossAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "netAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "refundAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "stakeAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "wagerPlacedTime": {
          "type": "string",
          "format": "date-time",
          "description": "used for validation response"
        },
        "wagerSettledTime": {
          "type": "string",
          "format": "date-time",
          "description": "used for validation response"
        },
        "taxOnReturnsAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "refundTaxOnReturnsAmount": {
          "type": "number",
          "description": "used for validation response"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "paymentStatus": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SportsBookBetslipFSModel": {
      "type": "object",
      "properties": {
        "acceptPriceChange": {
          "type": "boolean",
          "description": "used for find winnings response"
        },
        "bets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MinifiedBetModelPublic",
            "originalRef": "MinifiedBetModelPublic"
          }
        },
        "gameId": {
          "type": "integer",
          "format": "int64",
          "description": "used for find winnings response"
        },
        "result": {
          "description": "used for find winnings response",
          "$ref": "#/definitions/ResponseMessage",
          "originalRef": "ResponseMessage"
        },
        "sumOfBonusWinnings": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "sumOfPayout": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "sumOfStake": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "sumOfTotalCost": {
          "type": "number",
          "description": "used for find winnings response"
        },
        "betslipId": {
          "type": "integer",
          "format": "int64",
          "description": "used for validation response"
        },
        "paymentFailureReason": {
          "type": "string",
          "description": "used for validation response"
        },
        "paymentOutcome": {
          "type": "string",
          "description": "used for validation response"
        },
        "sumOfBonusAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "sumOfGrossAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "sumOfNetAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "sumOfRefundAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "sumOfStakeAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "sumOfTaxOnReturnsAmount": {
          "type": "number",
          "description": "used for validation response"
        },
        "placedTime": {
          "type": "integer",
          "format": "int64",
          "description": "used for validation response"
        },
        "transactionTime": {
          "type": "integer",
          "format": "int64",
          "description": "used for validation response"
        }
      }
    },
    "HLPlusRule": {
      "type": "object",
      "properties": {
        "totalEvents": {
          "type": "integer",
          "format": "int32",
          "description": "Number of events selected"
        },
        "plusEvents": {
          "type": "integer",
          "format": "int32",
          "description": "Number of HL plus events that can be selected for the number of events selected"
        }
      }
    },
    "MarketGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the market group"
        },
        "name": {
          "type": "string",
          "description": "The name of the market group"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The market group order"
        },
        "marketTypes": {
          "type": "array",
          "description": "A list containing the id of the market types that belong to this group",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MarketType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The default name of the market type"
        },
        "description": {
          "type": "string",
          "description": "Free text description of the market"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order of the market"
        }
      }
    },
    "SportConfigurationDTO": {
      "type": "object",
      "properties": {
        "marketGroups": {
          "type": "object",
          "description": "A map containing all the market groups and their corresponding market types. The key of the map is the market group id.",
          "additionalProperties": {
            "$ref": "#/definitions/MarketGroup",
            "originalRef": "MarketGroup"
          }
        },
        "marketTypes": {
          "type": "object",
          "description": "A map containing all the market types. The key of the map is the market type id.",
          "additionalProperties": {
            "$ref": "#/definitions/MarketType",
            "originalRef": "MarketType"
          }
        }
      },
      "description": "The SportConfigurationDTO object contains market type and market group configuration for the defined sports."
    },
    "SportsbookConfigurationDTO": {
      "type": "object",
      "properties": {
        "sportConfiguration": {
          "type": "object",
          "description": "A map containing the sport configuration. The key of the map is the sport id.",
          "additionalProperties": {
            "$ref": "#/definitions/SportConfigurationDTO",
            "originalRef": "SportConfigurationDTO"
          }
        },
        "hlPlusRules": {
          "type": "array",
          "description": "List of HL Plus rules that should be applied on betslip.",
          "items": {
            "$ref": "#/definitions/HLPlusRule",
            "originalRef": "HLPlusRule"
          }
        },
        "maxNumberOfBetslipEvents": {
          "type": "integer",
          "format": "int32"
        },
        "maxNumberOfBetslipEventsSystem": {
          "type": "integer",
          "format": "int32"
        },
        "maxPayoutAmount": {
          "type": "number",
          "format": "double",
          "description": "The maximum amount that can be paid for a winning wager."
        },
        "stakeTax": {
          "type": "number",
          "format": "double",
          "description": "The tax to be applied on wager stake. If the tax is 5% of the stake the stakeTax property should be 0.05 ."
        },
        "winningsTaxRates": {
          "type": "array",
          "description": "The tax to be applied on wager winnings. There can be several tax rates. For example, from 0.0 to 1000.0 tax is 10%, from 1000.0 to 3000.0 is 15%, etc. If the tax is 10% the taxPercentage should be 0.1 .",
          "items": {
            "$ref": "#/definitions/WinningsTaxRate",
            "originalRef": "WinningsTaxRate"
          }
        }
      }
    },
    "WinningsTaxRate": {
      "type": "object",
      "properties": {
        "from": {
          "type": "number",
          "format": "double"
        },
        "to": {
          "type": "number",
          "format": "double"
        },
        "taxPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SportsbookCategoryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "the id of the category (sport id, category id, tournament id)"
        },
        "name": {
          "type": "string",
          "description": "the name of the category"
        },
        "names": {
          "description": "the name variants of the category",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "numEvents": {
          "type": "integer",
          "format": "int32",
          "description": "the number of all events in this category"
        },
        "numOutrightEvents": {
          "type": "integer",
          "format": "int32",
          "description": "the number of outright events"
        },
        "numInplayEvents": {
          "type": "integer",
          "format": "int32",
          "description": "the number of inplay events"
        },
        "subCategories": {
          "type": "array",
          "description": "a list of the subcategories",
          "items": {
            "$ref": "#/definitions/SportsbookCategoryDTO",
            "originalRef": "SportsbookCategoryDTO"
          }
        },
        "order": {
          "type": "number",
          "format": "double",
          "description": "the order(priority) of the category"
        },
        "highlight": {
          "type": "boolean",
          "description": "Whether the category is highlighted. Applicable for competitions only."
        },
        "weighting": {
          "type": "number",
          "format": "double",
          "description": "weighting"
        },
        "path": {
          "type": "string",
          "description": "sportId:categoryId:tournamentId"
        }
      }
    },
    "EventInfo": {
      "type": "object",
      "properties": {
        "sets": {
          "type": "integer",
          "format": "int32"
        },
        "isTie": {
          "type": "boolean"
        },
        "neutral": {
          "type": "boolean"
        },
        "tvId": {
          "type": "string"
        }
      },
      "description": "The EventInfo object informational properties regarding the event."
    },
    "HomeAwayScore": {
      "type": "object",
      "properties": {
        "home": {
          "type": "integer",
          "format": "int32"
        },
        "away": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HomeAwayScoreString": {
      "type": "object",
      "properties": {
        "home": {
          "type": "string"
        },
        "away": {
          "type": "string"
        }
      }
    },
    "Market": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the market. It is globally unique (two different events will not have the same marketId)."
        },
        "name": {
          "type": "string",
          "description": "The market name"
        },
        "names": {
          "description": "The market's name variants",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "type": {
          "type": "string",
          "description": "The id of the market type. Multiple markets of the same event may have the same type(the lines will differ). Markets from different events can have the same type."
        },
        "typeRef": {
          "type": "string",
          "description": "The reference id of the market. It is unique across the markets of the same event. Markets from different events can have the same reference id."
        },
        "subtype": {
          "type": "string",
          "description": "The sub type of the market type."
        },
        "lines": {
          "type": "array",
          "description": "The lines (limit/handicaps) of the market. E.g. for 'Under/Over 2.5' the line is 2.5",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "index": {
          "type": "number",
          "format": "double",
          "description": "The current index. Applicable for indexed markets, e.g. 'Who will score the N goal', N is the index"
        },
        "status": {
          "type": "string",
          "description": "The market status",
          "enum": [
            "inactive",
            "active",
            "suspended",
            "cancelled",
            "completed"
          ]
        },
        "displayed": {
          "type": "boolean",
          "description": "If the market should be displayed in the frontend"
        },
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The number of selections that must be in a bet with selections from this market in order for the bet to be acceptable. Value 1 means that it can be played as single, value two must be combined with another selections etc."
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of selections that must be in a bet with selections from this market in order for the bet to be acceptable."
        },
        "strictType": {
          "type": "boolean",
          "description": "Whether to apply market selection min/max limits"
        },
        "betBuilder": {
          "type": "boolean",
          "description": "Indicates that market offered for bet builder"
        },
        "selections": {
          "type": "array",
          "description": "A list containing the market selections",
          "items": {
            "$ref": "#/definitions/MarketSelection",
            "originalRef": "MarketSelection"
          }
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The market order"
        },
        "handicap": {
          "type": "boolean",
          "description": "The handicap flag is true if the market type is handicap related. It will be null in all other cases."
        },
        "balanced": {
          "type": "boolean",
          "description": "This flag indicates that the market is the most balanced among the markets with the same type on the same event"
        },
        "winningLegsBonus": {
          "type": "boolean",
          "description": "Is winningLegsBonus"
        },
        "periodMarket": {
          "type": "boolean",
          "description": "Is period market"
        },
        "period": {
          "type": "string",
          "description": "The period market"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The market code that is used by player on POS to select both the event and the market."
        }
      },
      "description": "The Market object contains all the details of a market."
    },
    "MarketSelection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The selection identifier. It is globally unique."
        },
        "code": {
          "type": "string",
          "description": "The retail selection code. The retail code is used to identify the market selection in retail shops."
        },
        "name": {
          "type": "string",
          "description": "The selection name"
        },
        "names": {
          "description": "The selection short name",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "type": {
          "type": "string",
          "description": "The selection type."
        },
        "odd": {
          "description": "The selection odd.",
          "$ref": "#/definitions/Odd",
          "originalRef": "Odd"
        },
        "side": {
          "type": "string",
          "description": "Indicates which team this selection relates to. Values: home/away"
        },
        "sts": {
          "type": "string",
          "description": "The selection status. Values explanation: inactive, active, suspended, cancelled, won, lost, result dependent",
          "enum": [
            "ina",
            "ac",
            "bl",
            "canc",
            "won",
            "lost",
            "res"
          ]
        },
        "displayed": {
          "type": "boolean",
          "description": "If the selection should be displayed in the frontend"
        },
        "pos": {
          "description": "Selection position in the grid",
          "$ref": "#/definitions/Position",
          "originalRef": "Position"
        },
        "result": {
          "type": "string",
          "description": "The selection result"
        }
      },
      "description": "The MarketSelection object contains all the details of a market selection."
    },
    "Odd": {
      "type": "object",
      "properties": {
        "dec": {
          "type": "number",
          "format": "double",
          "description": "The decimal odd."
        },
        "frac": {
          "type": "string",
          "description": "The fractional odd."
        }
      },
      "description": "The Odd object contains the odd of the selection in decimal and fractional format."
    },
    "Participant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The participant id. This is the unique identifier of the participant."
        },
        "name": {
          "type": "string",
          "description": "The participant name."
        },
        "extId": {
          "type": "string",
          "description": "The external provider id of the participant."
        },
        "type": {
          "type": "string",
          "description": "The type of the participant.",
          "enum": [
            "HOME",
            "AWAY",
            "OTHER"
          ]
        },
        "names": {
          "description": "Participant name variations.",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        }
      },
      "description": "The Participant object contains all the details of a participant of an event(team or player). E.g. Chelsea, Nadal, etc."
    },
    "Period": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The period id"
        },
        "home": {
          "type": "integer",
          "format": "int32",
          "description": "The score of the home team for this period"
        },
        "away": {
          "type": "integer",
          "format": "int32",
          "description": "The score of the away team for this period"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The period status. Not started:0, Started:1, Completed:2"
        },
        "overtime": {
          "type": "boolean",
          "description": "Indicator that this period is overtime"
        }
      }
    },
    "Position": {
      "type": "object",
      "properties": {
        "row": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "attribute": true
          }
        },
        "col": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "ScoreProgress": {
      "type": "object",
      "properties": {
        "totalTime": {
          "type": "string",
          "description": "The total time that the event is running."
        },
        "periodTime": {
          "type": "string",
          "description": "The time of the current period."
        },
        "periodId": {
          "type": "string",
          "description": "The current period id"
        },
        "score": {
          "description": "The current score of the event.",
          "$ref": "#/definitions/HomeAwayScore",
          "originalRef": "HomeAwayScore"
        },
        "server": {
          "type": "string",
          "description": "Indicator of the current serving participant."
        },
        "game": {
          "description": "Score object contains the score for the home and away participant for the current game. Applicable for tennis, volley, etc.",
          "$ref": "#/definitions/HomeAwayScoreString",
          "originalRef": "HomeAwayScoreString"
        },
        "periods": {
          "type": "array",
          "description": "A list containing the periods of the event.",
          "items": {
            "$ref": "#/definitions/Period",
            "originalRef": "Period"
          }
        },
        "yellowCards": {
          "description": "Object that contains the home and away yellow cards.",
          "$ref": "#/definitions/HomeAwayScore",
          "originalRef": "HomeAwayScore"
        },
        "redCards": {
          "description": "Object that contains the home and away red cards.",
          "$ref": "#/definitions/HomeAwayScore",
          "originalRef": "HomeAwayScore"
        },
        "extraInfo": {
          "type": "object",
          "description": "Extra sport unique information",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "The ScoreProgress object contains details of the score and progress of the event."
    },
    "SportsbookEventDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The event id. This is the unique identifier of the event."
        },
        "code": {
          "type": "string",
          "description": "The retail code. The retail code is used to identify the event in retail shops. The codes are reused after a certain period, so the codes are not unique."
        },
        "sportId": {
          "type": "string",
          "description": "The sport identifier. E.g. id for Football"
        },
        "categId": {
          "type": "string",
          "description": "The category identifier. E.g. id for England"
        },
        "categName": {
          "type": "string",
          "description": "The category name. E.g. England"
        },
        "tourId": {
          "type": "string",
          "description": "The tournament identifier. E.g. id for Premier League"
        },
        "tourName": {
          "type": "string",
          "description": "The tournament name. E.g. Premier League"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the event in millis epoch."
        },
        "name": {
          "type": "string",
          "description": "The description of the event. E.g. Chelsea vs Arsenal"
        },
        "names": {
          "description": "The name variations of the event.",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "compNames": {
          "description": "The name variations of the competition.",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "categoryNames": {
          "description": "The name variations of the category.",
          "$ref": "#/definitions/Names",
          "originalRef": "Names"
        },
        "status": {
          "type": "string",
          "description": "The status of the event.",
          "enum": [
            "inactive",
            "active",
            "suspended",
            "closed",
            "cancelled",
            "completed"
          ]
        },
        "displayed": {
          "type": "boolean",
          "description": "If the event should be displayed in the frontend"
        },
        "offeredInplay": {
          "type": "boolean",
          "description": "Indicator that this event will be offered for inplay betting (betting while the event is in progress)."
        },
        "isInplay": {
          "type": "boolean",
          "description": "Indicator that this event is now in inplay mode(the event is in progress)."
        },
        "outright": {
          "type": "boolean",
          "description": "Indicator that the event is outright. Outrights are not A team vs B team events. E.g. Who will win the English Premier League?"
        },
        "betBuilder": {
          "type": "boolean",
          "description": "Indicates that event offered for bet builder"
        },
        "numMarkets": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of active markets."
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order of the event."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version number of the event. This is not a necessarily serial number."
        },
        "extIds": {
          "type": "object",
          "description": "A map containing ids of the specific event from external providers. E.g. key: betradar, value: 1234",
          "additionalProperties": {
            "type": "string"
          }
        },
        "participants": {
          "type": "array",
          "description": "A list containing all the participants of the event(teams or players). E.g. Chelsea and Arsenal or Nadal and Federer",
          "items": {
            "$ref": "#/definitions/Participant",
            "originalRef": "Participant"
          }
        },
        "info": {
          "description": "EventInfo contains additional informational properties regarding the event",
          "$ref": "#/definitions/EventInfo",
          "originalRef": "EventInfo"
        },
        "scoreProgress": {
          "description": "ScoreProgress contains details of the score and progress of the event. It is available only when the event is in inplay mode.",
          "$ref": "#/definitions/ScoreProgress",
          "originalRef": "ScoreProgress"
        },
        "markets": {
          "type": "array",
          "description": "A list containing the markets of the event. Depending on the API called, the list might be empty or some of the markets may not be included, even though the event has more defined markets.",
          "items": {
            "$ref": "#/definitions/Market",
            "originalRef": "Market"
          }
        },
        "cashout": {
          "type": "boolean",
          "description": "Indicator that cashout is allows for a bet that includes this event."
        },
        "anytimeWincast": {
          "type": "boolean",
          "description": "Indicator that anytime wincast is offered for this event."
        },
        "wincast": {
          "type": "boolean",
          "description": "Indicator that wincast is offered for this event."
        },
        "anytimeScorecast": {
          "type": "boolean",
          "description": "Indicator that anytime scorecast is offered for this event."
        },
        "timecast": {
          "type": "boolean",
          "description": "Indicator that timecast is offered for this event."
        },
        "scorecast": {
          "type": "boolean",
          "description": "Indicator that scorecast is offered for this event."
        },
        "winningLegsBonus": {
          "type": "boolean",
          "description": "Is winningLegsBonus"
        },
        "path": {
          "type": "string",
          "description": "sportId:categoryId:tournamentId:eventId"
        },
        "neutralVenue": {
          "type": "boolean",
          "description": "Indicator that event is in neutral venue."
        },
        "inplayEventId": {
          "type": "integer",
          "format": "int64",
          "description": "If this event will be offered for inplay, but the event will be different, this property will have the id of the corresponding event."
        },
        "inplay": {
          "type": "boolean"
        }
      },
      "description": "The SportsbookEventDTO object contains all the details of a sportsbook event."
    },
    "MonoListSportsbookEventDTO": {
      "type": "object"
    },
    "ParticipantDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The participant unique identifier."
        },
        "sportId": {
          "type": "string",
          "description": "The id of the sport that this participant belongs to."
        },
        "name": {
          "type": "string",
          "description": "The participant name."
        },
        "extIds": {
          "type": "object",
          "description": "External provider name and id",
          "additionalProperties": {
            "type": "string"
          }
        },
        "translations": {
          "type": "array",
          "description": "Translations and name variations",
          "items": {
            "$ref": "#/definitions/Names",
            "originalRef": "Names"
          }
        }
      },
      "description": "The Participant object contains all the details of a defined participant(team or player). E.g. Chelsea, Nadal, etc."
    },
    "SportsbookEventWithAllMarketsDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The event id. This is the unique identifier of the event."
        },
        "name": {
          "type": "string",
          "description": "The description of the event. E.g. Chelsea vs Arsenal"
        },
        "sportId": {
          "type": "string",
          "description": "The sport identifier. E.g. id for Football"
        },
        "categId": {
          "type": "string",
          "description": "The category identifier. E.g. id for England"
        },
        "tourId": {
          "type": "string",
          "description": "The tournament identifier. E.g. id for Premier League"
        },
        "outright": {
          "type": "boolean",
          "description": "Indicator that the event is outright. Outrights are not A team vs B team events. E.g. Who will win the English Premier League?"
        },
        "numMarkets": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of active markets."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version number of the event. This is not a necessarily serial number."
        },
        "participants": {
          "type": "array",
          "description": "A list containing all the participants of the event(teams or players). E.g. Chelsea and Arsenal or Nadal and Federer",
          "items": {
            "$ref": "#/definitions/Participant",
            "originalRef": "Participant"
          }
        },
        "markets": {
          "type": "array",
          "description": "A list containing the markets of the event. Depending on the API called, the list might be empty or some of the markets may not be included, even though the event has more defined markets.",
          "items": {
            "$ref": "#/definitions/Market",
            "originalRef": "Market"
          }
        },
        "cashout": {
          "type": "boolean",
          "description": "Indicator that cashout is allows for a bet that includes this event."
        }
      }
    },
    "MarketMinified": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The market status",
          "enum": [
            "inactive",
            "active",
            "suspended",
            "cancelled",
            "completed"
          ]
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The market code that is used by player on POS to select both the event and the market."
        }
      }
    },
    "SportsbookEventMinifiedDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The event id. This is the unique identifier of the event."
        },
        "code": {
          "type": "string",
          "description": "The retail code. The retail code is used to identify the event in retail shops. The codes are reused after a certain period, so the codes are not unique."
        },
        "tourName": {
          "type": "string",
          "description": "The tournament name. E.g. Premier League"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the event in millis epoch."
        },
        "name": {
          "type": "string",
          "description": "The description of the event. E.g. Chelsea vs Arsenal"
        },
        "status": {
          "type": "string",
          "description": "The status of the event.",
          "enum": [
            "inactive",
            "active",
            "suspended",
            "closed",
            "cancelled",
            "completed"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version number of the event. This is not a necessarily serial number."
        },
        "markets": {
          "type": "array",
          "description": "A list containing the markets of the event. Depending on the API called, the list might be empty or some of the markets may not be included, even though the event has more defined markets.",
          "items": {
            "$ref": "#/definitions/MarketMinified",
            "originalRef": "MarketMinified"
          }
        },
        "inplay": {
          "type": "boolean"
        }
      }
    },
    "SportsbookEventVersionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sportId": {
          "type": "string"
        },
        "tourId": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "outright": {
          "type": "boolean"
        },
        "isInplay": {
          "type": "boolean"
        },
        "offeredInplay": {
          "type": "boolean"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PopularSelection": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the event that the popular selection belongs to."
        },
        "marketTypeRef": {
          "type": "string",
          "description": "The reference id of the market that the popular selection belongs to."
        },
        "marketSelectionId": {
          "type": "string",
          "description": "The selection id."
        }
      }
    },
    "ResultsPageDTO": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SportsbookEventDTO",
            "originalRef": "SportsbookEventDTO"
          }
        }
      }
    },
    "FootballEventOptions": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "integer",
          "format": "int64",
          "description": "Event Id"
        },
        "eventCode": {
          "type": "string",
          "description": "Always null at the moment this line was written"
        },
        "tournament": {
          "type": "string",
          "description": "Tournament name"
        },
        "category": {
          "type": "string",
          "description": "Category name"
        },
        "homeTeam": {
          "type": "string",
          "description": "Home team name"
        },
        "awayTeam": {
          "type": "string",
          "description": "Away team name"
        },
        "kickoffDate": {
          "type": "string",
          "description": "Kick off time and date"
        },
        "sysRefId": {
          "type": "string",
          "description": "The betradar ID"
        }
      },
      "description": "The football event with its options"
    },
    "FootballEventResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "description": "A list of football events with their options",
          "items": {
            "$ref": "#/definitions/FootballEventOptions",
            "originalRef": "FootballEventOptions"
          }
        }
      },
      "description": "Contains a list of football events"
    },
    "BettingChampion": {
      "type": "object",
      "properties": {
        "betId": {
          "type": "string",
          "description": "The betId"
        },
        "betType": {
          "type": "string",
          "description": "The bet type"
        },
        "stake": {
          "type": "number",
          "description": "The bet stake"
        },
        "winnings": {
          "type": "number",
          "description": "The winnings"
        },
        "currency": {
          "type": "string",
          "description": "The currency"
        },
        "numBets": {
          "type": "integer",
          "format": "int32",
          "description": "The number of bets"
        },
        "name": {
          "type": "string",
          "description": "The player name"
        }
      },
      "description": "A betting champion"
    },
    "TerminalCancelRequest": {
      "type": "object",
      "required": [
        "barcodeReadMethod",
        "locale"
      ],
      "properties": {
        "barcodeReadMethod": {
          "type": "string",
          "enum": [
            "READ",
            "TYPED_IN"
          ]
        },
        "betSlipID": {
          "type": "integer",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        },
        "externalRetailerID": {
          "type": "integer",
          "format": "int64"
        },
        "terminalID": {
          "type": "integer",
          "format": "int64"
        },
        "transactionID": {
          "type": "string"
        }
      }
    },
    "RejectBetsResponse": {
      "type": "object",
      "properties": {
        "betSlipID": {
          "type": "string"
        },
        "rejectBetOutcome": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "code": {
          "type": "string"
        },
        "placedTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UndoRequest": {
      "type": "object",
      "required": [
        "betPlacementTime",
        "channel",
        "extBetslipId"
      ],
      "properties": {
        "extBetslipId": {
          "type": "string",
          "description": "Bet identification number for undo"
        },
        "betPlacementTime": {
          "type": "integer",
          "format": "int64",
          "description": "Time the bet was placed in milliseconds. Doesn't need to match exactly the time, we query between 1 hour before and after."
        },
        "channel": {
          "type": "string",
          "description": "The channel code or id that was use in the bet placement"
        }
      },
      "description": "The undo request used to undo a bet"
    },
    "FindSuccessResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The bet status"
        },
        "winnings": {
          "type": "number",
          "format": "double",
          "description": "The winnings amount"
        }
      },
      "description": "The response object after finding the coupon winnings"
    },
    "PayBet": {
      "type": "object",
      "required": [
        "betPaymentResult",
        "bonusAmount",
        "failureReason",
        "grossAmount",
        "netAmount",
        "refundAmount",
        "refundTaxOnReturnsAmount",
        "stakeAmount",
        "taxOnReturnsAmount",
        "wagerPlacedTime",
        "wagerSettledTime"
      ],
      "properties": {
        "betId": {
          "type": "integer",
          "format": "int64"
        },
        "betPaymentResult": {
          "type": "string",
          "enum": [
            "WIN",
            "NO_WIN",
            "FAILURE"
          ]
        },
        "failureReason": {
          "type": "string",
          "enum": [
            "EXPIRED",
            "ALREADY_PAID_BY_SAME_RETAILER",
            "ALREADY_PAID_BY_OTHER_RETAIL",
            "ALREADY_PAID_IN_BACKOFFICE",
            "ALREADY_CANCELLED",
            "ALREADY_VOIDED",
            "ALREADY_BLOCKED",
            "NOT_RESULTED",
            "HIGH_WIN_NOT_PAYABLE_YET",
            "PAYMENT_LIMIT_EXCEEDED",
            "PENDING_AUTHORISATION"
          ]
        },
        "bonusAmount": {
          "type": "number"
        },
        "grossAmount": {
          "type": "number"
        },
        "netAmount": {
          "type": "number"
        },
        "refundAmount": {
          "type": "number"
        },
        "stakeAmount": {
          "type": "number"
        },
        "wagerPlacedTime": {
          "type": "string",
          "format": "date-time"
        },
        "wagerSettledTime": {
          "type": "string",
          "format": "date-time"
        },
        "taxOnReturnsAmount": {
          "type": "number"
        },
        "refundTaxOnReturnsAmount": {
          "type": "number"
        }
      }
    },
    "PaySuccessResponse": {
      "type": "object",
      "required": [
        "bets",
        "paymentOutcome",
        "sumOfBonusAmount",
        "sumOfGrossAmount",
        "sumOfNetAmount",
        "sumOfRefundAmount",
        "sumOfStakeAmount",
        "sumOfTaxOnReturnsAmount"
      ],
      "properties": {
        "betslipId": {
          "type": "integer",
          "format": "int64"
        },
        "bets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayBet",
            "originalRef": "PayBet"
          }
        },
        "paymentFailureReason": {
          "type": "string",
          "enum": [
            "NO_WIN",
            "HIGH_WIN_NOT_PAYABLE_YET",
            "PAYMENT_LIMIT_EXCEEDED",
            "UNKNOWN_BETSLIP",
            "EXTERNAL_WALLET_ERROR",
            "WRONG_ISECURE"
          ]
        },
        "paymentOutcome": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "sumOfBonusAmount": {
          "type": "number"
        },
        "sumOfGrossAmount": {
          "type": "number"
        },
        "sumOfNetAmount": {
          "type": "number"
        },
        "sumOfRefundAmount": {
          "type": "number"
        },
        "sumOfStakeAmount": {
          "type": "number"
        },
        "sumOfTaxOnReturnsAmount": {
          "type": "number"
        },
        "placedTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TerminalPayRequestL10": {
      "type": "object",
      "required": [
        "barcodeReadMethod"
      ],
      "properties": {
        "barcodeReadMethod": {
          "type": "string",
          "description": "barcodeReadMethod",
          "enum": [
            "READ",
            "TYPED_IN"
          ]
        },
        "betSlipID": {
          "type": "integer",
          "format": "int64",
          "description": "betSlipID"
        },
        "externalRetailerId": {
          "type": "integer",
          "format": "int64",
          "description": "externalRetailerId"
        },
        "payLevel": {
          "type": "integer",
          "format": "int64",
          "description": "payLevel"
        },
        "terminalId": {
          "type": "integer",
          "format": "int64",
          "description": "terminalId"
        },
        "isecure": {
          "type": "array",
          "description": "isecure first list should have only one list. second list should contain 8 longs",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    "RollbackRetailResponse": {
      "type": "object",
      "required": [
        "rollbackFailureReason",
        "rollbackResult"
      ],
      "properties": {
        "rollbackResult": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "rollbackFailureReason": {
          "type": "string",
          "enum": [
            "NOT_CORRECT_STATUS_FOR_ROLLBACK",
            "UNKNOWN_BETSLIP"
          ]
        },
        "placedTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CalculatePriceResponse": {
      "type": "object",
      "properties": {
        "Response": {
          "$ref": "#/definitions/Response",
          "originalRef": "Response"
        }
      },
      "description": "The calculate price response"
    },
    "Response": {
      "type": "object",
      "properties": {
        "calculatedPrice": {
          "type": "number",
          "format": "double",
          "description": "The calculated price"
        }
      }
    }
  }
}