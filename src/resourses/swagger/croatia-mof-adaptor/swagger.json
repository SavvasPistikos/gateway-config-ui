{
  "swagger": "2.0",
  "info": {
    "description": "API specification",
    "version": "1.0",
    "title": "croatia-mof-adaptor"
  },
  "tags": [
    {
      "name": "MoF Operations v1.0"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/v1.0/mof/report/gaming/daily": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit daily gaming report.",
        "description": "",
        "operationId": "submitDailyGamingReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DailyGamingReportRequestDTO",
              "originalRef": "DailyGamingReportRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/report/financial/daily": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit daily financial report.",
        "description": "",
        "operationId": "submitDailyFinancialReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DailyFinancialReportRequestDTO",
              "originalRef": "DailyFinancialReportRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/report/casino/game/status": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit casino game status report.",
        "description": "",
        "operationId": "submitCasinoGameStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CasinoGameStatusRequestDTO",
              "originalRef": "CasinoGameStatusRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/report/casino/status": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit casino status report.",
        "description": "",
        "operationId": "submitCasinoStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CasinoStatusRequestDTO",
              "originalRef": "CasinoStatusRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/report/financial/monthly": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit monthly financial report.",
        "description": "",
        "operationId": "submitMonthlyFinancialReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MonthlyFinancialReportRequestDTO",
              "originalRef": "MonthlyFinancialReportRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/reports/{referenceId}/resubmission": {
      "put": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Register new report from ",
        "description": "Retrieves data of previous report using the report id and creates a new one with same attributes and with new payload if provided.",
        "operationId": "resubmitReportFromReference",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceId",
            "in": "path",
            "description": "The report id",
            "required": true,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The report payload",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/reports/{id}": {
      "get": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Get report by id",
        "description": "",
        "operationId": "findReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The report id",
            "required": true,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "resubmit",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoFReportDTO",
              "originalRef": "MoFReportDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/MoFReportDTO",
              "originalRef": "MoFReportDTO"
            }
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "404": {
            "description": "Not found\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Not found |\r\n| 30 | Entity of class: {class}, id: {id} not found |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/reports": {
      "get": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Get reports",
        "description": "",
        "operationId": "findAllReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "error"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "gamingSlotsDaily",
              "gamingTablesDaily",
              "financialDaily",
              "financialMothly",
              "casinoGameStatus",
              "casinoStatus",
              "playerTransaction"
            ]
          },
          {
            "name": "createdFrom",
            "in": "query",
            "description": "Creation date from in UTC in milliseconds",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "createdTo",
            "in": "query",
            "description": "Creation date to in UTC in milliseconds",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page",
            "required": false,
            "type": "integer",
            "default": 10,
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting order. Options: asc, desc. Default is desc.",
            "required": false,
            "type": "string",
            "default": "desc"
          },
          {
            "name": "column",
            "in": "query",
            "description": "Sorting column. Options: id, status, creationDate.",
            "required": false,
            "type": "string",
            "default": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageMoFReportDTO",
              "originalRef": "PageMoFReportDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/PageMoFReportDTO",
              "originalRef": "PageMoFReportDTO"
            }
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/report/player/transactions": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Submit report with player transactions",
        "description": "",
        "operationId": "submitPlayerTransactions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The report data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PlayerTransactionsReportRequestDTO",
              "originalRef": "PlayerTransactionsReportRequestDTO"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/api/v1.0/mof/players/verification": {
      "post": {
        "tags": [
          "MoF Operations v1.0"
        ],
        "summary": "Verifies if the player data are valid.",
        "description": "",
        "operationId": "verifyPlayer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The player data to be verified",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PlayerVerificationRequestDTO",
              "originalRef": "PlayerVerificationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerVerificationResultDTO",
              "originalRef": "PlayerVerificationResultDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/PlayerVerificationResultDTO",
              "originalRef": "PlayerVerificationResultDTO"
            }
          },
          "400": {
            "description": "Bad request\r\n| Error code | Description |\r\n| :-: | - |\r\n| 26 | Validation Error: [...] |\r\n",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "401": {
            "description": "Unauthorized\r\n| Error code | Description |\r\n| :-: | - |\r\n| - | Full authentication is required to access this resource |\r\n| - | Access token expired: {token} |\r\n"
          },
          "500": {
            "description": "Internal server error\r\n| Error code | Description |\r\n| :-: | - |\r\n| 25 | System Error |",
            "schema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            },
            "responseSchema": {
              "$ref": "#/definitions/FaultInfo",
              "originalRef": "FaultInfo"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "FaultInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "The error message"
        },
        "data": {
          "type": "array",
          "description": "The error data which is an abstract object that may be used to provide any error metadata",
          "items": {
            "type": "object"
          }
        },
        "source": {
          "type": "string",
          "description": "The application at which the API error occured"
        },
        "type": {
          "type": "string",
          "description": "The error family, e.g. RUNTIME, VALIDATION, etc"
        }
      },
      "description": "The FaultInfo object contains all the details assosiated with an API error"
    },
    "DailyAmountsDTO": {
      "type": "object",
      "properties": {
        "gameId": {
          "type": "string"
        },
        "playAmount": {
          "type": "number"
        },
        "wonAmount": {
          "type": "number"
        },
        "jackpotPlayAmount": {
          "type": "number"
        },
        "jackpotWonAmount": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "enum": [
            "slot",
            "table"
          ]
        }
      }
    },
    "DailyGamingReportDataDTO": {
      "type": "object",
      "properties": {
        "reportInfo": {
          "$ref": "#/definitions/ReportInfoDTO",
          "originalRef": "ReportInfoDTO"
        },
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyAmountsDTO",
            "originalRef": "DailyAmountsDTO"
          }
        }
      }
    },
    "DailyGamingReportRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/DailyGamingReportDataDTO",
          "originalRef": "DailyGamingReportDataDTO"
        }
      }
    },
    "ReportInfoDTO": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "integer",
          "format": "int64",
          "description": "Unigue report submission id."
        },
        "CreationDate": {
          "type": "string",
          "description": "The creation date of the report."
        },
        "FromDate": {
          "type": "string",
          "description": "The period start date of the report."
        },
        "ToDate": {
          "type": "string",
          "description": "The period end date of the report."
        }
      }
    },
    "DailyFinancialReportDataDTO": {
      "type": "object",
      "properties": {
        "reportInfo": {
          "$ref": "#/definitions/ReportInfoDTO",
          "originalRef": "ReportInfoDTO"
        },
        "bettingPlayAmount": {
          "type": "number"
        },
        "bettingWonAmount": {
          "type": "number"
        },
        "casinoPlayAmount": {
          "type": "number"
        },
        "casinoWonAmount": {
          "type": "number"
        },
        "otherPlayAmount": {
          "type": "number"
        },
        "otherWonAmount": {
          "type": "number"
        },
        "balanceBeginAmount": {
          "type": "number"
        },
        "balanceEndAmount": {
          "type": "number"
        },
        "depositAmount": {
          "type": "number"
        },
        "withdrawalAmount": {
          "type": "number"
        }
      }
    },
    "DailyFinancialReportRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/DailyFinancialReportDataDTO",
          "originalRef": "DailyFinancialReportDataDTO"
        }
      }
    },
    "CasinoGameStatusDataDTO": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "integer",
          "format": "int64",
          "description": "Unigue report submission id."
        },
        "creationDate": {
          "type": "string",
          "description": "The creation date of the report."
        },
        "gameId": {
          "type": "string",
          "description": "The gameId."
        },
        "gameDescription": {
          "type": "string",
          "description": "The game description."
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    },
    "CasinoGameStatusRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/CasinoGameStatusDataDTO",
          "originalRef": "CasinoGameStatusDataDTO"
        }
      }
    },
    "CasinoStatusDataDTO": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "integer",
          "format": "int64",
          "description": "Unigue report submission id."
        },
        "creationDate": {
          "type": "string",
          "description": "The creation date of the report."
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    },
    "CasinoStatusRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/CasinoStatusDataDTO",
          "originalRef": "CasinoStatusDataDTO"
        }
      }
    },
    "MonthlyAmountsDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "slot",
            "table"
          ]
        },
        "playAmount": {
          "type": "number"
        },
        "wonAmount": {
          "type": "number"
        },
        "jackpotPlayAmount": {
          "type": "number"
        },
        "jackpotWonAmount": {
          "type": "number"
        }
      }
    },
    "MonthlyFinancialReportDataDTO": {
      "type": "object",
      "properties": {
        "reportInfo": {
          "$ref": "#/definitions/ReportInfoDTO",
          "originalRef": "ReportInfoDTO"
        },
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthlyAmountsDTO",
            "originalRef": "MonthlyAmountsDTO"
          }
        }
      }
    },
    "MonthlyFinancialReportRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/MonthlyFinancialReportDataDTO",
          "originalRef": "MonthlyFinancialReportDataDTO"
        }
      }
    },
    "MoFReportDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "referenceId": {
          "type": "integer",
          "format": "int64"
        },
        "guid": {
          "type": "string"
        },
        "referenceGuid": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "sendDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "payload": {
          "type": "string"
        },
        "response": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "success",
            "failed",
            "error"
          ]
        },
        "userName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "gamingSlotsDaily",
            "gamingTablesDaily",
            "financialDaily",
            "financialMothly",
            "casinoGameStatus",
            "casinoStatus",
            "playerTransaction"
          ]
        },
        "resubmitStatus": {
          "type": "boolean"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort",
          "originalRef": "Sort"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable",
          "originalRef": "Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PageMoFReportDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MoFReportDTO",
            "originalRef": "MoFReportDTO"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort",
          "originalRef": "Sort"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable",
          "originalRef": "Pageable"
        }
      }
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort",
          "originalRef": "Sort"
        },
        "paged": {
          "type": "boolean"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "unpaged": {
          "type": "boolean"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Sort": {
      "type": "object",
      "properties": {
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PlayerTransactionsDataDTO": {
      "type": "object",
      "properties": {
        "reportInfo": {
          "$ref": "#/definitions/ReportInfoDTO",
          "originalRef": "ReportInfoDTO"
        },
        "batch": {
          "type": "array",
          "description": "A List of '|' separated Strings containing the transaction data",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PlayerTransactionsReportRequestDTO": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventID": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "$ref": "#/definitions/PlayerTransactionsDataDTO",
          "originalRef": "PlayerTransactionsDataDTO"
        }
      }
    },
    "PlayerVerificationResultDTO": {
      "type": "object",
      "required": [
        "valid"
      ],
      "properties": {
        "valid": {
          "type": "boolean",
          "description": "Denotes if the player data are valid"
        }
      }
    },
    "PlayerVerificationRequestDTO": {
      "type": "object",
      "required": [
        "birthDate",
        "firstname",
        "lastName",
        "oib"
      ],
      "properties": {
        "oib": {
          "type": "string",
          "description": "OIB value. This is unique id for every Croatian citizen."
        },
        "firstname": {
          "type": "string",
          "description": "The first name"
        },
        "lastName": {
          "type": "string",
          "description": "The last name"
        },
        "birthDate": {
          "type": "string",
          "description": "The date of birth in 'yyyy-mm-dd' format"
        }
      }
    }
  }
}
