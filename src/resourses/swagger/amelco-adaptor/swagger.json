{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the API documentation of Amelco Adaptor application.",
    "version" : "1.0",
    "title" : "Amelco Adaptor",
    "contact" : {
      "name" : "Intralot S.A."
    }
  },
  "basePath" : "/api",
  "tags" : [ {
    "name" : "Authentication"
  }, {
    "name" : "Campaigns"
  }, {
    "name" : "Player"
  }, {
    "name" : "Retailers"
  }, {
    "name" : "Sportsbook"
  }, {
    "name" : "System Service v1.0"
  }, {
    "name" : "Segment"
  }, {
    "name" : "Trader Settings"
  }, {
    "name" : "Wagers v1.0"
  }, {
    "name" : "PAM Authentication Service"
  }, {
    "name" : "PAM Player Service"
  }, {
    "name" : "PAM System Service"
  }, {
    "name" : "PAM Wallet Service"
  }, {
    "name" : "Retailers V2"
  }, {
    "name" : "Wagers v2.0"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/v1.0/authentication/external" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Login with PAM token",
        "description" : "This method is used to login to a user account (login from external PAM).",
        "operationId" : "external_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "External player login request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExternalPlayerRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Login"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/authentication/login" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Login with username/password",
        "description" : "This method is used to login to a user account (internal login - used the Amelco PAM).",
        "operationId" : "login_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Player login request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlayerRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Login"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/authentication/logout" : {
      "put" : {
        "tags" : [ "Authentication" ],
        "summary" : "Logout Player",
        "description" : "This method is used to logout to a player account (internal logout - used for Amelco PAM).",
        "operationId" : "externalLogout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The player's session token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "NO CONTENT"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonuses/entitlements/{voucherCode}" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "This method used to save a voucher code",
        "description" : "Opts-in a player to a specific voucherCode",
        "operationId" : "saveAccountEntitlement_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "voucherCode",
          "in" : "path",
          "description" : "A promotional voucherCode",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "boolean"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/active" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "summary" : "This method is used to retrieve the active campaigns",
        "description" : "Gets active campaigns",
        "operationId" : "getActiveCampaigns_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Bonus"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/{campaignId}/bonuses/entitlements" : {
      "put" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Uploads bonus entitlements",
        "description" : "Uploads bonus entitlements of specified campaign id to specified account ids",
        "operationId" : "uploadBonusEntitlements_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "campaignId",
          "in" : "path",
          "description" : "The Campaign Id you want to update the bonus entitlements of",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UploadBonusEntitlementsRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "boolean"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonuses/entitlements/states/{state}" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "This method used to retrieves details of all bonuses for a logged-in Sportsbook customer",
        "description" : "During user's login this method is called twice. On with state:AVAILABLE & one with state:ACTIVE",
        "operationId" : "getBonusEntitlements_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "path",
          "description" : "State of bounes: HISTORIC, AVAILABLE, OPT_IN, ACTIVE, AVAILABLE_AND_OPT_IN",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyOptInCampaigns",
          "in" : "header",
          "description" : "false -  Include campaigns the punter has not yet opted-in or do not use voucher codes to opt-in (i.e Discount Bonus)\ntrue -  Do not include campaigns the punter has not opted-in yet or do not use voucher codes to opt-in (i.e Discount Bonus)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "channel",
          "in" : "header",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/AccountBonuses"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonus/money" : {
      "put" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Submit bonus money info",
        "description" : "Notify Amelco that a bet is entitled to bonus money promotion",
        "operationId" : "submitBonusMoneyRule_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The bonusMoneyRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BonusMoneyRequest"
          }
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The player's sessionToken",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "boolean"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/templates" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get campaign templates",
        "description" : "Returns player's campaign templates",
        "operationId" : "getTemplates_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CampaignResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonuses" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get campaign bonuses",
        "description" : "Returns player's campaign bonuses",
        "operationId" : "getBonuses_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channel",
          "in" : "header",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CampaignResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonus/{bonusCode}/info" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Get info about a voucher code",
        "description" : "Get info about a voucher code",
        "operationId" : "getBonus_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bonusCode",
          "in" : "path",
          "description" : "The bonusCode",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Bonus"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/campaigns/bonus/{bonusCode}" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "summary" : "Validate a voucher code",
        "description" : "Validate a voucher code",
        "operationId" : "validateBonus_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bonusCode",
          "in" : "path",
          "description" : "The bonusCode",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/Bonus"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/competitors/teams" : {
      "get" : {
        "tags" : [ "Player" ],
        "summary" : "Returns the teams",
        "description" : "Teams match the \"name\"",
        "operationId" : "getTeams_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParticipantTeam"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/competitions" : {
      "get" : {
        "tags" : [ "Player" ],
        "summary" : "Returns the competitions",
        "description" : "Competitions match the \"name\"",
        "operationId" : "getCompetitions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Competition"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/competitors/players" : {
      "get" : {
        "tags" : [ "Player" ],
        "summary" : "Returns the players",
        "description" : "Players match the \"name\"",
        "operationId" : "getPlayers_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParticipantPlayer"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/preference/localized" : {
      "get" : {
        "tags" : [ "Player" ],
        "summary" : "Returns the player preferences",
        "description" : "Returns the player preferences",
        "operationId" : "getPlayerPreferenceLocalized_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerPreferenceResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Player" ],
        "summary" : "Updates the player preferences",
        "description" : "Updates the player preferences",
        "operationId" : "savePlayerPreferenceLocalized_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The player preference domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlayerPreference"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/events/rolling/{sportTypeId}/{fromDate}/{toDate}" : {
      "get" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get Rolling Events",
        "description" : "Get Rolling Events",
        "operationId" : "getRollingEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sportTypeId",
          "in" : "path",
          "description" : "The Sport Id in BCDM",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fromDate",
          "in" : "path",
          "description" : "The start date",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "toDate",
          "in" : "path",
          "description" : "The end date",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "marketIds",
          "in" : "query",
          "description" : "The List of market Ids",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ExportEventResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/betslips/{uid}/claim/paid" : {
      "put" : {
        "tags" : [ "Retailers" ],
        "summary" : "Mark a high winner coupon as paid by the bank",
        "description" : "Pay a claimed coupon",
        "operationId" : "claimPaid_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "The uid",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "paidTime",
          "in" : "query",
          "description" : "The paid time",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BankPaymentCompletionResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "\r\n| Error code | Description |\r\n| :-: | - |\r\n| 15339 |  Already Paid\r\n| 15338 | \tNot Settled yet\r\n| 15303 | \tUnknown Betslip ",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/accounts/{externalRetailerId}" : {
      "get" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get retailer information",
        "description" : "Returns information about external retailer",
        "operationId" : "getExternalRetailerAccount_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "externalRetailerId",
          "in" : "path",
          "description" : "The external Id of the retail you want to get the details of",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RetailerAccount"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Retailers" ],
        "summary" : "Deletes retailer information",
        "description" : "Deletes information about external retailer",
        "operationId" : "deleteExternalRetailerAccount_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "externalRetailerId",
          "in" : "path",
          "description" : "The external Id of the retail you want to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RetailerAccount"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/accounts" : {
      "post" : {
        "tags" : [ "Retailers" ],
        "summary" : "Saves retailer information",
        "description" : "Saves information about external retailer",
        "operationId" : "saveExternalRetailerAccount_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RetailerAccountRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/events/antepost/{fromDate}/{toDate}" : {
      "get" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get Antepost Events",
        "description" : "Get Antepost Events",
        "operationId" : "getAntepostEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fromDate",
          "in" : "path",
          "description" : "The start date",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "toDate",
          "in" : "path",
          "description" : "The end date",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "marketIds",
          "in" : "query",
          "description" : "The List of market Ids",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ExportEventResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/wagers/descriptions" : {
      "post" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get event descriptions",
        "description" : "Get event descriptions for terminals",
        "operationId" : "getWagersDescriptions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalForecasts"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ForecastDescriptions"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/reports" : {
      "post" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get retailer reports",
        "description" : "Get terminal reports data",
        "operationId" : "getRetailerReports_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EventDataRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/EventDataResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/retailers/wagers/parlay/descriptions" : {
      "post" : {
        "tags" : [ "Retailers" ],
        "summary" : "Get Parlay descriptions",
        "description" : "Get parlay descriptions for terminals",
        "operationId" : "getParlayWagersDescriptions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalForecasts"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ForecastDescriptionsV2"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/ladders/root" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of ladder odds",
        "description" : "",
        "operationId" : "getLadderOdds_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roles",
          "in" : "query",
          "description" : "Roles",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "brands",
          "in" : "query",
          "description" : "Brands",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "allPathsForUser",
          "in" : "query",
          "description" : "All paths for user",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "onBehalfOfUserRoles",
          "in" : "query",
          "description" : "On behalf of user roles",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "The account Id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "internalLogin",
          "in" : "query",
          "description" : "Internal login",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "userName",
          "in" : "query",
          "description" : "Username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userPath",
          "in" : "query",
          "description" : "User path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "application",
          "in" : "query",
          "description" : "Application",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orgUnitCode",
          "in" : "query",
          "description" : "Org unit code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "siteId",
          "in" : "query",
          "description" : "Site id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userGroupPath",
          "in" : "query",
          "description" : "User group path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "onBehalfOfUserId",
          "in" : "query",
          "description" : "On behalf of user id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "onBehalfOfActAsOneGroupPath",
          "in" : "query",
          "description" : "On behalf of act as one group path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscriptionTime",
          "in" : "query",
          "description" : "Subscription time",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "includeAmericanOdds",
          "in" : "query",
          "description" : "Flag indicating if american odds will be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/categories/all" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a tree of all categories",
        "description" : "Retrieves a tree containing all the sport hierarchy. From top to bottom: Sport(e.g. Football), Category(e.g. England), Tournament(e.g. Premier League). <a target='_blank' href='/swagger/examples/sportsbook-categories-all.json'>Click here to see a sample response.</a>. The client can filter the response using the provided query parameters.",
        "operationId" : "getCategories_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "categoryType",
          "in" : "query",
          "description" : "The category type to include in the response. By default all types are returned.",
          "required" : false,
          "type" : "string",
          "enum" : [ "sport", "category", "tournament" ]
        }, {
          "name" : "sportId",
          "in" : "query",
          "description" : "The sport id",
          "required" : false,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "The category id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "guid",
          "in" : "header",
          "description" : "The GUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookCategoryDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/code/{code}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get an event by code",
        "description" : "Retrieves a sportsbook event using the event code. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId" : "getEventWithCode_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "The code of the event",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SportsbookEventDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/configuration" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get sportsbook configuration",
        "description" : "Retrieves market type and market group configuration for all defined sports. <a target='_blank' href='/swagger/examples/sportsbook-config.json'>Click here to see a sample response.</a>",
        "operationId" : "getConfiguration_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SportsbookConfigurationDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/{sportId}/{from}/{to}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of events by sport",
        "description" : "Retrieves a list sportsbook events using the sport id.",
        "operationId" : "getEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sportId",
          "in" : "path",
          "description" : "The id of the sport",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "from",
          "in" : "path",
          "description" : "The from date in RFC 3339 or Timestamp format",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "to",
          "in" : "path",
          "description" : "The to date in RFC 3339 or Timestamp format",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "includeMarkets",
          "in" : "query",
          "description" : "If markets should be included in the response",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/available/inplay" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get all available inplay events",
        "description" : "Retrieves a list containing all sportsbook events that are available for in play betting.",
        "operationId" : "getInplayEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includePrematch",
          "in" : "query",
          "description" : "Whether to include available prematch events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/search" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of events that match the search term",
        "description" : "Retrieves a list sportsbook events based on the search term and optional filtering and paging parameters",
        "operationId" : "searchEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchText",
          "in" : "query",
          "description" : "The search term",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyIds",
          "in" : "header",
          "description" : "True if only event Ids should be returned. Default to false",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "sportId",
          "in" : "query",
          "description" : "The id of the sport",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "pageNum",
          "in" : "query",
          "description" : "Used for pagination (defaults to page 0)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Used for pagination (defaults to 10)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Normal filter parameter, e.g. can filter based on siteId (probably not relevant)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/{id}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get an event by id",
        "description" : "Retrieves a sportsbook event using the event id. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId" : "getEvent_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the event",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SportsbookEventDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/champions" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of betting champions",
        "description" : "",
        "operationId" : "getBettingChampions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BettingChampion"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/participants" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of all participants",
        "description" : "Retrieves a list of all defined participants.",
        "operationId" : "getAllParticipants_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "guid",
          "in" : "header",
          "description" : "The GUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParticipantDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/participants/{sportId}/{participantId}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a participant for a sport by id",
        "description" : "Retrieves a participant for a sport by id.",
        "operationId" : "getParticipantById_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "sportId",
          "in" : "path",
          "description" : "The sport id filter",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "participantId",
          "in" : "path",
          "description" : "The participant id filter",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ParticipantDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/available/version" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get the version of each available event",
        "description" : "Retrieves a list containing a summary of all sportsbook events that are available for betting. <a target='_blank' href='/swagger/examples/sportsbook-event-versions.json'>Click here to see a sample response.</a>",
        "operationId" : "getAvailableEventsVersion_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includePrematch",
          "in" : "query",
          "description" : "Whether to include available prematch events. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOutrights",
          "in" : "query",
          "description" : "Whether to include available outright events. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeInplay",
          "in" : "query",
          "description" : "Whether to include available inplay events. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "ignoreEventsWithNoMarkets",
          "in" : "query",
          "description" : "Whether to ignore events that have no available markets. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventVersionDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/participants/{sportId}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of participants for a sport",
        "description" : "Retrieves a list of defined participants for a sport. Additional filtering by tournament id is possible.",
        "operationId" : "getSportParticipants_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "sportId",
          "in" : "path",
          "description" : "The sport id filter",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "tournamentId",
          "in" : "query",
          "description" : "The tournament id filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParticipantDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/parlay/events/available" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get available event ids by card ids",
        "description" : "Retrieves a list containing all parlay cards and event ids that are available for betting.",
        "operationId" : "getParlayAvailableEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cardId",
          "in" : "query",
          "description" : "List of Card Ids",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ParlayConfiguration"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/participants/{id}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of event Ids by participant Id",
        "description" : "Retrieves a list of event Ids that the participant whose Id was given competes in",
        "operationId" : "getEventsByParticipantId_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the participant",
          "required" : true,
          "type" : "string",
          "pattern" : "^p-.*"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel Id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int64"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/football" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of football events",
        "description" : "Retrieves a list of football events for BOS",
        "operationId" : "getFootBallEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "minTime",
          "in" : "query",
          "description" : "The minTime in timestamp eg 1517731596192. If not set defaults to NOW",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxTime",
          "in" : "query",
          "description" : "The maxTime in timestamp eg 1517731596192",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "system",
          "in" : "query",
          "description" : "The system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/FootballEventResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/{eventId}/resulted/history" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get history of events",
        "description" : "Retrieves a list containing all the events' history during a specific timeslot ",
        "operationId" : "getResultedHistoryByEventId_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The event id ",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/categories/available" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a tree of categories that have available events",
        "description" : "Retrieves a tree containing the currently active sport hierarchy. From top to bottom: Sport(e.g. Football), Category(e.g. England), Tournament(e.g. Premier League). <a target='_blank' href='/swagger/examples/sportsbook-categories-available.json'>Click here to see a sample response.</a>",
        "operationId" : "getAvailableCategories_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookCategoryDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/{id}/allDefinedMarkets" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get an event by id with all defined markets",
        "description" : "Retrieves a sportsbook event containing all of its markets using the event id. Odds are not provided. <a target='_blank' href='/swagger/examples/sportsbook-event-by-id.json'>Click here to see a sample response.</a>",
        "operationId" : "getEventWithAllMarkets_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the event",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SportsbookEventWithAllMarketsDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/resulted/{sportId}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a page of resulted events of a sport",
        "description" : "",
        "operationId" : "getResultedEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Date from filter for event date in yyyy-mm-dd format",
          "required" : true,
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        }, {
          "name" : "sportId",
          "in" : "path",
          "description" : "The sport id filter",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "The category id filter",
          "required" : false,
          "type" : "string",
          "pattern" : "^c-.*"
        }, {
          "name" : "competitionId",
          "in" : "query",
          "description" : "The competition id filter",
          "required" : false,
          "type" : "string",
          "pattern" : "^t-.*"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number",
          "required" : true,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size",
          "required" : true,
          "type" : "integer",
          "default" : 50,
          "minimum" : 0,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The sort parameter",
          "required" : true,
          "type" : "string",
          "enum" : [ "NONE", "DATE", "DATE_COMPETITION", "DATE_DESC", "DATE_DESC_COMPETITION", "COMPETITION" ]
        }, {
          "name" : "channel",
          "in" : "header",
          "description" : "The channel",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "The eventType. Possible values NORMAL, OUTRIGHT, ALL. Defaults to NORMAL",
          "required" : false,
          "type" : "string",
          "default" : "NORMAL"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResultsPageDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/resulted/history" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get history of events",
        "description" : "Retrieves a list containing all the events' history during a specific timeslot ",
        "operationId" : "getResultedHistoryByDate_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sportId",
          "in" : "query",
          "description" : "The sport id filter",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The Start Date",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The End Date",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/wagers/parlay/configuration" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get Parlay Card configuration",
        "description" : "Retrieves a list of available parlay cards",
        "operationId" : "getParlayConfiguration_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ParlayConfiguration"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/resulted/{sportId}/ids" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of resulted events by ids",
        "description" : "",
        "operationId" : "getResultedEventsByIds_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "sportId",
          "in" : "path",
          "description" : "The sport id filter",
          "required" : true,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "eventIds",
          "in" : "query",
          "description" : "List of event ids",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "collectionFormat" : "multi",
          "maxItems" : 2147483647,
          "minItems" : 1
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/available/prematch/highlights" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of available highlighted prematch events",
        "description" : "Retrieves a list containing some sportsbook prematch(not in play) events that are highlighted by the CMS operators.",
        "operationId" : "getTopPrematchEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sportId",
          "in" : "query",
          "description" : "The sport id filter",
          "required" : false,
          "type" : "string",
          "pattern" : "^s-.*"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of events in the response. Default is 10.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/available/selections/popular" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a list of popular event selections",
        "description" : "Retrieves a list containing the identifiers of the selections that are marked as popular on the betting provider.",
        "operationId" : "getEventPopularSelections_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PopularSelection"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/available" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get all available events",
        "description" : "Retrieves a list containing all sportsbook events that are available for betting. <a target='_blank' href='/swagger/examples/sportsbook-event-all.json'>Click here to see a sample response.</a>",
        "operationId" : "getAvailableEvents_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "segmentId",
          "in" : "query",
          "description" : "The segment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ignoreEventsWithoutCouponCodes",
          "in" : "query",
          "description" : "Whether to ignore events without coupon codes. Default value true.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOnlyParlay",
          "in" : "query",
          "description" : "Whether to include only parlay events. Default value false.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookEventDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/categories/resulted" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a tree of categories that have resulted events",
        "description" : "",
        "operationId" : "getResultCategories_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "includeOutrights",
          "in" : "query",
          "description" : "Should outright categories be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportsbookCategoryDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sportsbook/events/resulted/code/{eventCode}" : {
      "get" : {
        "tags" : [ "Sportsbook" ],
        "summary" : "Get a page of resulted events of a sport",
        "description" : "",
        "operationId" : "getResultedEventsByCode_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventCode",
          "in" : "path",
          "description" : "The eventCode",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : true,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Date from filter for event date in yyyy-mm-dd format",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "The category id filter",
          "required" : false,
          "type" : "string",
          "pattern" : "^c-.*"
        }, {
          "name" : "competitionId",
          "in" : "query",
          "description" : "The competition id filter",
          "required" : false,
          "type" : "string",
          "pattern" : "^t-.*"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number",
          "required" : true,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size",
          "required" : true,
          "type" : "integer",
          "default" : 50,
          "minimum" : 0,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The sort parameter",
          "required" : true,
          "type" : "string",
          "enum" : [ "NONE", "DATE", "DATE_COMPETITION", "DATE_DESC", "DATE_DESC_COMPETITION", "COMPETITION" ]
        }, {
          "name" : "channel",
          "in" : "header",
          "description" : "The channel",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "The eventType. Possible values NORMAL, OUTRIGHT, ALL. Defaults to NORMAL",
          "required" : false,
          "type" : "string",
          "default" : "NORMAL"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResultsPageDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/systems/errors" : {
      "get" : {
        "tags" : [ "System Service v1.0" ],
        "summary" : "Get all integrated errors",
        "description" : "Get all sportsbook integrated errors<br><strong>Notes: </strong> These errors are integrated inside the adaptor application and throw customised error code and error message.",
        "operationId" : "getIntegratedErrors_1",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AmelcoErrorCode"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/segments/players/{playerId}" : {
      "get" : {
        "tags" : [ "Segment" ],
        "summary" : "Get player segments",
        "description" : "Returns a list of segments that the player is in",
        "operationId" : "listPlayerSegments_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "playerId",
          "in" : "path",
          "description" : "The Player Id you want to get segment details about",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CustomerSegmentsResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/segments" : {
      "get" : {
        "tags" : [ "Segment" ],
        "summary" : "Get SPB segments",
        "description" : "Returns a list of sportsbook segments",
        "operationId" : "listSegments_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CustomerSegmentsResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/segments/{segmentId}/players/upload" : {
      "post" : {
        "tags" : [ "Segment" ],
        "summary" : "Upload players to segment",
        "description" : "Uploads a list of players to specific segment id",
        "operationId" : "uploadPlayers_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "segmentId",
          "in" : "path",
          "description" : "The Segment Id you want to get details about",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UploadPlayersRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/UploadPlayersResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/settings/{key}/categories/{category}/{value}" : {
      "get" : {
        "tags" : [ "Trader Settings" ],
        "summary" : "Get Default Settings by category, key name, key value",
        "description" : "Returns the default setting values object",
        "operationId" : "getSettingByValues_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "description" : "The category",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The setting key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "path",
          "description" : "The setting value",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SettingItems"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/settings/{key}/categories/{category}/default" : {
      "get" : {
        "tags" : [ "Trader Settings" ],
        "summary" : "Get Default Settings",
        "description" : "Returns the default setting value",
        "operationId" : "getDefaultSetting_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "description" : "The category",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The setting key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/autocashout" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Auto-cashouts a bet based on defined criteria",
        "description" : "Accepts amounts in cents. Specifies auto-cashout options for a specific bet",
        "operationId" : "autoCashout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The auto-cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoCashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/cashout" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Cashouts a bet",
        "description" : "Accepts amounts in cents. Cashouts (fully or partially) a specific bet",
        "operationId" : "cashout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID to be cashed out",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CashoutResponseDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/retailers/overask/{overAskId}" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Retrieves trader's betslip proposal",
        "description" : "",
        "operationId" : "retrieveOveraskBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "overAskId",
          "in" : "path",
          "description" : "The over ask id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "retailerId",
          "in" : "query",
          "description" : "The retailer id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "terminalId",
          "in" : "query",
          "description" : "The terminal id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalType",
          "in" : "query",
          "description" : "The terminal type iris, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "The employee id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Accepts to play the negotiated betslip",
        "description" : "",
        "operationId" : "acceptBetslipOverask_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "overAskId",
          "in" : "path",
          "description" : "The over ask id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "retailerId",
          "in" : "query",
          "description" : "The retailer id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "terminalId",
          "in" : "query",
          "description" : "The terminal id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalType",
          "in" : "query",
          "description" : "The terminal type iris, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "The employee id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "The transaction id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AcceptOverAskRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betnotification" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Sets bet notifications",
        "description" : "Set on which bets the player will be notified when they are settled.",
        "operationId" : "settlementNotification_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "header",
          "description" : "The player id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The BetNotification object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BetNotification"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/calculate/betbuilder" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Calculates build bet price.",
        "description" : "",
        "operationId" : "calculateBuildABetPrice_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventId",
          "in" : "query",
          "description" : "The event id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "selectionIds",
          "in" : "query",
          "description" : "A comma separated list of selection ids",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CalculatePriceResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/autocashout" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Edits an autocashout request",
        "description" : "Accepts amounts in cents. Auto Cashout options amendment",
        "operationId" : "editAutoCashout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID for auto cashout",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The auto-cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditAutoCashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Cancels an autocashout",
        "description" : "Cancels a previously accepted request for autocashout",
        "operationId" : "cancelAutoCashout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The betId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/retailers/verify" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Verifies a betslip",
        "description" : "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-wagerRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-wagerResponse.json'> response.</a>",
        "operationId" : "verifyRetailerBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "retailerId",
          "in" : "header",
          "description" : "The retailer id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalId",
          "in" : "header",
          "description" : "The terminal id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "employeeId",
          "in" : "header",
          "description" : "The unique id of the retailer employee",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalType",
          "in" : "header",
          "description" : "The terminal Type. eg. Photon, Gablet, Tap'nBet, Other",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "participationMethod",
          "in" : "header",
          "description" : "The participation Method. eg. verbal, betslip, QRC, Other",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The place bet request domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betids/calculate/cashout" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Calculates the cashout amount per open bet",
        "description" : "Calculates the cashout amount per each open bet of a user. <a target='_blank' href='/swagger/examples/wager-calculateCashoutResponse.json'>Click here to see a Sample response.</a>",
        "operationId" : "calculateCashoutWithBetIds_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The betIds to calculate cashout",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyValueDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{id}/calculate/cashout" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Calculates the cashout amount of betslip",
        "description" : "Used by terminals to calculate the cashout of a betslip",
        "operationId" : "calculateCashoutBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The beslipId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "retailerExtId",
          "in" : "query",
          "description" : "The retailerExtId",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/change" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Cashouts a bet id and plays new bet",
        "description" : "Accepts amounts in cents. Will chashout the selected bet and place another bet in its place on the same betslip. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-changeRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-changeResponse.json'> response.</a>",
        "operationId" : "changeBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID to be cashed out",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The change bet request domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangeBetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/calculate/cashout" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Calculates the cashout amount per open bet",
        "description" : "Calculates the cashout amount per each open bet of a user. <a target='_blank' href='/swagger/examples/wager-calculateCashoutResponse.json'>Click here to see a Sample response.</a>",
        "operationId" : "calculateCashout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "The account id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "excludeChildBets",
          "in" : "query",
          "description" : "In case that needs to expose the child bets or not",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel where the request coming from",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The prefered locale (Default: EN)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The bets to calculate cashout",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BetResponse"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyValueDTO"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{betslipId}/details" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the details for a specific betslip id",
        "description" : "Returns the betslip info",
        "operationId" : "betslipDetails_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "betslipId",
          "in" : "path",
          "description" : "The betslip ID that the player ask for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeEventResults",
          "in" : "query",
          "description" : "If the event result have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeChildBetSummaries",
          "in" : "query",
          "description" : "If the child bet summaries have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/retailers" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Places a betslip",
        "description" : "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-wagerRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-wagerResponse.json'> response.</a>",
        "operationId" : "placeRetailerBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "retailerId",
          "in" : "header",
          "description" : "The retailer id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalId",
          "in" : "header",
          "description" : "The terminal id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "employeeId",
          "in" : "header",
          "description" : "The unique id of the retailer employee",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalType",
          "in" : "header",
          "description" : "The terminal Type. eg. Photon, Gablet, Tap'nBet, Other",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "participationMethod",
          "in" : "header",
          "description" : "The participation Method. eg. verbal, betslip, QRC, Other",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The place bet request domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Retrieve the player's bets",
        "description" : "Retrieve the player's bets based on the asked statuses, within a defined period of time and other criteria",
        "operationId" : "betsHistory_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Start Epoch time of placed bets",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "End Epoch time of placed bets",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "channelId",
          "in" : "query",
          "description" : "The channel where the request coming from",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Local language",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Type of wagers statuses (comma separated) i.e. ACCEPTED,SETTLED,VOID,WINNINGS,OPEN,CLOSED,LOSE",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event",
          "in" : "query",
          "description" : "Event name if applicable",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeEventResults",
          "in" : "query",
          "description" : "If the event result have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeChildBetSummaries",
          "in" : "query",
          "description" : "If the child bet summaries have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result index",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "The maximum amount of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Places a betslip",
        "description" : "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-wagerRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-wagerResponse.json'> response.</a>",
        "operationId" : "placeBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "extendedResponse",
          "in" : "header",
          "description" : "If true selections/markets/events descriptions & events kickoff time will be returned",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The place bet request domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Amends a bet",
        "description" : "Used to cancel or settle a specific bet",
        "operationId" : "amendBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The amend bet request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AmendRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Undoes a bet",
        "description" : "Used to undo a specific bet in case for some reason Amelco could not be notified, or failed to notify the adaptor",
        "operationId" : "undoBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The undo bet request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UndoRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/details" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the full details for a specific bet id",
        "description" : "Returns the full bet info",
        "operationId" : "betDetails_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet IDs that the player ask for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeEventResults",
          "in" : "query",
          "description" : "If the event result have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeChildBetSummaries",
          "in" : "query",
          "description" : "If the child bet summaries have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetExtended"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{uid}/b2b/details" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the full details for a specific betSlipId",
        "description" : "Returns the full bet info",
        "operationId" : "betDetailsB2B_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "The betSlipId or betId that the client asked for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "isBetId",
          "in" : "query",
          "description" : "If uid provided is a betId this must be true. If false uid is considered betSlipId",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeEventResults",
          "in" : "query",
          "description" : "If the event result have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeChildBetSummaries",
          "in" : "query",
          "description" : "If the child bet summaries have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BetExtended"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/overask/{overAskId}" : {
      "delete" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Rejects an over/ask trader's response",
        "description" : "Rejects and over/ask trader's response",
        "operationId" : "rejectOverask_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overAskId",
          "in" : "path",
          "description" : "The over/ask id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "boolean"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/cashout" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Cashouts a betslip",
        "description" : "Used by terminals to cash out a betslip",
        "operationId" : "cashoutBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalPayRequestL10"
          }
        }, {
          "name" : "cashoutAmount",
          "in" : "query",
          "description" : "The cash out amount",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PaySuccessResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{id}/bets" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the bets of a specific betslip id",
        "description" : "Returns the bets in specific betslip",
        "operationId" : "findByBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The beslipId that the player ask for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "retailerExtId",
          "in" : "query",
          "description" : "The retailerExtId",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "terminalLevel",
          "in" : "query",
          "description" : "The terminalLevel",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{betSlipId}/settlements" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Settles a betslip",
        "description" : "Used by terminals to settle a betslip",
        "operationId" : "settleBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "header",
          "description" : "The transaction id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betSlipId",
          "in" : "path",
          "description" : "The betslip id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalPayRequestL10"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PaySuccessResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{betSlipId}" : {
      "delete" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Cancels a betslip",
        "description" : "Used by terminals to cancel a betslip",
        "operationId" : "cancelBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "header",
          "description" : "The transaction id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betSlipId",
          "in" : "path",
          "description" : "The betslip id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalCancelRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/TerminalCancelResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/open" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Retrieves all open bets.",
        "description" : "Retrieves all user's open bets. <a target='_blank' href='/swagger/examples/wager-openBetsResponse.json'>Click here to see a Sample response.</a>",
        "operationId" : "findOpenBets_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The open bet request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenBetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the details for a specific bet id",
        "description" : "Returns the bet info",
        "operationId" : "betHistory_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet IDs that the player ask for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeEventResults",
          "in" : "query",
          "description" : "If the event result have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeChildBetSummaries",
          "in" : "query",
          "description" : "If the child bet summaries have to be returned",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/details/public" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns a top winner's bet details",
        "description" : "Returns a top winner's bet details",
        "operationId" : "betDetailsPublic_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetExtended"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/verify" : {
      "post" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Verifies a betslip",
        "description" : "When a Sportsbook customer has loaded the betslip with one or more selections and clicks to submit their bets, the Sportsbook front end client sends a placeBets API call to the server. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-verifyRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-verifyResponse.json'> response.</a>",
        "operationId" : "verifyBet_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The place bet request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/{betId}/success" : {
      "get" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Returns the success status for a specific bet id",
        "description" : "Returns the the status and winnings for a specific bet id",
        "operationId" : "findSuccess_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet IDs that the player ask for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "excludePartialCashOutBet",
          "in" : "query",
          "description" : "True: Exclude all the bets that are created through a partial cash out. False: Include them",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeWinSelections",
          "in" : "query",
          "description" : "True: Include WinSelections",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/FindSuccessResponseDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/rollback" : {
      "delete" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Rolls back a paid or canceled betslip",
        "description" : "Used by terminals to rollback a betslip",
        "operationId" : "rollBackBetslip_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "header",
          "description" : "The transaction id used in pay or cancel",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rollbackFrom",
          "in" : "header",
          "description" : "rollbackFrom PAID or CANCELLED",
          "required" : true,
          "type" : "string",
          "enum" : [ "PAID", "CANCELLED" ]
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RollbackRetailResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wagers/betslips/{betSlipId}/taxation" : {
      "put" : {
        "tags" : [ "Wagers v1.0" ],
        "summary" : "Update taxation of a betslip",
        "description" : "Used by BOS to update SB with the calculated taxation of a betslip.<br><strong>External endpoint:</strong> POST: sportsbook/api/wager/betslip/taxation/update",
        "operationId" : "updateTaxation_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "betSlipId",
          "in" : "path",
          "description" : "The betslip id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The taxation claims object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaxationClaims"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sessions" : {
      "post" : {
        "tags" : [ "PAM Authentication Service" ],
        "summary" : "Player Login",
        "description" : "Logins player in Sportsbook PAM<br><strong>External endpoint:</strong> POST: sportsbook/api/authentication/login",
        "operationId" : "login_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The player's credentials",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PunterLoginRequestDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerLoginResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PAM Authentication Service" ],
        "summary" : "Keep alive",
        "description" : "This method is used to refresh the user session and avoid session expiration<br><strong>External endpoint:</strong> POST: sportsbook/api/authentication/keepAlive",
        "operationId" : "keepAlive_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PAMResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PAM Authentication Service" ],
        "summary" : "Player Logout",
        "description" : "Logout player in Sportsbook PAM<br><strong>External endpoint:</strong> GET: sportsbook/api/authentication/logout",
        "operationId" : "logout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PAMResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/sessions/cancelAutoLogout" : {
      "post" : {
        "tags" : [ "PAM Authentication Service" ],
        "summary" : "Cancel auto logout",
        "description" : "This method is used to cancel the auto logout functionality<br><strong>External endpoint:</strong> POST: sportsbook/api/authentication/cancelAutoLogout",
        "operationId" : "cancelAutoLogout_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PAMResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players" : {
      "get" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Get Player Details",
        "description" : "Get Full and basic punter details<br><strong>External endpoints:</strong> GET: sportsbook/api/accounts/details/basic && sportsbook/api/accounts/details/full",
        "operationId" : "details_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shortProfile",
          "in" : "header",
          "description" : "Return short player's profile. ( 0: full profile - 1: short profile )",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 0, 1 ]
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerProfileShort"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Registers player",
        "description" : "Registers player in sportsbook<br><strong>External endpoint:</strong> POST: sportsbook/api/registration/register",
        "operationId" : "register_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The player preference domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Player"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerRegisterResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Update Player Account",
        "description" : "Update a player's account in sportsbook<br><strong>External endpoints:</strong> POST: accounts/details/full",
        "operationId" : "updatePlayer_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The player preference domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Player"
          }
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerProfileFull"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/validate" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Check if user exists",
        "description" : "Validates player details based on properties passed in the object. It encapsulates the appropriate sportsbook calls for player details validation<br><strong>External endpoints:</strong> POST: sportsbook/api/registration/validate/email && sportsbook/api/registration/validate/username",
        "operationId" : "validate_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "A player registration object with the necessary properties",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlayerValidationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PAMResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/exclude" : {
      "delete" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Exclude Player",
        "description" : "Allows player to be self-excluded<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/selfExclude",
        "operationId" : "exclude_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "isIndefinite",
          "in" : "query",
          "description" : "Defines if it is indefinite (0:No, 1:Yes)",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 0, 1 ]
        }, {
          "name" : "coolOff",
          "in" : "query",
          "description" : "Defines if player will be auto unblocked after his restriction will be over. If false he has to call customer support in order to play again (USMT specific)",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "false", "true" ]
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The date (YYYY-MM-DD HH:MM:SS) that the player will be self-excluded for(date in the future)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "numMinutes",
          "in" : "query",
          "description" : "The number of minutes that the player will be self-excluded for",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The date (YYYY-MM-DD HH:MM:SS) that the player will be self-excluded for(date in the future)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reason",
          "in" : "query",
          "description" : "The reason for self exclusion",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "licenseType",
          "in" : "query",
          "description" : "The licence type",
          "required" : true,
          "type" : "string",
          "default" : "sportsbook",
          "enum" : [ "sportsbook" ]
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RestrictionPlayerData"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/activate" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Activate User",
        "description" : "Activates/Confirms Punters account using email confirmation code<br><strong>External endpoint:</strong> POST: sportsbook/api/registration/email/confirm",
        "operationId" : "activate_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "activationCode",
          "in" : "formData",
          "description" : "The activation code",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/password/reset" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Reset Player's Password request",
        "description" : "Retrieves player's secret questions<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/forgotPassword/secretQuestions",
        "operationId" : "requestResetPassword_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "emailAddress",
          "in" : "query",
          "description" : "The email address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "The username",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerPassword"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/registration/validation" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Fields validation",
        "description" : "Validates if a list of fields are valid<br><strong>External endpoints:</strong> POST: sportsbook/api/registration/validate",
        "operationId" : "registrationValidate_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "A registration fields object with a list of fields to validate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RegistrationFieldsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RegistrationValidationResultResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/password/reset/verification" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Reset Player's Password Verification",
        "description" : "Verify player's secret answer at his secret question<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/forgotPassword<br><strong>Notes:</strong> only use <strong>secretAnswer, secretQuestionID, username/emailAddress</strong>",
        "operationId" : "verifyResetPassword_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Player's username/email and answers",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Player"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/kyc/response" : {
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Update the player's KYC provider response",
        "description" : "This method is used to update player's KYC provider response<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/kyc/response",
        "operationId" : "updateKYCproviderResponse_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The KYC Status change request information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KYCStatusChangeRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/limits" : {
      "get" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Get Player Limits",
        "description" : "Retrieves player's self limits<br><strong>External endpoint:</strong> GET: sportsbook/api/accounts/selfLimits",
        "operationId" : "limits_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limitType",
          "in" : "query",
          "description" : "The limit type",
          "required" : false,
          "type" : "string",
          "enum" : [ "deposit", "bet", "session_time", "time" ]
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "The interval type ( not applicable for time limit type )",
          "required" : false,
          "type" : "string",
          "enum" : [ "Week", "Day", "Month", "All" ]
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PlayerLimit"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Set Player Limits",
        "description" : "Allows changing players limits.<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/selfLimits/save<br><strong>Notes:</strong> licenceType exists for backwards compatibility reasons with Bit8",
        "operationId" : "setLimits_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limitType",
          "in" : "query",
          "description" : "The limit type",
          "required" : true,
          "type" : "string",
          "enum" : [ "deposit", "bet", "session_time", "time" ]
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "The Interval type",
          "required" : true,
          "type" : "string",
          "enum" : [ "Week", "Day", "Month" ]
        }, {
          "name" : "licenseType",
          "in" : "query",
          "description" : "The licence type",
          "required" : true,
          "type" : "string",
          "default" : "sportsbook",
          "enum" : [ "sportsbook" ]
        }, {
          "name" : "limitParam",
          "in" : "query",
          "description" : "The limit value",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "confirmed",
          "in" : "query",
          "description" : "Indicates that limit is confirmed by the player",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/kyc" : {
      "get" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Returns the player's KYC details",
        "description" : "This method is used to get player's KYC provider details<br><strong>External endpoint:</strong> GET: sportsbook/api/accounts/kyc/details",
        "operationId" : "getKYCDetails_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PunterKycProviderDetailsDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/kyc/status" : {
      "get" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Returns the player's KYC Status",
        "description" : "This method is used to get player's KYC status<br><strong>External endpoint:</strong> GET: sportsbook/api/accounts/details/basic",
        "operationId" : "getKYCStatus_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/KYCStatusData"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/email" : {
      "put" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Updates player's email",
        "description" : "Updates Player's email.<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/details/full",
        "operationId" : "changeEmail_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newEmail",
          "in" : "query",
          "description" : "New email ",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password to be provided ",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/players/password" : {
      "put" : {
        "tags" : [ "PAM Player Service" ],
        "summary" : "Change Password",
        "description" : "Allows changing a user's password<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/changePassword",
        "operationId" : "changePassword_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Player new and old password",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PunterChangePasswordRequestDTO"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/systems/preferences/communication" : {
      "get" : {
        "tags" : [ "PAM System Service" ],
        "summary" : "Get Available Communication Preferences",
        "description" : "Retrieves all available communication preferences<br><strong>External endpoint:</strong> GET: sportsbook/api/ccm/preferences/communication",
        "operationId" : "communicationPreferences_1",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommunicationPreferences"
              }
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/systems/transaction/types" : {
      "get" : {
        "tags" : [ "PAM System Service" ],
        "summary" : "Get all transaction types",
        "description" : "Get all transaction type names for the filterOrdering requests.<br><strong>External endpoint:</strong> sportsbook/api/ccm/transactionTypes",
        "operationId" : "getTransactionTypes_1",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/SupportedTransactionTypesResponseDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/systems/registration/data" : {
      "get" : {
        "tags" : [ "PAM System Service" ],
        "summary" : "Get all register necessary system information with options",
        "description" : "Get all register necessary system information such as countries and secret questions<br><strong>External endpoint:</strong> sportsbook/api/ccm/states",
        "operationId" : "getRegistrationData_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "states",
          "in" : "query",
          "description" : "Fetch system states",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "secretQuestions",
          "in" : "query",
          "description" : "Fetch system secret questions",
          "required" : true,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/RegistrationSystemData"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/payment/option" : {
      "delete" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Delete Payment Option",
        "description" : "Delete player's payment option<br><strong>External endpoint:</strong> DELETE: registrations/{gateway}/remove/{paymentOptionId}",
        "operationId" : "deletePaymentOption_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gateway",
          "in" : "query",
          "description" : "The payment gateway",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOptionId",
          "in" : "query",
          "description" : "The payment method id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/payment/{gateway}/settlement" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Payment settlement",
        "description" : "Payment settlement per gateway<br><strong>External endpoint:</strong> POST: payment/{gateway}/settlement",
        "operationId" : "postPaymentSettlement_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentProviderAuth",
          "in" : "header",
          "description" : "Payment provider authorization token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gateway",
          "in" : "path",
          "description" : "The gateway",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The payment settlement request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PaymentSettlementRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/withdrawal/process" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Process deposit",
        "description" : "Allows user to finalize his withdraw through SPB<br><strong>External endpoint:</strong> POST: payment/rest/withdraw/process",
        "operationId" : "processWithdrawal_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Channel",
          "in" : "header",
          "description" : "The channel id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The player process withdraw params",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckoutRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PayoutResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/withdrawal/initiation" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Withdraw initiate",
        "description" : "Allows users to initiate an amount withdraw<br><strong>External endpoint:</strong> POST: payment/rest/withdraw/initiate",
        "operationId" : "withdrawal_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Channel",
          "in" : "header",
          "description" : "The channel id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The player withdraw params",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WithdrawParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/FundsWithdrawInitResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/balance" : {
      "get" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Get Players Wallet",
        "description" : "Retrieves player's wallet<br><strong>External endpoint: </strong> GET: sportsbook/api/accounts/punterBalance<br><strong>Notes: </strong>Currently only full wallet supported",
        "operationId" : "balance_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fullWallet",
          "in" : "header",
          "description" : "A flag indicating whether the full wallet will be returned or not",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PlayerBalance"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/deposit/initiation" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Deposit initiate",
        "description" : "Allows users to Deposit an amount using a known payment provider<br><strong>External endpoint:</strong> POST: payment/rest/deposit/initiate",
        "operationId" : "deposit_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The several options related to the deposit operation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WithdrawParams"
          }
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Channel",
          "in" : "header",
          "description" : "The channel id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/TransactionDepositResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/deposit/process" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Process deposit",
        "description" : "Allows user to finalize his deposit through SPB<br><strong>External endpoint:</strong> POST: payment/rest/deposit/process",
        "operationId" : "processDeposit_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The process deposit request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RequestMessage"
          }
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Channel",
          "in" : "header",
          "description" : "The channel id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/payment/options" : {
      "get" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Payment options",
        "description" : "Get all available payment options<br><strong>External endpoint:</strong> GET: payment/paymentOptions",
        "operationId" : "paymentOptions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "activeOnly",
          "in" : "query",
          "description" : "true:Will fetch only ACTIVE paymentOptions, false:Will fetch both ACTIVE and INACTIVE payment options",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "isDeposit",
          "in" : "query",
          "description" : "true:Will fetch payment options that are allowed to deposit, false: Will not apply filtering on  payment options deposit ability",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "isWithdraw",
          "in" : "query",
          "description" : "true:Will fetch payment options that are allowed to withdraw, false: Will not apply filtering on payment options’ withdraw ability",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/PaymentOptionsResponseDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v1.0/wallets/transactions" : {
      "post" : {
        "tags" : [ "PAM Wallet Service" ],
        "summary" : "Get Account Transactions",
        "description" : "Retrieves user's financial transaction history<br><strong>External endpoint:</strong> POST: sportsbook/api/accounts/transactions",
        "operationId" : "transactions_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The account transactions filtering options",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterOrderPagination"
          }
        }, {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/AccountTransactionPageable"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "UNAUTHORIZED ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "403" : {
            "description" : "ORION PAM ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/retailers/wagers/descriptions" : {
      "post" : {
        "tags" : [ "Retailers V2" ],
        "summary" : "Get event descriptions",
        "description" : "Get event descriptions for terminals",
        "operationId" : "getWagersDescriptions_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminalForecasts"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ForecastDescriptionsV2"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/wagers/autocashout" : {
      "post" : {
        "tags" : [ "Wagers v2.0" ],
        "summary" : "Auto-cashouts a bet based on defined criteria",
        "description" : "Accepts amounts in euros. Specifies auto-cashout options for a specific bet",
        "operationId" : "autoCashout_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The auto-cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoCashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/wagers/{betId}/cashout" : {
      "put" : {
        "tags" : [ "Wagers v2.0" ],
        "summary" : "Cashouts a bet",
        "description" : "Accepts amounts in euros. Cashouts (fully or partially) a specific bet",
        "operationId" : "cashout_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID to be cashed out",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/CashoutResponseDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/wagers/{betId}/change" : {
      "put" : {
        "tags" : [ "Wagers v2.0" ],
        "summary" : "Cashouts a bet id and plays new bet",
        "description" : "Accepts amounts in euros. Will chashout the selected bet and place another bet in its place on the same betslip. Click to see a Sample <a target='_blank' href='/swagger/examples/wager-changeRequest.json'> request </a> or <a target='_blank' href='/swagger/examples/wager-changeResponse.json'> response.</a>",
        "operationId" : "changeBet_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID to be cashed out",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The change bet request domain object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangeBetRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/wagers/open" : {
      "get" : {
        "tags" : [ "Wagers v2.0" ],
        "summary" : "Retrieves all open bets with the calculated cashout amounts",
        "description" : "Retrieves all user's open bets with the calculated cashout results. <a target='_blank' href='/swagger/examples/wager-openBetsWithCahoutResultsResponse.json'>Click here to see a Sample response.</a>",
        "operationId" : "findOpenBets_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Channel",
          "in" : "header",
          "description" : "Channel",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale",
          "required" : false,
          "type" : "string",
          "default" : "en-gb"
        }, {
          "name" : "excludeChildBets",
          "in" : "query",
          "description" : "Exclude child bets",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/BetResponse"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    },
    "/v2.0/wagers/{betId}/autocashout" : {
      "put" : {
        "tags" : [ "Wagers v2.0" ],
        "summary" : "Edits an autocashout request",
        "description" : "Accepts amounts in euros. Auto Cashout options amendment",
        "operationId" : "editAutoCashout_2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sessionToken",
          "in" : "header",
          "description" : "The authorization token of the user that was provided upon authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "betId",
          "in" : "path",
          "description" : "The bet ID for auto cashout",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The auto-cashout request domain object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditAutoCashoutRequest"
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "The system authorization",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "204" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "401" : {
            "description" : "AUTHENTICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "LoginResponseDTO" : {
      "type" : "object",
      "required" : [ "accountId" ],
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The player's accountId"
        }
      },
      "description" : "The login response DTO"
    },
    "AccountBalance" : {
      "type" : "object",
      "required" : [ "activeFundsType", "amount", "currency", "lastUpdated", "qualifyingStake", "reserve", "wallets", "warnings", "withdrawal" ],
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "withdrawal" : {
          "type" : "number"
        },
        "reserve" : {
          "type" : "number"
        },
        "amount" : {
          "type" : "number"
        },
        "qualifyingStake" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "activeFundsType" : {
          "type" : "string"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "wallets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Wallet"
          }
        },
        "warnings" : {
          "$ref" : "#/definitions/Attributes"
        }
      }
    },
    "Attrib" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "Attributes" : {
      "type" : "object",
      "properties" : {
        "attrib" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Attrib"
          }
        }
      }
    },
    "Cookie" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "GroupOfUsers" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Login" : {
      "type" : "object",
      "required" : [ "accountBalance", "name", "userProfile" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "accountBalance" : {
          "$ref" : "#/definitions/AccountBalance"
        },
        "settingValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SettingValue"
          }
        },
        "cookiesToSet" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cookie"
          }
        },
        "userGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupOfUsers"
          }
        },
        "userProfile" : {
          "$ref" : "#/definitions/UserProfile"
        },
        "thirdPartyParameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyParam"
          }
        },
        "selfLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SelfLimit"
          }
        },
        "sessionToken" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "brandId" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "countryCode" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "cashoutExcluded" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          }
        },
        "lastLoginTime" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "enabledProducts" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "maxLoginIdleTimeInMinutes" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "minStake" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "registrationStatus" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "emailConfirmationStatus" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "mobileConfirmationStatus" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "username" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "rgsLoginResponse" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "preferredLanguage" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "termsAndConditions" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          }
        },
        "twoFactorAuthEnabled" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "SelfLimit" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "SettingValue" : {
      "type" : "object",
      "required" : [ "category", "name", "value" ],
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ThirdPartyParam" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "UserProfile" : {
      "type" : "object",
      "properties" : {
        "userType" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "userLatency" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "userGender" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "userAge" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "totalDeposits" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "testAccount" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          }
        },
        "vipType" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "Wallet" : {
      "type" : "object",
      "required" : [ "balance", "creditLimit", "currency", "fundType", "initialAmount", "lastUpdated", "qualifyingStake", "walletType" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fundType" : {
          "type" : "string"
        },
        "walletType" : {
          "type" : "string"
        },
        "fundTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "walletTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "balance" : {
          "type" : "number"
        },
        "creditLimit" : {
          "type" : "number"
        },
        "qualifyingStake" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "availableWithdrawal" : {
          "type" : "boolean",
          "default" : false
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "bocaId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "initiatingAccbalId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "initialAmount" : {
          "type" : "number"
        },
        "paymentOptionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "brandId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FaultInfo" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The error code"
        },
        "message" : {
          "type" : "string",
          "description" : "The error message"
        },
        "data" : {
          "type" : "object",
          "description" : "The error data which is an abstract object that may be used to provide any error metadata"
        },
        "source" : {
          "type" : "string",
          "description" : "The application at which the API error occured"
        },
        "type" : {
          "type" : "string",
          "description" : "The error family, e.g. RUNTIME, VALIDATION, etc"
        },
        "guid" : {
          "type" : "string",
          "description" : "The unique identifier of the error process"
        }
      },
      "description" : "The FaultInfo object contains all the details assosiated with an API error"
    },
    "ExternalPlayerRequest" : {
      "type" : "object",
      "properties" : {
        "externalToken" : {
          "type" : "string",
          "description" : "External login token (e.g. joeb)"
        },
        "application" : {
          "type" : "string",
          "description" : "Name of the application that tries to connect (e.g. web-sportsbook)"
        }
      },
      "description" : "The external login request object"
    },
    "ResponseMessage" : {
      "type" : "object",
      "description" : "This type is an abstract object containing all core functionality that needs to be implemented from extending response classes"
    },
    "PlayerRequest" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "The player's username"
        },
        "password" : {
          "type" : "string",
          "description" : "The player's password"
        },
        "application" : {
          "type" : "string",
          "description" : "The application name"
        },
        "siteId" : {
          "type" : "string",
          "description" : "The siteId"
        },
        "brandId" : {
          "type" : "string",
          "description" : "The brandId"
        }
      },
      "description" : "The login request object"
    },
    "BadBeatBonus" : {
      "type" : "object",
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stakes per currency that need to be wagered in order to claim the bonus",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "maxAmounts" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the maximum stakes amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "winningLosingLegs" : {
          "type" : "array",
          "description" : "List of Winning and Losing legs",
          "items" : {
            "$ref" : "#/definitions/WinningLosingLegs"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "minCombinedOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum combined odds"
        }
      },
      "description" : "The BadBeatBonus domain object used to describe a bonus issued due to a bad-beat"
    },
    "Bonus" : {
      "type" : "object",
      "properties" : {
        "freebetEntitlement" : {
          "$ref" : "#/definitions/FreebetEntitlement"
        },
        "freebet" : {
          "$ref" : "#/definitions/Freebet"
        },
        "depositBonus" : {
          "$ref" : "#/definitions/DepositBonus"
        },
        "winningLegsBonus" : {
          "$ref" : "#/definitions/WinningLegsBonus"
        },
        "badBeatBonus" : {
          "$ref" : "#/definitions/BadBeatBonus"
        },
        "externalBonusEntitlement" : {
          "$ref" : "#/definitions/ExternalBonusEntitlement"
        },
        "externalBonus" : {
          "$ref" : "#/definitions/ExternalBonus"
        },
        "voucherBonusEntitlement" : {
          "$ref" : "#/definitions/VoucherBonusEntitlement"
        },
        "voucherBonus" : {
          "$ref" : "#/definitions/VoucherBonus"
        },
        "discountBonusEntitlement" : {
          "$ref" : "#/definitions/DiscountBonusEntitlement"
        },
        "discountBonus" : {
          "$ref" : "#/definitions/DiscountBonus"
        },
        "segmentIds" : {
          "type" : "array",
          "description" : "List of Segment Ids",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "channelIds" : {
          "type" : "array",
          "description" : "List of Channel Ids",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "excludedSegmentIds" : {
          "type" : "array",
          "description" : "List of excluded Channel Ids",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "excludedSiteIds" : {
          "type" : "array",
          "description" : "List of excluded Site Ids",
          "items" : {
            "type" : "string"
          }
        },
        "exclusiveToSiteIds" : {
          "type" : "array",
          "description" : "List of exclusive Site Ids",
          "items" : {
            "type" : "string"
          }
        },
        "excludedCountries" : {
          "type" : "array",
          "description" : "List of excluded Countries",
          "items" : {
            "type" : "string"
          }
        },
        "exclusiveToCountries" : {
          "type" : "array",
          "description" : "List of exclusive Countries",
          "items" : {
            "type" : "string"
          }
        },
        "nonGenericVoucherCodes" : {
          "type" : "array",
          "description" : "List of Non-Generic Voucher Codes",
          "items" : {
            "type" : "string"
          }
        },
        "maxBonusCodeUses" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The maximum number of times this Bonus-Code can be used by different users"
        },
        "timesBonusCodeUsed" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of times this Bonus-Code has been used"
        },
        "usedVoucherCodes" : {
          "type" : "array",
          "description" : "List of the Ids of already used vouchers",
          "items" : {
            "type" : "string"
          }
        },
        "bonusDescriptions" : {
          "type" : "array",
          "description" : "List of Bonus descriptions",
          "items" : {
            "$ref" : "#/definitions/BonusDescription"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Id of the Bonus"
        },
        "awardedAccountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Id of the account that the Bonus was awarded to"
        },
        "name" : {
          "type" : "string",
          "description" : "The Name of the Bonus"
        },
        "bonusCode" : {
          "type" : "string",
          "description" : "The Code of the Bonus"
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment"
        },
        "starts" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date this Bonus starts"
        },
        "availableFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date this Bonus is available from"
        },
        "expires" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date this Bonus expires"
        },
        "expiryOverride" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Expiry Override"
        },
        "status" : {
          "type" : "string",
          "description" : "The Status of the Bonus",
          "enum" : [ "ACTIVE", "IN_ACTIVE", "ENDED", "DELETED" ]
        },
        "campaignType" : {
          "type" : "string",
          "description" : "The type of the Campaign",
          "enum" : [ "NONE", "ACQUISITION", "RETENTION", "REACTIVATION", "CHURN" ]
        },
        "createdByUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Id of the User that created the Bonus"
        },
        "maxClaimCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum number of times this Bonus can be claimed"
        },
        "registrationBonus" : {
          "type" : "boolean",
          "description" : "Whether this is a Registration Bonus"
        },
        "mobile" : {
          "type" : "boolean",
          "description" : "Whether this is a Mobile Bonus"
        },
        "settlementMobile" : {
          "type" : "boolean",
          "description" : "Settlement Mobile"
        },
        "allowAccumulatesStake" : {
          "type" : "boolean",
          "description" : "Whether this bonus allows Accumulated Stake"
        },
        "crmbonus" : {
          "type" : "boolean",
          "description" : "Whether this is a CRM bonus"
        },
        "promotionId" : {
          "type" : "string",
          "description" : "The Id of the promotion"
        },
        "applicationType" : {
          "type" : "string",
          "description" : "The type of the Application",
          "enum" : [ "SPORTSBOOK", "CASINO", "LOTTERY" ]
        },
        "autoEntitle" : {
          "type" : "boolean",
          "description" : "Whether this bonus can be entitled automatically"
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the bonus"
        },
        "externalBonusCode" : {
          "type" : "string",
          "description" : "The External Bonus Code"
        },
        "allowAExternalApiCall" : {
          "type" : "boolean",
          "description" : "Is external API call allowed?"
        },
        "bonusCodeMaxUses" : {
          "type" : "integer",
          "description" : "The maximum number of times this Bonus-Code can be used by a single user"
        },
        "genericVoucher" : {
          "type" : "boolean",
          "description" : "Whether this is a Generic Voucher"
        },
        "optInVoucherCodes" : {
          "type" : "boolean",
          "description" : "Whether this is an Opt-In Voucher"
        }
      },
      "description" : "The Bonus domain object used to describe a bonus"
    },
    "BonusAccumulation" : {
      "type" : "object",
      "properties" : {
        "sequenceCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of sequences this Bonus is comprised of"
        },
        "stakeAccumulationPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "The percentage of of the stake that the user has accumulated, in order to clear the bonus"
        },
        "sequenceAccumulation" : {
          "type" : "boolean",
          "description" : "Whether there is a sequence accumulation"
        }
      },
      "description" : "The BonusAccumulation domain object"
    },
    "BonusDescription" : {
      "type" : "object",
      "properties" : {
        "locale" : {
          "type" : "string",
          "description" : "The locale"
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the Bonus"
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the Bonus"
        }
      },
      "description" : "The BonusDescription domain object used to encapsulate the description of a bonus"
    },
    "BonusExpiryRule" : {
      "type" : "object",
      "properties" : {
        "deposit" : {
          "type" : "boolean",
          "description" : "Whether expiry rule is based on deposit"
        },
        "winnings" : {
          "type" : "boolean",
          "description" : "Whether expiry rule is based on winnings"
        },
        "bonus" : {
          "type" : "boolean",
          "description" : "Whether expiry rule is based on bonus"
        }
      },
      "description" : "The BonusExpiryRule domain object used to describe the rules regarding the expiration of a bonus"
    },
    "BonusQualification" : {
      "type" : "object",
      "properties" : {
        "only" : {
          "type" : "boolean",
          "description" : "Whether those qualification are the only ones needed"
        },
        "numberOfBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets needed"
        },
        "bonusPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "The percentage of the bonus"
        },
        "minimumOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum odds needed"
        }
      },
      "description" : "The BonusQualification domain object that describes the qualifications needed in order to be eligible for a bonus"
    },
    "BonusTax" : {
      "type" : "object",
      "properties" : {
        "holiday" : {
          "type" : "boolean",
          "description" : "holiday"
        },
        "noTax" : {
          "type" : "boolean",
          "description" : "Whether there is tax or not"
        },
        "levelPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "The tax percentage level"
        }
      },
      "description" : "The BonusTax domain object that describes the tax imposed on a bonus"
    },
    "CurrencyAmount" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "description" : "The currency"
        },
        "amount" : {
          "type" : "number",
          "description" : "The monetary amount"
        }
      },
      "description" : "Key-Value pair, Monetary amount - Currency"
    },
    "DepositBonus" : {
      "type" : "object",
      "properties" : {
        "paymentMethods" : {
          "type" : "array",
          "description" : "List of payment methods",
          "items" : {
            "type" : "string"
          }
        },
        "minDeposits" : {
          "type" : "array",
          "description" : "List of the minimum deposit amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "maxDeposits" : {
          "type" : "array",
          "description" : "List of the maximum deposit amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "wageringFactor" : {
          "$ref" : "#/definitions/WageringFactor"
        },
        "withdrawlRestriction" : {
          "$ref" : "#/definitions/WithdrawlRestriction"
        },
        "expiryRule" : {
          "$ref" : "#/definitions/BonusExpiryRule"
        },
        "bonusFactor" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Bonus Factor"
        },
        "minimumOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum odds"
        },
        "daysToActivate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to activate the deposit bonus"
        },
        "daysToFulfill" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to fulfill the deposit bonus"
        },
        "qualifyOnPlacement" : {
          "type" : "boolean",
          "description" : "Whether you can qualify on placement"
        },
        "restoreStakeIntoWallet" : {
          "type" : "boolean",
          "description" : "Whether you can restore Stake into Wallet"
        }
      },
      "description" : "The DepositBonus domain object used to define Deposit Bonus"
    },
    "DiscountBonus" : {
      "type" : "object",
      "required" : [ "maxAmounts", "minStakes", "winningLegs" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stakes per currency that need to be wagered in order to claim the bonus",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "maxAmounts" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the maxium stakes per currency that can be wagered for this bonus",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "winningLegs" : {
          "type" : "array",
          "description" : "Winning legs",
          "items" : {
            "$ref" : "#/definitions/WinningLegs"
          }
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "minCombinedOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum combined odds"
        },
        "totalAmountAwarded" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total amount rewarded from this Bonus"
        }
      },
      "description" : "The DiscountBonus domain object used to describes a discount Bonus"
    },
    "DiscountBonusEntitlement" : {
      "type" : "object",
      "required" : [ "endTime", "minStakes", "startTime" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "selectionPaths" : {
          "type" : "array",
          "description" : "List of Selection Availability Paths",
          "items" : {
            "$ref" : "#/definitions/SelectionAvailability"
          }
        },
        "accumulation" : {
          "$ref" : "#/definitions/BonusAccumulation"
        },
        "bonusTax" : {
          "$ref" : "#/definitions/BonusTax"
        },
        "buildABet" : {
          "type" : "string",
          "enum" : [ "YES", "NO", "ONLY" ]
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ignoreEntitlement" : {
          "type" : "boolean",
          "description" : "Whether the entitlement requirement can be ignored"
        },
        "numQualifyingBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets that can qualify you qualify for the Bonus"
        },
        "discountAbsoluteValuePercentage" : {
          "$ref" : "#/definitions/DiscountBonusPercentage"
        },
        "discountAbsoluteValues" : {
          "type" : "array",
          "description" : "List of the absolute values of the discounts of this Bonus",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "isAbsoluteStake" : {
          "type" : "boolean",
          "description" : "Whether this Bonus is an absolute stake or not"
        }
      },
      "description" : "The DiscountBonusEntitlement domain object used to describe the entitlements pertaining a Discount Bonus"
    },
    "DiscountBonusPercentage" : {
      "type" : "object",
      "required" : [ "maxDiscountAmounts", "percentage" ],
      "properties" : {
        "percentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxDiscountAmounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        }
      }
    },
    "ExternalBonus" : {
      "type" : "object",
      "properties" : {
        "relativeExpiry" : {
          "type" : "string",
          "description" : "Relative Bonus expiry"
        },
        "daysToActivate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to activate Bonus"
        },
        "daysToFulfill" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to fullfill Bonus"
        },
        "daysToClaim" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to claim Bonus"
        },
        "releaseRestricted" : {
          "type" : "boolean",
          "description" : "Whether to release Restricted"
        }
      },
      "description" : "The ExternalBonus domain object used to describe an external bonus"
    },
    "ExternalBonusEntitlement" : {
      "type" : "object",
      "required" : [ "endTime", "minStakes", "startTime" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "selectionPaths" : {
          "type" : "array",
          "description" : "List of Selection Availability Paths",
          "items" : {
            "$ref" : "#/definitions/SelectionAvailability"
          }
        },
        "accumulation" : {
          "$ref" : "#/definitions/BonusAccumulation"
        },
        "bonusTax" : {
          "$ref" : "#/definitions/BonusTax"
        },
        "buildABet" : {
          "type" : "string",
          "enum" : [ "YES", "NO", "ONLY" ]
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ignoreEntitlement" : {
          "type" : "boolean",
          "description" : "Whether the entitlement requirement can be ignored"
        },
        "numQualifyingBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets that can qualify you qualify for the Bonus"
        },
        "winningBetQualification" : {
          "$ref" : "#/definitions/BonusQualification"
        },
        "losingBetQualification" : {
          "$ref" : "#/definitions/BonusQualification"
        },
        "winningOnly" : {
          "type" : "boolean",
          "description" : "Whether this bonus is for winning only"
        },
        "losingOnly" : {
          "type" : "boolean",
          "description" : "Whether this bonus is for losing only"
        }
      },
      "description" : "The ExternalBonusEntitlement domain object used to define the External Bonus Entitlement"
    },
    "Freebet" : {
      "type" : "object",
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "bonusStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the bonus stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "selectionPaths" : {
          "type" : "array",
          "description" : "List of Selection Paths",
          "items" : {
            "$ref" : "#/definitions/SelectionAvailability"
          }
        },
        "expiryRule" : {
          "$ref" : "#/definitions/BonusExpiryRule"
        },
        "bonusOverridenStake" : {
          "$ref" : "#/definitions/CurrencyAmount"
        },
        "freebetBonusPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Free bet Bonus Percentage"
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "bonusAccumulationPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "The percentage of Bonus Accumulation"
        },
        "relativeExpiry" : {
          "type" : "string",
          "description" : "Relative Expiry"
        },
        "daysToActivate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to activate the Free bet"
        },
        "daysToFulfill" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to fulfill the Free bet"
        },
        "daysToClaim" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to claim the Free bet"
        },
        "releaseRestricted" : {
          "type" : "boolean",
          "description" : "Whether to release Restricted"
        }
      },
      "description" : "The Freebet domain object used to define a free bet "
    },
    "FreebetEntitlement" : {
      "type" : "object",
      "required" : [ "endTime", "minStakes", "startTime" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "selectionPaths" : {
          "type" : "array",
          "description" : "List of Selection Availability Paths",
          "items" : {
            "$ref" : "#/definitions/SelectionAvailability"
          }
        },
        "accumulation" : {
          "$ref" : "#/definitions/BonusAccumulation"
        },
        "bonusTax" : {
          "$ref" : "#/definitions/BonusTax"
        },
        "buildABet" : {
          "type" : "string",
          "enum" : [ "YES", "NO", "ONLY" ]
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ignoreEntitlement" : {
          "type" : "boolean",
          "description" : "Whether the entitlement requirement can be ignored"
        },
        "numQualifyingBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets that can qualify you qualify for the Bonus"
        },
        "winningBetQualification" : {
          "$ref" : "#/definitions/BonusQualification"
        },
        "losingBetQualification" : {
          "$ref" : "#/definitions/BonusQualification"
        },
        "winningOnly" : {
          "type" : "boolean",
          "description" : "Whether this bonus is for winning only"
        },
        "losingOnly" : {
          "type" : "boolean",
          "description" : "Whether this bonus is for losing only"
        }
      },
      "description" : "The FreebetEntitlement domain object used to define a free bet entitlement"
    },
    "Names" : {
      "type" : "object",
      "properties" : {
        "longName" : {
          "type" : "string",
          "description" : "Long name"
        },
        "shortName" : {
          "type" : "string",
          "description" : "Short name"
        },
        "veryshortName" : {
          "type" : "string",
          "description" : "Very short name"
        }
      },
      "description" : "Bet part names"
    },
    "SelectionAvailability" : {
      "type" : "object",
      "required" : [ "pathNames" ],
      "properties" : {
        "path" : {
          "type" : "string",
          "example" : "['Football', 'Belgium', 'First division']",
          "description" : "A path begins by selecting Sport, then Country, and finally League"
        },
        "selections" : {
          "type" : "array",
          "description" : "List of selections",
          "items" : {
            "type" : "string"
          }
        },
        "pathName" : {
          "type" : "string",
          "description" : "The name assigned to the path"
        },
        "pathNames" : {
          "description" : "The Name versions",
          "$ref" : "#/definitions/Names"
        }
      },
      "description" : "The SelectionAvailability domain object"
    },
    "TreeAvailability" : {
      "type" : "object",
      "required" : [ "path" ],
      "properties" : {
        "path" : {
          "type" : "string",
          "example" : "['Football', 'Belgium', 'First division']",
          "description" : "A path begins by selecting Sport, then Country, and finally League"
        },
        "marketGroups" : {
          "type" : "array",
          "description" : "List of Market Groups",
          "items" : {
            "type" : "string"
          }
        },
        "marketTypes" : {
          "type" : "array",
          "description" : "List of Market Types",
          "items" : {
            "type" : "string"
          }
        },
        "pathName" : {
          "type" : "string",
          "description" : "The name assigned to the path"
        },
        "pathNames" : {
          "$ref" : "#/definitions/Names"
        },
        "availabilityType" : {
          "type" : "string",
          "enum" : [ "RESTRICTED_TO", "EXCLUDED_FROM" ]
        }
      },
      "description" : "The TreeAvailability domain object"
    },
    "VoucherBonus" : {
      "type" : "object",
      "required" : [ "bonusStakes" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "bonusStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the bonus stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "expiryRule" : {
          "$ref" : "#/definitions/BonusExpiryRule"
        },
        "bonusOverridenStake" : {
          "$ref" : "#/definitions/CurrencyAmount"
        },
        "voucherBonusPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Percentage of win allocated as a bonus"
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "bonusAccumulationPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "Bonus Accumulation Percentage"
        },
        "relativeExpiry" : {
          "type" : "string",
          "description" : "Relative Expiry"
        },
        "daysToActivate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to activate a bonus you have opted-in for"
        },
        "daysToFulfill" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to fulfill the bonus's requirements"
        },
        "daysToClaim" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days to claim the bonus"
        },
        "releaseRestricted" : {
          "type" : "boolean",
          "description" : "Whether the release of this bonus is restricted"
        },
        "maxVoucherCodeToAwardUses" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "How many times can a Voucher campaign award a generic voucher code"
        },
        "nonGenericVoucherCodesToAwards" : {
          "type" : "array",
          "description" : "List of non-generic Voucher Codes to awards",
          "items" : {
            "type" : "string"
          }
        },
        "timesBonusCodeAwarded" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of times this bonus code was awarded"
        },
        "awardedVoucherCodes" : {
          "type" : "array",
          "description" : "List of awarded voucher codes",
          "items" : {
            "type" : "string"
          }
        },
        "bonusCodeRulesOfUses" : {
          "type" : "array",
          "description" : "List of Bonus Description objects",
          "items" : {
            "$ref" : "#/definitions/BonusDescription"
          }
        },
        "voucherCodeToAward" : {
          "type" : "string",
          "description" : "Generic Voucher Code"
        },
        "awardedBonusCode" : {
          "type" : "string",
          "description" : "The Bonuc code that was awarded"
        },
        "genericVoucher" : {
          "type" : "boolean"
        }
      },
      "description" : "The VoucherBonus domain object used to describe a voucher bonus offering"
    },
    "VoucherBonusEntitlement" : {
      "type" : "object",
      "required" : [ "endTime", "minStakes", "startTime" ],
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "betTypes" : {
          "type" : "array",
          "example" : "['Single', 'Multiple', 'Trixie']",
          "description" : "List of Bet types",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the minimum stake amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of Availability Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "selectionPaths" : {
          "type" : "array",
          "description" : "List of Selection Availability Paths",
          "items" : {
            "$ref" : "#/definitions/SelectionAvailability"
          }
        },
        "accumulation" : {
          "$ref" : "#/definitions/BonusAccumulation"
        },
        "bonusTax" : {
          "$ref" : "#/definitions/BonusTax"
        },
        "buildABet" : {
          "type" : "string",
          "enum" : [ "YES", "NO", "ONLY" ]
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ignoreEntitlement" : {
          "type" : "boolean",
          "description" : "Whether the entitlement requirement can be ignored"
        },
        "numQualifyingBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets that can qualify you qualify for the Bonus"
        }
      },
      "description" : "The VoucherBonusEntitlement domain object"
    },
    "WageringFactor" : {
      "type" : "object",
      "properties" : {
        "factor" : {
          "type" : "number",
          "description" : "the factor"
        },
        "bonusOnly" : {
          "type" : "boolean",
          "description" : "Whether this is applied to bonus only"
        },
        "depositAndBonus" : {
          "type" : "boolean",
          "description" : "Whether this is deposit and bonus"
        }
      },
      "description" : "The WageringFactor domain object used to define a wagering factor"
    },
    "WinningLegs" : {
      "type" : "object",
      "properties" : {
        "winning" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "winning"
        },
        "percentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "percentage"
        }
      },
      "description" : "The WinningLegs domain object"
    },
    "WinningLegsBonus" : {
      "type" : "object",
      "properties" : {
        "paths" : {
          "type" : "array",
          "example" : "[['Football', 'Belgium', 'First division']]",
          "description" : "A list of paths. A path begins by selecting Sport, then Country, and finally League",
          "items" : {
            "type" : "string"
          }
        },
        "pathNames" : {
          "type" : "array",
          "description" : "A list of the name of each path",
          "items" : {
            "type" : "string"
          }
        },
        "minStakes" : {
          "type" : "array",
          "description" : "List of the minimum stakes per currency that need to be wagered in order to claim the bonus",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "maxAmounts" : {
          "type" : "array",
          "example" : "[{ \"currency\": \"EUR\", \"amount\": 5 }, { \"currency\": \"GBP\", \"amount\": 10 }]",
          "description" : "List of the maximum stakes amount per currency",
          "items" : {
            "$ref" : "#/definitions/CurrencyAmount"
          }
        },
        "winningLegs" : {
          "type" : "array",
          "description" : "List of the WinningLegs objects",
          "items" : {
            "$ref" : "#/definitions/WinningLegs"
          }
        },
        "availabilityPaths" : {
          "type" : "array",
          "description" : "List of the Availabity Paths",
          "items" : {
            "$ref" : "#/definitions/TreeAvailability"
          }
        },
        "prematch" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered as a pre-match or not"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "Whether the bonus is offered in-play or not"
        },
        "minOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum odds the bet(s) are staked at"
        },
        "minCombinedOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum combined odds"
        }
      },
      "description" : "The WinningLegsBonus domain object"
    },
    "WinningLosingLegs" : {
      "type" : "object",
      "properties" : {
        "winning" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "winning"
        },
        "losing" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "losing"
        },
        "percentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "percentage"
        }
      },
      "description" : "The WinningLosingLegs domain object used to define a free bet "
    },
    "WithdrawlRestriction" : {
      "type" : "object",
      "properties" : {
        "deposit" : {
          "type" : "boolean",
          "description" : "Whether a deposit restriction is in place"
        },
        "winnings" : {
          "type" : "boolean",
          "description" : "Whether a winnings restriction is in place"
        },
        "bonus" : {
          "type" : "boolean",
          "description" : "Whether a bonus restriction is in place"
        }
      },
      "description" : "The WithdrawlRestriction domain object used to define restrictions that apply to withdrawals"
    },
    "UploadBonusEntitlementsRequest" : {
      "type" : "object",
      "required" : [ "freeBetCurrency", "playerId" ],
      "properties" : {
        "playerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Account id to upload bonus entitlements"
        },
        "freeBetStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The free bet stake"
        },
        "freeBetCurrency" : {
          "type" : "string",
          "description" : "The free bet currency"
        }
      },
      "description" : "The upload bonus entitlements request"
    },
    "AccountBonus" : {
      "type" : "object",
      "properties" : {
        "bonus" : {
          "$ref" : "#/definitions/Bonus"
        },
        "accountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Account Bonus Id"
        },
        "freebetStakeOverride" : {
          "type" : "number",
          "format" : "double",
          "description" : "Freebet Stake Override"
        },
        "freebetStakeCurrency" : {
          "type" : "string",
          "description" : "Freebet Stake Currency"
        },
        "bonusCode" : {
          "type" : "string",
          "description" : "Bonus Code"
        },
        "claimCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The amount the punter can claim when he clears the bonus"
        },
        "expiryOverride" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiryOverride"
        },
        "qualifyingStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The stake needed to be wagered in order to qualify for this bonus"
        },
        "qualifyingBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets needed to be placed in order to qualify for this bonus"
        },
        "initialAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Initial Amount"
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Date this bonus was Created"
        },
        "modified" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Date this bonus was Qualified"
        },
        "accountBonusState" : {
          "type" : "string",
          "description" : "The Account Bonus State"
        },
        "entitlementType" : {
          "type" : "string",
          "description" : "Enumeration of the different Entitlement Types",
          "enum" : [ "ALL", "ACTIVE", "AVAILABLE", "HISTORIC", "OPT_IN", "AVAILABLE_AND_OPT_IN" ]
        },
        "optInTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Date the punter opted-in for the bonus"
        }
      },
      "description" : "The AccountBonus domain objects used to describe an Acocunt Bonus"
    },
    "AccountBonuses" : {
      "type" : "object",
      "properties" : {
        "entitlements" : {
          "type" : "array",
          "description" : "List of Account Bonuses",
          "items" : {
            "$ref" : "#/definitions/AccountBonus"
          }
        },
        "depositBonusQualifyingStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The amount of the deposit bonus that is needed in order to qualify fot this bonus"
        },
        "bonusBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Bonus' Balance"
        },
        "depositBonusBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The deposit Bonus' Balance"
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entitlementType" : {
          "type" : "string",
          "enum" : [ "ALL", "ACTIVE", "AVAILABLE", "HISTORIC", "OPT_IN", "AVAILABLE_AND_OPT_IN" ]
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "punterCurrency" : {
          "type" : "string"
        }
      },
      "description" : "The list of AccountBonuses domain objects used to describe an Acocunt Bonus"
    },
    "BonusMoneyRequest" : {
      "type" : "object",
      "required" : [ "betId", "bonusRef" ],
      "properties" : {
        "bonusRef" : {
          "type" : "string",
          "description" : "The bonusRef returned by NYXAD placebet"
        },
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The betId"
        },
        "bonusRule" : {
          "type" : "string",
          "description" : "The bonusRule returned by NYXAD placebet"
        }
      },
      "description" : "The BonusMoneyRequest domain object used to notify Amelco that a Bonus Money promotion is active"
    },
    "CampaignResponse" : {
      "type" : "object",
      "properties" : {
        "campaigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Bonus"
          }
        },
        "templates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Bonus"
          }
        }
      },
      "description" : "The campaign bonus response that contains player's bonuses"
    },
    "ParticipantTeam" : {
      "type" : "object",
      "required" : [ "competitorId" ],
      "properties" : {
        "extTeamId" : {
          "type" : "string",
          "description" : "The external team id. Use only this for translated"
        },
        "competitorId" : {
          "type" : "string",
          "description" : "The same with extTeamId",
          "pattern" : "^p-.*"
        },
        "teamName" : {
          "type" : "string",
          "description" : "The team name"
        },
        "sportName" : {
          "type" : "string",
          "description" : "The sport name"
        },
        "system" : {
          "type" : "string",
          "description" : "The system that provides it"
        },
        "systemRef" : {
          "type" : "string",
          "description" : "The id in the above system"
        },
        "sportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The sport id"
        },
        "translations" : {
          "type" : "array",
          "description" : "The translations",
          "items" : {
            "$ref" : "#/definitions/Names"
          }
        }
      },
      "description" : "The sportbook teams data"
    },
    "Competition" : {
      "type" : "object",
      "required" : [ "extGroupID" ],
      "properties" : {
        "extGroupID" : {
          "type" : "string",
          "description" : "The external group id. Use only this for translated",
          "pattern" : "^t-.*"
        },
        "groupName" : {
          "type" : "string",
          "description" : "The competition name"
        },
        "translations" : {
          "type" : "array",
          "description" : "The translations",
          "items" : {
            "$ref" : "#/definitions/Names"
          }
        }
      },
      "description" : "The sportbook competition data"
    },
    "ParticipantPlayer" : {
      "type" : "object",
      "required" : [ "competitorId" ],
      "properties" : {
        "extPlayerId" : {
          "type" : "string",
          "description" : "The external player id. Use only this for translated"
        },
        "playerName" : {
          "type" : "string",
          "description" : "The player name"
        },
        "competitorId" : {
          "type" : "string",
          "description" : "The same with extPlayerId",
          "pattern" : "^p-.*"
        },
        "system" : {
          "type" : "string",
          "description" : "The system that provides it"
        },
        "systemRef" : {
          "type" : "string",
          "description" : "The id in the above system"
        },
        "translations" : {
          "type" : "array",
          "description" : "The translations",
          "items" : {
            "$ref" : "#/definitions/Names"
          }
        },
        "sportName" : {
          "type" : "string",
          "description" : "The sport name"
        },
        "teamName" : {
          "type" : "string",
          "description" : "The team name"
        }
      },
      "description" : "The sportbook teams data"
    },
    "PlayerPreferenceResponse" : {
      "type" : "object",
      "required" : [ "currency" ],
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The SBE account id"
        },
        "additionalBetStakes" : {
          "type" : "array",
          "description" : "The additional bet stakes",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "autoAcceptHigherOdds" : {
          "type" : "boolean",
          "description" : "The auto accept higher odds"
        },
        "autoAcceptAllOdds" : {
          "type" : "boolean",
          "description" : "The auto accept all odds"
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency"
        },
        "defaultBetStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The default bet stake"
        },
        "stakeFactor" : {
          "type" : "array",
          "description" : "The stake factor (not mapped to Amelco model)",
          "items" : {
            "type" : "string"
          }
        },
        "favouriteCompetitions" : {
          "type" : "array",
          "description" : "The favourite competitions",
          "items" : {
            "$ref" : "#/definitions/Competition"
          }
        },
        "favouriteSports" : {
          "type" : "array",
          "description" : "The favourite sports",
          "items" : {
            "$ref" : "#/definitions/Sport"
          }
        },
        "favouriteTeams" : {
          "type" : "array",
          "description" : "The favourite teams",
          "items" : {
            "$ref" : "#/definitions/ParticipantTeam"
          }
        },
        "favouritePlayers" : {
          "type" : "array",
          "description" : "The favourite players",
          "items" : {
            "$ref" : "#/definitions/ParticipantPlayer"
          }
        }
      },
      "description" : "The domain player preferences"
    },
    "Sport" : {
      "type" : "object",
      "required" : [ "extSportID" ],
      "properties" : {
        "extSportID" : {
          "type" : "string",
          "description" : "The external sport id."
        },
        "sportName" : {
          "type" : "string",
          "description" : "The sport name"
        }
      },
      "description" : "The sportbook sports data. Not used for translated"
    },
    "PlayerPreference" : {
      "type" : "object",
      "required" : [ "currency" ],
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The SBE account id"
        },
        "additionalBetStakes" : {
          "type" : "array",
          "description" : "The additional bet stakes",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "autoAcceptHigherOdds" : {
          "type" : "boolean",
          "description" : "The auto accept higher odds"
        },
        "autoAcceptAllOdds" : {
          "type" : "boolean",
          "description" : "The auto accept all odds"
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency"
        },
        "defaultBetStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The default bet stake"
        },
        "stakeFactor" : {
          "type" : "array",
          "description" : "The stake factor (not mapped to Amelco model)",
          "items" : {
            "type" : "string"
          }
        },
        "favouriteCompetitions" : {
          "type" : "array",
          "description" : "The favourite competitions",
          "items" : {
            "$ref" : "#/definitions/Competition"
          }
        },
        "favouriteSports" : {
          "type" : "array",
          "description" : "The favourite sports",
          "items" : {
            "$ref" : "#/definitions/Sport"
          }
        },
        "favouriteTeams" : {
          "type" : "array",
          "description" : "The favourite teams",
          "items" : {
            "$ref" : "#/definitions/ParticipantTeam"
          }
        },
        "favouritePlayers" : {
          "type" : "array",
          "description" : "The favourite players",
          "items" : {
            "$ref" : "#/definitions/ParticipantPlayer"
          }
        }
      },
      "description" : "The domain player preferences"
    },
    "Attribute" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the attribute"
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the attribute"
        }
      },
      "description" : "Name-value pair"
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "literals" : {
          "type" : "array",
          "description" : "literals",
          "items" : {
            "$ref" : "#/definitions/Literal"
          }
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "categoryId"
        }
      },
      "description" : "Category"
    },
    "Code" : {
      "type" : "object",
      "required" : [ "codeType", "status" ],
      "properties" : {
        "codeType" : {
          "description" : "codeType",
          "$ref" : "#/definitions/CodeType"
        },
        "couponCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "couponCode"
        },
        "status" : {
          "type" : "string",
          "description" : "status"
        },
        "codeOrder" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "codeOrder"
        },
        "codeOdds" : {
          "type" : "array",
          "description" : "codeOdds",
          "items" : {
            "$ref" : "#/definitions/CodeOdd"
          }
        }
      },
      "description" : "Code"
    },
    "CodeOdd" : {
      "type" : "object",
      "required" : [ "oddSet" ],
      "properties" : {
        "oddSet" : {
          "type" : "string",
          "description" : "oddSet"
        },
        "odd" : {
          "type" : "number",
          "format" : "double",
          "description" : "odd"
        }
      },
      "description" : "CodeOdd"
    },
    "CodeType" : {
      "type" : "object",
      "required" : [ "lexiconCode" ],
      "properties" : {
        "lexiconCode" : {
          "description" : "lexiconCode",
          "$ref" : "#/definitions/LexiconCode"
        },
        "codeOrder" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "codeOrder"
        }
      },
      "description" : "CodeType"
    },
    "ContentPriority" : {
      "type" : "object",
      "properties" : {
        "attributes" : {
          "type" : "array",
          "description" : "attributes",
          "items" : {
            "$ref" : "#/definitions/Attribute"
          }
        }
      },
      "description" : "ContentPriority"
    },
    "ExportEvent" : {
      "type" : "object",
      "required" : [ "awayTeam", "homeTeam", "properties", "status", "tournament" ],
      "properties" : {
        "couponCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "couponCode"
        },
        "properties" : {
          "description" : "properties",
          "$ref" : "#/definitions/Properties"
        },
        "sportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "sportId"
        },
        "tournament" : {
          "description" : "tournament",
          "$ref" : "#/definitions/Tournament"
        },
        "tournamentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "tournamentId"
        },
        "homeTeam" : {
          "description" : "homeTeam",
          "$ref" : "#/definitions/Team"
        },
        "awayTeam" : {
          "description" : "awayTeam",
          "$ref" : "#/definitions/Team"
        },
        "status" : {
          "type" : "string",
          "description" : "status"
        },
        "kickoff" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "kickoff"
        },
        "betStartDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "betStartDate"
        },
        "markets" : {
          "type" : "array",
          "description" : "markets",
          "items" : {
            "$ref" : "#/definitions/Market"
          }
        }
      },
      "description" : "ExportEvent"
    },
    "ExportEventResponse" : {
      "type" : "object",
      "required" : [ "contentPriority" ],
      "properties" : {
        "contentPriority" : {
          "description" : "contentPriority",
          "$ref" : "#/definitions/ContentPriority"
        },
        "exportEvents" : {
          "type" : "array",
          "description" : "exportEvents",
          "items" : {
            "$ref" : "#/definitions/ExportEvent"
          }
        }
      },
      "description" : "ExportEventResponse"
    },
    "ExtendedLiteral" : {
      "type" : "object",
      "required" : [ "description", "lang", "longDescription", "shortDescription" ],
      "properties" : {
        "lang" : {
          "description" : "lang",
          "$ref" : "#/definitions/Lang"
        },
        "description" : {
          "type" : "string",
          "description" : "description"
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "shortDescription"
        },
        "longDescription" : {
          "type" : "string",
          "description" : "longDescription"
        },
        "externalId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "exportEvents"
        }
      },
      "description" : "ExtendedLiteral"
    },
    "Lang" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "id"
        }
      },
      "description" : "Lang"
    },
    "LexiconCode" : {
      "type" : "object",
      "required" : [ "market" ],
      "properties" : {
        "market" : {
          "type" : "string",
          "description" : "market"
        },
        "literals" : {
          "type" : "array",
          "description" : "literals",
          "items" : {
            "$ref" : "#/definitions/ExtendedLiteral"
          }
        }
      },
      "description" : "LexiconCode"
    },
    "LexiconMarket" : {
      "type" : "object",
      "properties" : {
        "literals" : {
          "type" : "array",
          "description" : "literals",
          "items" : {
            "$ref" : "#/definitions/ExtendedLiteral"
          }
        }
      },
      "description" : "LexiconMarket"
    },
    "Literal" : {
      "type" : "object",
      "required" : [ "description", "lang", "longDescription", "shortDescription" ],
      "properties" : {
        "lang" : {
          "description" : "lang",
          "$ref" : "#/definitions/Lang"
        },
        "description" : {
          "type" : "string",
          "description" : "description"
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "shortDescription"
        },
        "longDescription" : {
          "type" : "string",
          "description" : "longDescription"
        }
      },
      "description" : "Literal"
    },
    "Market" : {
      "type" : "object",
      "required" : [ "period" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the market. It is globally unique (two different events will not have the same marketId)."
        },
        "name" : {
          "type" : "string",
          "description" : "The market name"
        },
        "names" : {
          "description" : "The market's name variants",
          "$ref" : "#/definitions/Names"
        },
        "type" : {
          "type" : "string",
          "description" : "The id of the market type. Multiple markets of the same event may have the same type(the lines will differ). Markets from different events can have the same type."
        },
        "typeRef" : {
          "type" : "string",
          "description" : "The reference id of the market. It is unique across the markets of the same event. Markets from different events can have the same reference id."
        },
        "subtype" : {
          "type" : "string",
          "description" : "The sub type of the market type."
        },
        "lines" : {
          "type" : "array",
          "description" : "The lines (limit/handicaps) of the market. E.g. for 'Under/Over 2.5' the line is 2.5",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "index" : {
          "type" : "number",
          "format" : "double",
          "description" : "The current index. Applicable for indexed markets, e.g. 'Who will score the N goal', N is the index"
        },
        "status" : {
          "type" : "string",
          "description" : "The market status",
          "enum" : [ "inactive", "active", "suspended", "cancelled", "completed" ]
        },
        "displayed" : {
          "type" : "boolean",
          "description" : "If the market should be displayed in the frontend"
        },
        "min" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of selections that must be in a bet with selections from this market in order for the bet to be acceptable. Value 1 means that it can be played as single, value two must be combined with another selections etc."
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum number of selections that must be in a bet with selections from this market in order for the bet to be acceptable."
        },
        "strictType" : {
          "type" : "boolean",
          "description" : "Whether to apply market selection min/max limits"
        },
        "betBuilder" : {
          "type" : "boolean",
          "description" : "Indicates that market offered for bet builder"
        },
        "selections" : {
          "type" : "array",
          "description" : "A list containing the market selections",
          "items" : {
            "$ref" : "#/definitions/MarketSelection"
          }
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The market order"
        },
        "handicap" : {
          "type" : "boolean",
          "description" : "The handicap flag is true if the market type is handicap related. It will be null in all other cases."
        },
        "balanced" : {
          "type" : "boolean",
          "description" : "This flag indicates that the market is the most balanced among the markets with the same type on the same event"
        },
        "winningLegsBonus" : {
          "type" : "boolean",
          "description" : "Is winningLegsBonus"
        },
        "periodMarket" : {
          "type" : "boolean",
          "description" : "Is period market"
        },
        "period" : {
          "type" : "string",
          "description" : "The period market"
        },
        "grouped" : {
          "type" : "boolean",
          "description" : "If the market is part of a group (eg Under/Over with different lines). Relevant for Canvas to correctly display translations"
        },
        "isHandicap" : {
          "type" : "boolean",
          "description" : "The handicap flag is true if the market type is handicap related"
        }
      },
      "description" : "The Market object contains all the details of a market."
    },
    "MarketType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The default name of the market type"
        },
        "description" : {
          "type" : "string",
          "description" : "Free text description of the market"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order of the market"
        },
        "grouped" : {
          "type" : "boolean",
          "description" : "If the market is part of a group (eg Under/Over with different lines). Relevant for Canvas to correctly display translations"
        }
      }
    },
    "Properties" : {
      "type" : "object",
      "required" : [ "groundInfo" ],
      "properties" : {
        "groundInfo" : {
          "type" : "string",
          "description" : "groundInfo"
        }
      },
      "description" : "Properties"
    },
    "Restriction" : {
      "type" : "object",
      "required" : [ "minMaxType" ],
      "properties" : {
        "minMaxType" : {
          "type" : "string",
          "description" : "minMaxType"
        },
        "minValue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "minValue"
        },
        "maxValue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "maxValue"
        }
      },
      "description" : "Restriction"
    },
    "Team" : {
      "type" : "object",
      "properties" : {
        "literals" : {
          "type" : "array",
          "description" : "literals",
          "items" : {
            "$ref" : "#/definitions/Literal"
          }
        }
      },
      "description" : "Team"
    },
    "Tournament" : {
      "type" : "object",
      "required" : [ "category" ],
      "properties" : {
        "category" : {
          "description" : "category",
          "$ref" : "#/definitions/Category"
        },
        "literals" : {
          "type" : "array",
          "description" : "literals",
          "items" : {
            "$ref" : "#/definitions/Literal"
          }
        },
        "genericDescription" : {
          "type" : "string",
          "description" : "genericDescription"
        },
        "tournamentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "tournamentId"
        }
      },
      "description" : "Tournament"
    },
    "BankPaymentCompletionResponse" : {
      "type" : "object",
      "properties" : {
        "bankPaymentCompletionOutcome" : {
          "type" : "string",
          "description" : "bankPaymentCompletionOutcome",
          "enum" : [ "SUCCESS", "FAILURE" ]
        }
      }
    },
    "RetailerAccount" : {
      "type" : "object",
      "required" : [ "externalRetailerId" ],
      "properties" : {
        "externalRetailerId" : {
          "type" : "string",
          "description" : "externalRetailerId"
        },
        "retailerStatus" : {
          "type" : "string",
          "description" : "retailerStatus",
          "enum" : [ "ACTIVE", "NON_ACTIVE" ]
        },
        "bettingVerticalStatus" : {
          "type" : "string",
          "description" : "bettingVerticalStatus",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ]
        },
        "location" : {
          "description" : "location",
          "$ref" : "#/definitions/RetailerLocation"
        },
        "settlementEnabled" : {
          "type" : "boolean",
          "description" : "settlementEnabled"
        },
        "placementEnabled" : {
          "type" : "boolean",
          "description" : "placementEnabled"
        },
        "contactDetails" : {
          "description" : "retailer contact details",
          "$ref" : "#/definitions/RetailerContactDetails"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "retailer currency code"
        }
      },
      "description" : "RetailerAccount"
    },
    "RetailerContactDetails" : {
      "type" : "object",
      "properties" : {
        "email1" : {
          "type" : "string",
          "description" : "email1"
        },
        "email2" : {
          "type" : "string",
          "description" : "email2"
        },
        "phone1" : {
          "type" : "string",
          "description" : "phone1"
        },
        "phone2" : {
          "type" : "string",
          "description" : "phone2"
        },
        "fax" : {
          "type" : "string",
          "description" : "fax"
        }
      }
    },
    "RetailerLocation" : {
      "type" : "object",
      "properties" : {
        "countryCode" : {
          "type" : "string",
          "description" : "countryCode"
        },
        "region" : {
          "type" : "string",
          "description" : "region"
        },
        "county" : {
          "type" : "string",
          "description" : "county"
        },
        "town" : {
          "type" : "string",
          "description" : "town"
        },
        "street" : {
          "type" : "string",
          "description" : "street"
        },
        "houseNumber" : {
          "type" : "string",
          "description" : "houseNumber"
        },
        "postCode" : {
          "type" : "string",
          "description" : "postCode"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "description" : "longitude"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "description" : "latitude"
        }
      }
    },
    "RetailerAccountRequest" : {
      "type" : "object",
      "required" : [ "externalRetailerId" ],
      "properties" : {
        "externalRetailerId" : {
          "type" : "string",
          "description" : "externalRetailerId"
        },
        "retailerStatus" : {
          "type" : "string",
          "description" : "retailerStatus",
          "enum" : [ "ACTIVE", "NON_ACTIVE" ]
        },
        "bettingVerticalStatus" : {
          "type" : "string",
          "description" : "bettingVerticalStatus",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ]
        },
        "location" : {
          "description" : "location",
          "$ref" : "#/definitions/RetailerLocation"
        },
        "settlementEnabled" : {
          "type" : "boolean",
          "description" : "settlementEnabled"
        },
        "placementEnabled" : {
          "type" : "boolean",
          "description" : "placementEnabled"
        },
        "contactDetails" : {
          "description" : "retailer contact details",
          "$ref" : "#/definitions/RetailerContactDetails"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "retailer currency code"
        }
      },
      "description" : "RetailerAccountRequest"
    },
    "ForecastDescription" : {
      "type" : "object",
      "required" : [ "eventCode", "eventDescription", "selectionCode", "selectionShortDescription" ],
      "properties" : {
        "eventCode" : {
          "type" : "string",
          "description" : "eventCode"
        },
        "selectionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "selectionId"
        },
        "selectionCode" : {
          "type" : "string",
          "description" : "selectionCode"
        },
        "line" : {
          "type" : "number",
          "format" : "double",
          "description" : "line used for markets like under over"
        },
        "parlayCode" : {
          "type" : "string",
          "description" : "Identification number of parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        },
        "eventId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "eventId"
        },
        "eventDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Event date"
        },
        "eventDescription" : {
          "type" : "string",
          "description" : "eventDescription"
        },
        "marketShortDescription" : {
          "type" : "string",
          "description" : "marketShortDescription"
        },
        "selectionShortDescription" : {
          "type" : "string",
          "description" : "selectionShortDescription"
        },
        "forecastDescriptionError" : {
          "type" : "string",
          "description" : "forecastDescriptionError",
          "enum" : [ "UNAUTHORIZED_EVENT", "UNAVAILABLE_SELECTION" ]
        }
      }
    },
    "ForecastDescriptions" : {
      "type" : "object",
      "required" : [ "forecastDescriptionList" ],
      "properties" : {
        "forecastDescriptionList" : {
          "type" : "array",
          "description" : "forecastDescriptionList",
          "items" : {
            "$ref" : "#/definitions/ForecastDescription"
          }
        },
        "locale" : {
          "type" : "string",
          "description" : "locale"
        }
      }
    },
    "TerminalForecast" : {
      "type" : "object",
      "required" : [ "eventCode", "selectionCode" ],
      "properties" : {
        "eventCode" : {
          "type" : "string",
          "description" : "eventCode"
        },
        "selectionCode" : {
          "type" : "string",
          "description" : "selectionCode"
        },
        "selectionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "selectionId"
        },
        "line" : {
          "type" : "number",
          "format" : "double",
          "description" : "Line for markets like under over"
        },
        "parlayCode" : {
          "type" : "string",
          "description" : "Identification number of parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        }
      }
    },
    "TerminalForecasts" : {
      "type" : "object",
      "required" : [ "terminalForecastList" ],
      "properties" : {
        "terminalForecastList" : {
          "type" : "array",
          "description" : "terminalForecastList",
          "items" : {
            "$ref" : "#/definitions/TerminalForecast"
          }
        },
        "locale" : {
          "type" : "string",
          "description" : "locale"
        }
      }
    },
    "EventDataResponse" : {
      "type" : "object",
      "properties" : {
        "events" : {
          "type" : "array",
          "description" : "List of the returned events.",
          "items" : {
            "$ref" : "#/definitions/ReportEvent"
          }
        }
      },
      "description" : "EventDataResponse"
    },
    "ReportEvent" : {
      "type" : "object",
      "properties" : {
        "eventID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Event ID"
        },
        "betPaymentResult" : {
          "type" : "string",
          "description" : "The bet payment result",
          "enum" : [ "SUCCESS", "FAILURE" ]
        },
        "categoryDescription" : {
          "type" : "string",
          "description" : "Category that the event is included"
        },
        "competitionDescription" : {
          "type" : "string",
          "description" : "Competition short description that this event is included"
        },
        "competitionFullDescription" : {
          "type" : "string",
          "description" : "Competition full description that this event is included"
        },
        "eventCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Event code"
        },
        "eventDescription" : {
          "type" : "string",
          "description" : "Event description"
        },
        "eventKickoffTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Event’s kickoff date/time YYY-MM-DDTHH:MM:SS eg: 2017-12-22T20:45:00"
        },
        "eventStartTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Event’s start bet date/time. Format YYY-MM-DDTHH:MM:SS eg: 2017-12-22T20:45:00"
        },
        "eventStatus" : {
          "type" : "string",
          "description" : "Event status [ ACTIVE, SUSPENDED, COMPLETED, CLOSED, VOID ]",
          "enum" : [ "ACTIVE", "SUSPENDED", "COMPLETED", "CLOSED", "VOID" ]
        },
        "firstHalfScore" : {
          "type" : "string",
          "description" : "Event’s 1st half score"
        },
        "secondHalfScore" : {
          "type" : "string",
          "description" : "Event’s 2nd half score"
        },
        "selections" : {
          "type" : "array",
          "description" : "List of the returned selections",
          "items" : {
            "$ref" : "#/definitions/ReturnedSelection"
          }
        },
        "totalMarkets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of returned markets"
        }
      },
      "description" : "List of the returned events"
    },
    "ReturnedSelection" : {
      "type" : "object",
      "properties" : {
        "handicap" : {
          "type" : "string",
          "description" : "Selection description"
        },
        "marketDescription" : {
          "type" : "string",
          "description" : "Market description that the specific selection is included"
        },
        "odds" : {
          "type" : "number",
          "format" : "double",
          "description" : "The last odds that this selection has"
        },
        "overUnderValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The last Over/Under value that the market of this selection has"
        },
        "selectionDescription" : {
          "type" : "string",
          "description" : "Selection description"
        },
        "selectionCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Selection code"
        },
        "selectionStatus" : {
          "type" : "string",
          "description" : "The selection's status"
        }
      },
      "description" : "Returned selections"
    },
    "EventDataRequest" : {
      "type" : "object",
      "properties" : {
        "reportType" : {
          "type" : "string",
          "description" : "Report type.",
          "enum" : [ "ODDS", "RESULTS" ]
        },
        "eventCodes" : {
          "type" : "string",
          "description" : "Event codes separated by comma in case the terminal requests odds/results. If the specific attribute is not stated the fromEventCode & toEventCode attributes are mandatory."
        },
        "fromEventCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From event code that the terminal requests odds/results. If the specific attribute is stated the toEventCode attribute is mandatory and the eventCodes must not be stated."
        },
        "fromSelectionCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From selection code that the terminal request odds. If the specific attribute is stated the attribute toSelectionCode is mandatory. In case that the fromSelectionCode & the toSelectionCode are not stated, then the returned selection codes must be:\n• All the selection codes <= 10000 (special selection codes)\n• From the selection codes >= 10001 (normal codes), those are included in the markets:\no Fulltime result\no Halftime/Fulltime result\no 1st Half result\no 1st Half result – Double chance (one odds)\no 2nd Half result\no 2nd Half result – Double change\no Team will score first\no Fulltime result – Double chance\no Sum of Goals in the match (0-1, 2-3 & 4+)."
        },
        "reportDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Report date that the below event(s) are/were active (epoch)."
        },
        "sport" : {
          "type" : "string",
          "description" : "Requested sport that you need from the above event list to include in the report response."
        },
        "toEventCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "To event code that terminal requests odds/results. If the specific attribute is stated the fromEventCode attribute is mandatory and the eventCodes must not be stated."
        },
        "toSelectionCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "To selection code that the terminal request odds. If the specific attribute is stated the attribute fromSelectionCode is mandatory.\nIn case that the fromSelectionCode & the toSelectionCode are not stated, then the returned selection codes must be:\n• All the selection codes <= 10000 (special selection codes)\n• From the selection codes > 10000 (normal codes), those are included in the markets:\no Fulltime result\no Halftime/Fulltime result\no 1st Half result\no 1st Half result – Double chance (one odds)\no 2nd Half result\no 2nd Half result – Double change\no Team will score first\no Fulltime result – Double chance\no Sum of Goals in the match (0-1, 2-3 & 4+)"
        }
      },
      "description" : "EventDataRequest"
    },
    "ForecastDescriptionV2" : {
      "type" : "object",
      "required" : [ "eventCode", "eventDescription", "selectionCode", "selectionShortDescription" ],
      "properties" : {
        "eventCode" : {
          "type" : "string",
          "description" : "eventCode"
        },
        "selectionId" : {
          "type" : "string",
          "description" : "selectionId"
        },
        "selectionCode" : {
          "type" : "string",
          "description" : "selectionCode"
        },
        "line" : {
          "type" : "number",
          "format" : "double",
          "description" : "line used for markets like under over"
        },
        "parlayCode" : {
          "type" : "string",
          "description" : "Identification number of parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        },
        "eventId" : {
          "type" : "string",
          "description" : "eventId"
        },
        "eventDate" : {
          "type" : "string",
          "description" : "Event date"
        },
        "eventDescription" : {
          "type" : "string",
          "description" : "eventDescription"
        },
        "marketShortDescription" : {
          "type" : "string",
          "description" : "marketShortDescription"
        },
        "selectionShortDescription" : {
          "type" : "string",
          "description" : "selectionShortDescription"
        },
        "forecastDescriptionError" : {
          "type" : "string",
          "description" : "forecastDescriptionError",
          "enum" : [ "UNAUTHORIZED_EVENT", "UNAVAILABLE_SELECTION" ]
        }
      }
    },
    "ForecastDescriptionsV2" : {
      "type" : "object",
      "required" : [ "forecastDescriptionList" ],
      "properties" : {
        "forecastDescriptionList" : {
          "type" : "array",
          "description" : "forecastDescriptionList",
          "items" : {
            "$ref" : "#/definitions/ForecastDescriptionV2"
          }
        },
        "locale" : {
          "type" : "string",
          "description" : "locale"
        }
      }
    },
    "LadderOddsDTO" : {
      "type" : "object",
      "properties" : {
        "decimal" : {
          "type" : "string"
        },
        "decimalNotRounded" : {
          "type" : "string"
        },
        "fractional" : {
          "type" : "string"
        },
        "fractionalNotRounded" : {
          "type" : "string"
        },
        "american" : {
          "type" : "string"
        },
        "americanNotRounded" : {
          "type" : "string"
        },
        "rootIndex" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SportsbookCategoryDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "the id of the category (sport id, category id, tournament id)"
        },
        "name" : {
          "type" : "string",
          "description" : "the name of the category"
        },
        "names" : {
          "description" : "the name variants of the category",
          "$ref" : "#/definitions/Names"
        },
        "numEvents" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the number of all events in this category"
        },
        "numOutrightEvents" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the number of outright events"
        },
        "numInplayEvents" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the number of inplay events"
        },
        "subCategories" : {
          "type" : "array",
          "description" : "a list of the subcategories",
          "items" : {
            "$ref" : "#/definitions/SportsbookCategoryDTO"
          }
        },
        "order" : {
          "type" : "number",
          "format" : "double",
          "description" : "the order(priority) of the category"
        },
        "highlight" : {
          "type" : "boolean",
          "description" : "Whether the category is highlighted. Applicable for competitions only."
        },
        "weighting" : {
          "type" : "number",
          "format" : "double",
          "description" : "weighting"
        },
        "path" : {
          "type" : "string",
          "description" : "sportId:categoryId:tournamentId"
        }
      }
    },
    "EventInfo" : {
      "type" : "object",
      "properties" : {
        "sets" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isTie" : {
          "type" : "boolean"
        },
        "neutral" : {
          "type" : "boolean"
        },
        "tvId" : {
          "type" : "string"
        }
      },
      "description" : "The EventInfo object informational properties regarding the event."
    },
    "HomeAwayScore" : {
      "type" : "object",
      "properties" : {
        "home" : {
          "type" : "integer",
          "format" : "int32"
        },
        "away" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HomeAwayScoreString" : {
      "type" : "object",
      "properties" : {
        "home" : {
          "type" : "string"
        },
        "away" : {
          "type" : "string"
        }
      }
    },
    "MarketSelection" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The selection identifier. It is globally unique."
        },
        "code" : {
          "type" : "string",
          "description" : "The retail selection code. The retail code is used to identify the market selection in retail shops."
        },
        "name" : {
          "type" : "string",
          "description" : "The selection name"
        },
        "names" : {
          "description" : "The selection short name",
          "$ref" : "#/definitions/Names"
        },
        "type" : {
          "type" : "string",
          "description" : "The selection type."
        },
        "odd" : {
          "description" : "The selection odd.",
          "$ref" : "#/definitions/Odd"
        },
        "side" : {
          "type" : "string",
          "description" : "Indicates which team this selection relates to. Values: home/away"
        },
        "sts" : {
          "type" : "string",
          "description" : "The selection status. Values explanation: inactive, active, suspended, cancelled, won, lost, result dependent",
          "enum" : [ "ina", "ac", "bl", "canc", "won", "lost", "res" ]
        },
        "displayed" : {
          "type" : "boolean",
          "description" : "If the selection should be displayed in the frontend"
        },
        "pos" : {
          "description" : "Selection position in the grid",
          "$ref" : "#/definitions/Position"
        },
        "result" : {
          "type" : "string",
          "description" : "The selection result"
        }
      },
      "description" : "The MarketSelection object contains all the details of a market selection."
    },
    "Odd" : {
      "type" : "object",
      "properties" : {
        "dec" : {
          "type" : "number",
          "format" : "double",
          "description" : "The decimal odd."
        },
        "frac" : {
          "type" : "string",
          "description" : "The fractional odd."
        }
      },
      "description" : "The Odd object contains the odd of the selection in decimal and fractional format."
    },
    "Participant" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The participant id. This is the unique identifier of the participant."
        },
        "name" : {
          "type" : "string",
          "description" : "The participant name."
        },
        "extId" : {
          "type" : "string",
          "description" : "The external provider id of the participant."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the participant.",
          "enum" : [ "HOME", "AWAY", "OTHER" ]
        },
        "names" : {
          "description" : "Participant name variations.",
          "$ref" : "#/definitions/Names"
        }
      },
      "description" : "The Participant object contains all the details of a participant of an event(team or player). E.g. Chelsea, Nadal, etc."
    },
    "Period" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The period id"
        },
        "home" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The score of the home team for this period"
        },
        "away" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The score of the away team for this period"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The period status. Not started:0, Started:1, Completed:2"
        },
        "overtime" : {
          "type" : "boolean",
          "description" : "Indicator that this period is overtime"
        }
      }
    },
    "Position" : {
      "type" : "object",
      "properties" : {
        "row" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "col" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "ScoreProgress" : {
      "type" : "object",
      "properties" : {
        "totalTime" : {
          "type" : "string",
          "description" : "The total time that the event is running."
        },
        "periodTime" : {
          "type" : "string",
          "description" : "The time of the current period."
        },
        "periodId" : {
          "type" : "string",
          "description" : "The current period id"
        },
        "score" : {
          "description" : "The current score of the event.",
          "$ref" : "#/definitions/HomeAwayScore"
        },
        "server" : {
          "type" : "string",
          "description" : "Indicator of the current serving participant."
        },
        "game" : {
          "description" : "Score object contains the score for the home and away participant for the current game. Applicable for tennis, volley, etc.",
          "$ref" : "#/definitions/HomeAwayScoreString"
        },
        "periods" : {
          "type" : "array",
          "description" : "A list containing the periods of the event.",
          "items" : {
            "$ref" : "#/definitions/Period"
          }
        },
        "yellowCards" : {
          "description" : "Object that contains the home and away yellow cards.",
          "$ref" : "#/definitions/HomeAwayScore"
        },
        "redCards" : {
          "description" : "Object that contains the home and away red cards.",
          "$ref" : "#/definitions/HomeAwayScore"
        },
        "extraInfo" : {
          "type" : "object",
          "description" : "Extra sport unique information",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "The ScoreProgress object contains details of the score and progress of the event."
    },
    "SportsbookEventDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The event id. This is the unique identifier of the event."
        },
        "code" : {
          "type" : "string",
          "description" : "The retail code. The retail code is used to identify the event in retail shops. The codes are reused after a certain period, so the codes are not unique."
        },
        "sportId" : {
          "type" : "string",
          "description" : "The sport identifier. E.g. id for Football"
        },
        "sportName" : {
          "type" : "string",
          "description" : "The sport long name. E.g. Football"
        },
        "categId" : {
          "type" : "string",
          "description" : "The category identifier. E.g. id for England"
        },
        "categName" : {
          "type" : "string",
          "description" : "The category name. E.g. England"
        },
        "tourId" : {
          "type" : "string",
          "description" : "The tournament identifier. E.g. id for Premier League"
        },
        "tourName" : {
          "type" : "string",
          "description" : "The tournament name. E.g. Premier League"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start time of the event in millis epoch."
        },
        "name" : {
          "type" : "string",
          "description" : "The description of the event. E.g. Chelsea vs Arsenal"
        },
        "names" : {
          "description" : "The name variations of the event.",
          "$ref" : "#/definitions/Names"
        },
        "compNames" : {
          "description" : "The name variations of the competition.",
          "$ref" : "#/definitions/Names"
        },
        "categoryNames" : {
          "description" : "The name variations of the category.",
          "$ref" : "#/definitions/Names"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the event.",
          "enum" : [ "inactive", "active", "suspended", "closed", "cancelled", "completed" ]
        },
        "displayed" : {
          "type" : "boolean",
          "description" : "If the event should be displayed in the frontend"
        },
        "offeredInplay" : {
          "type" : "boolean",
          "description" : "Indicator that this event will be offered for inplay betting (betting while the event is in progress)."
        },
        "isInplay" : {
          "type" : "boolean",
          "description" : "Indicator that this event is now in inplay mode(the event is in progress)."
        },
        "outright" : {
          "type" : "boolean",
          "description" : "Indicator that the event is outright. Outrights are not A team vs B team events. E.g. Who will win the English Premier League?"
        },
        "betBuilder" : {
          "type" : "boolean",
          "description" : "Indicates that event offered for bet builder"
        },
        "numMarkets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of active markets."
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order of the event."
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The version number of the event. This is not a necessarily serial number."
        },
        "extIds" : {
          "type" : "object",
          "description" : "A map containing ids of the specific event from external providers. E.g. key: betradar, value: 1234",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "participants" : {
          "type" : "array",
          "description" : "A list containing all the participants of the event(teams or players). E.g. Chelsea and Arsenal or Nadal and Federer",
          "items" : {
            "$ref" : "#/definitions/Participant"
          }
        },
        "info" : {
          "description" : "EventInfo contains additional informational properties regarding the event",
          "$ref" : "#/definitions/EventInfo"
        },
        "scoreProgress" : {
          "description" : "ScoreProgress contains details of the score and progress of the event. It is available only when the event is in inplay mode.",
          "$ref" : "#/definitions/ScoreProgress"
        },
        "markets" : {
          "type" : "array",
          "description" : "A list containing the markets of the event. Depending on the API called, the list might be empty or some of the markets may not be included, even though the event has more defined markets.",
          "items" : {
            "$ref" : "#/definitions/Market"
          }
        },
        "cashout" : {
          "type" : "boolean",
          "description" : "Indicator that cashout is allows for a bet that includes this event."
        },
        "anytimeWincast" : {
          "type" : "boolean",
          "description" : "Indicator that anytime wincast is offered for this event."
        },
        "wincast" : {
          "type" : "boolean",
          "description" : "Indicator that wincast is offered for this event."
        },
        "anytimeScorecast" : {
          "type" : "boolean",
          "description" : "Indicator that anytime scorecast is offered for this event."
        },
        "timecast" : {
          "type" : "boolean",
          "description" : "Indicator that timecast is offered for this event."
        },
        "scorecast" : {
          "type" : "boolean",
          "description" : "Indicator that scorecast is offered for this event."
        },
        "winningLegsBonus" : {
          "type" : "boolean",
          "description" : "Is winningLegsBonus"
        },
        "path" : {
          "type" : "string",
          "description" : "sportId:categoryId:tournamentId:eventId"
        },
        "neutralVenue" : {
          "type" : "boolean",
          "description" : "Indicator that event is in neutral venue."
        },
        "inplay" : {
          "type" : "boolean"
        }
      },
      "description" : "The SportsbookEventDTO object contains all the details of a sportsbook event."
    },
    "MarketGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the market group"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the market group"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The market group order"
        },
        "marketTypes" : {
          "type" : "array",
          "description" : "A list containing the id of the market types that belong to this group",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SportConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "marketGroups" : {
          "type" : "object",
          "description" : "A map containing all the market groups and their corresponding market types. The key of the map is the market group id.",
          "additionalProperties" : {
            "$ref" : "#/definitions/MarketGroup"
          }
        },
        "marketTypes" : {
          "type" : "object",
          "description" : "A map containing all the market types. The key of the map is the market type id.",
          "additionalProperties" : {
            "$ref" : "#/definitions/MarketType"
          }
        }
      },
      "description" : "The SportConfigurationDTO object contains market type and market group configuration for the defined sports."
    },
    "SportsbookConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "sportConfiguration" : {
          "type" : "object",
          "description" : "A map containing the sport configuration. The key of the map is the sport id.",
          "additionalProperties" : {
            "$ref" : "#/definitions/SportConfigurationDTO"
          }
        }
      }
    },
    "BettingChampion" : {
      "type" : "object",
      "properties" : {
        "betId" : {
          "type" : "string",
          "description" : "The betId"
        },
        "betType" : {
          "type" : "string",
          "description" : "The bet type"
        },
        "stake" : {
          "type" : "number",
          "description" : "The bet stake"
        },
        "winnings" : {
          "type" : "number",
          "description" : "The winnings"
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency"
        },
        "numBets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of bets"
        },
        "name" : {
          "type" : "string",
          "description" : "The player name"
        }
      },
      "description" : "A betting champion"
    },
    "ParticipantDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The participant unique identifier."
        },
        "sportId" : {
          "type" : "string",
          "description" : "The id of the sport that this participant belongs to."
        },
        "name" : {
          "type" : "string",
          "description" : "The participant name."
        },
        "extIds" : {
          "type" : "object",
          "description" : "External provider name and id",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "translations" : {
          "type" : "array",
          "description" : "Translations and name variations",
          "items" : {
            "$ref" : "#/definitions/Names"
          }
        }
      },
      "description" : "The Participant object contains all the details of a defined participant(team or player). E.g. Chelsea, Nadal, etc."
    },
    "SportsbookEventVersionDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sportId" : {
          "type" : "string"
        },
        "tourId" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "outright" : {
          "type" : "boolean"
        },
        "isInplay" : {
          "type" : "boolean"
        },
        "offeredInplay" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventName" : {
          "type" : "string"
        }
      }
    },
    "ParlayCardAvailableEvents" : {
      "type" : "object",
      "properties" : {
        "eventIds" : {
          "type" : "array",
          "description" : "List of available event ids",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "cardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Parlay card id"
        }
      }
    },
    "ParlayCard" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id"
        },
        "name" : {
          "type" : "string",
          "description" : "Name"
        },
        "type" : {
          "type" : "string",
          "description" : "Type"
        },
        "value" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Value"
        },
        "prizes" : {
          "type" : "array",
          "description" : "Prizes",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    },
    "ParlayConfiguration" : {
      "type" : "object",
      "required" : [ "availableCards" ],
      "properties" : {
        "availableCards" : {
          "type" : "array",
          "description" : "Parlay cards",
          "items" : {
            "$ref" : "#/definitions/ParlayCard"
          }
        },
        "minLegs" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "MinLegs"
        },
        "maxLegs" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "MaxLegs"
        }
      }
    },
    "FootballEventOptions" : {
      "type" : "object",
      "properties" : {
        "nodeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Event Id"
        },
        "eventCode" : {
          "type" : "string",
          "description" : "Always null at the moment this line was written"
        },
        "tournament" : {
          "type" : "string",
          "description" : "Tournament name"
        },
        "category" : {
          "type" : "string",
          "description" : "Category name"
        },
        "homeTeam" : {
          "type" : "string",
          "description" : "Home team name"
        },
        "awayTeam" : {
          "type" : "string",
          "description" : "Away team name"
        },
        "kickoffDate" : {
          "type" : "string",
          "description" : "Kick off time and date"
        },
        "sysRefId" : {
          "type" : "string",
          "description" : "The betradar ID"
        }
      },
      "description" : "The football event with its options"
    },
    "FootballEventResponse" : {
      "type" : "object",
      "properties" : {
        "events" : {
          "type" : "array",
          "description" : "A list of football events with their options",
          "items" : {
            "$ref" : "#/definitions/FootballEventOptions"
          }
        }
      },
      "description" : "Contains a list of football events"
    },
    "SportsbookEventWithAllMarketsDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The event id. This is the unique identifier of the event."
        },
        "name" : {
          "type" : "string",
          "description" : "The description of the event. E.g. Chelsea vs Arsenal"
        },
        "sportId" : {
          "type" : "string",
          "description" : "The sport identifier. E.g. id for Football"
        },
        "categId" : {
          "type" : "string",
          "description" : "The category identifier. E.g. id for England"
        },
        "tourId" : {
          "type" : "string",
          "description" : "The tournament identifier. E.g. id for Premier League"
        },
        "outright" : {
          "type" : "boolean",
          "description" : "Indicator that the event is outright. Outrights are not A team vs B team events. E.g. Who will win the English Premier League?"
        },
        "numMarkets" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of active markets."
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The version number of the event. This is not a necessarily serial number."
        },
        "participants" : {
          "type" : "array",
          "description" : "A list containing all the participants of the event(teams or players). E.g. Chelsea and Arsenal or Nadal and Federer",
          "items" : {
            "$ref" : "#/definitions/Participant"
          }
        },
        "markets" : {
          "type" : "array",
          "description" : "A list containing the markets of the event. Depending on the API called, the list might be empty or some of the markets may not be included, even though the event has more defined markets.",
          "items" : {
            "$ref" : "#/definitions/Market"
          }
        },
        "cashout" : {
          "type" : "boolean",
          "description" : "Indicator that cashout is allows for a bet that includes this event."
        }
      }
    },
    "ResultsPageDTO" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SportsbookEventDTO"
          }
        }
      }
    },
    "PopularSelection" : {
      "type" : "object",
      "properties" : {
        "eventId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the event that the popular selection belongs to."
        },
        "marketTypeRef" : {
          "type" : "string",
          "description" : "The reference id of the market that the popular selection belongs to."
        },
        "marketSelectionId" : {
          "type" : "string",
          "description" : "The selection id."
        }
      }
    },
    "AmelcoErrorCode" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "AmountComparison" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of comparison"
        },
        "amount1" : {
          "type" : "number",
          "description" : "The first amount to compare"
        },
        "amount2" : {
          "type" : "number",
          "description" : "The second amount to compare"
        }
      },
      "description" : "The AmountComparison domain object that describes a comparison between amounts"
    },
    "BasicSegment" : {
      "type" : "object",
      "properties" : {
        "datesActive" : {
          "$ref" : "#/definitions/DateRange"
        },
        "datesInactive" : {
          "$ref" : "#/definitions/DateRange"
        },
        "contactPreference" : {
          "type" : "string",
          "description" : "The preferred way of contact"
        }
      },
      "description" : "The BasicSegment domain object that describes a basic Segment object"
    },
    "BetSegment" : {
      "type" : "object",
      "properties" : {
        "period" : {
          "type" : "string",
          "description" : "The Period"
        },
        "stakes" : {
          "$ref" : "#/definitions/AmountComparison"
        },
        "losses" : {
          "$ref" : "#/definitions/AmountComparison"
        },
        "totalTurnover" : {
          "$ref" : "#/definitions/AmountComparison"
        },
        "prematchTurnover" : {
          "$ref" : "#/definitions/AmountComparison"
        },
        "inplayTurnover" : {
          "$ref" : "#/definitions/AmountComparison"
        }
      },
      "description" : "The BetSegment domain object that describes a bet Segment object"
    },
    "CustomerSegment" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name"
        },
        "code" : {
          "type" : "string",
          "description" : "Code"
        },
        "basicSegment" : {
          "$ref" : "#/definitions/BasicSegment"
        },
        "depositSegment" : {
          "$ref" : "#/definitions/DepositSegment"
        },
        "betSegment" : {
          "$ref" : "#/definitions/BetSegment"
        },
        "products" : {
          "type" : "array",
          "description" : "List of products",
          "items" : {
            "type" : "string"
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "List of countries that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "cities" : {
          "type" : "array",
          "description" : "List of cities that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "postcodes" : {
          "type" : "array",
          "description" : "List of postcodes that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "currencies" : {
          "type" : "array",
          "description" : "List of currencies that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "locales" : {
          "type" : "array",
          "description" : "List of locales that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "sports" : {
          "type" : "array",
          "description" : "List of sports that belong to the segment",
          "items" : {
            "type" : "string"
          }
        },
        "limits" : {
          "$ref" : "#/definitions/PlayerLimitsHierarchy"
        },
        "licenseCode" : {
          "type" : "string",
          "description" : "The Segment's License Code"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Segment's Id"
        },
        "parentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Id of the parent Segment"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Whether this Segment is active"
        },
        "forBonus" : {
          "type" : "boolean",
          "description" : "Whether this Segment is for Bonus"
        },
        "forLimits" : {
          "type" : "boolean",
          "description" : "Whether this Segment is for Limits"
        },
        "forMatrix" : {
          "type" : "boolean",
          "description" : "Whether this Segment is for Matrix"
        },
        "forSettings" : {
          "type" : "boolean",
          "description" : "Whether this Segment is for Settings"
        },
        "forLayout" : {
          "type" : "boolean",
          "description" : "Whether this Segment is for Layout"
        },
        "defaultLimitsSegment" : {
          "type" : "boolean",
          "description" : "Whether this is a default limits segment"
        },
        "priority" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Segment's priority"
        },
        "type" : {
          "type" : "string",
          "description" : "Enumeration of the types of Customer Segment",
          "enum" : [ "ACCOUNT", "REGIONAL" ]
        },
        "brandId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The Id of the Segment's brand"
        },
        "channelId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The code of the channel: 1 - Mobile Web, 2 - Retail, 3 - Web, 4 - Photon, 6 - Mobile Native"
        }
      },
      "description" : "The CustomerSegment domain object that describes a Customer Segment object"
    },
    "CustomerSegmentsResponse" : {
      "type" : "object",
      "properties" : {
        "segments" : {
          "type" : "array",
          "description" : "The list of CustomerSegment",
          "items" : {
            "$ref" : "#/definitions/CustomerSegment"
          }
        }
      },
      "description" : "The CustomerSegmentsResponse domain object that wraps a list of CustomerSegment objects"
    },
    "DateRange" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The starting point of the Date range"
        },
        "to" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The ending point of the Date range"
        }
      },
      "description" : "The DateRange domain object that describes a range of dates"
    },
    "DepositSegment" : {
      "type" : "object",
      "properties" : {
        "depositDates" : {
          "$ref" : "#/definitions/DateRange"
        },
        "amount" : {
          "$ref" : "#/definitions/AmountComparison"
        },
        "contactPreference" : {
          "type" : "string",
          "description" : "The preferred way of contact"
        }
      },
      "description" : "The DepositSegment domain object that describes a deposit Segment object"
    },
    "Field" : {
      "type" : "object",
      "properties" : {
        "fieldInfo" : {
          "$ref" : "#/definitions/FieldInfo"
        },
        "key" : {
          "type" : "string",
          "description" : "The Field's key"
        },
        "value" : {
          "type" : "string",
          "description" : "The Field's value"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date the Field was last modified"
        },
        "effectiveFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date the Field is effective from"
        }
      },
      "description" : "The Field domain object"
    },
    "FieldInfo" : {
      "type" : "object",
      "properties" : {
        "inheritedFrom" : {
          "type" : "string",
          "description" : "Name of the field this field inherited from"
        },
        "channel" : {
          "type" : "string",
          "description" : "The name of the channel: 1 - Mobile Web, 2 - Retail, 3 - Web, 4 - Photon, 6 - Mobile Native"
        },
        "path" : {
          "type" : "string",
          "example" : "['Football', 'Belgium', 'First division']",
          "description" : "A path begins by selecting Sport, then Country, and finally League"
        },
        "namedPath" : {
          "type" : "string",
          "description" : "The name assigned to the path"
        },
        "segmentName" : {
          "type" : "string",
          "description" : "The name of the segment"
        },
        "fieldInherited" : {
          "type" : "boolean",
          "description" : "Whether the field is inherited or not"
        },
        "inheritedValue" : {
          "type" : "string",
          "description" : "The value that was inherited"
        },
        "fieldCategory" : {
          "type" : "string",
          "description" : "The category this field belongs to"
        }
      },
      "description" : "The FieldInfo domain object that provides info about a Field Model"
    },
    "PlayerLimits" : {
      "type" : "object",
      "properties" : {
        "fields" : {
          "type" : "array",
          "description" : "The list of Field objects",
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        },
        "path" : {
          "type" : "string",
          "example" : "['Football', 'Belgium', 'First division']",
          "description" : "A path begins by selecting Sport, then Country, and finally League"
        },
        "channelCode" : {
          "type" : "string",
          "description" : "The code of the channel: 1 - Mobile Web, 2 - Retail, 3 - Web, 4 - Photon, 6 - Mobile Native"
        }
      },
      "description" : "The PlayerLimits domain object"
    },
    "PlayerLimitsHierarchy" : {
      "type" : "object",
      "properties" : {
        "limits" : {
          "type" : "array",
          "description" : "List of PlayerLimits",
          "items" : {
            "$ref" : "#/definitions/PlayerLimits"
          }
        }
      },
      "description" : "The PlayerLimitsHierarchy domain object that wraps a list of PlayerLimits objects"
    },
    "UploadPlayersResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The upload status"
        },
        "error" : {
          "type" : "string",
          "description" : "The upload error if any"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The id"
        }
      },
      "description" : "The upload players response"
    },
    "UploadPlayersRequest" : {
      "type" : "object",
      "properties" : {
        "playerIds" : {
          "type" : "array",
          "description" : "The player ids (comma separated strings)",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The upload player request"
    },
    "SettingItems" : {
      "type" : "object",
      "properties" : {
        "settings" : {
          "type" : "array",
          "description" : "Settings list",
          "items" : {
            "$ref" : "#/definitions/SettingItems"
          }
        }
      },
      "description" : "The upload player request"
    },
    "AutoCashoutRequest" : {
      "type" : "object",
      "properties" : {
        "betId" : {
          "type" : "string",
          "description" : "The bet id for auto cashout"
        },
        "stopWin" : {
          "type" : "number",
          "description" : "This will be a Value that is Greater than the stake of the bet"
        },
        "stopLoss" : {
          "type" : "number",
          "description" : "This will be a value less than the stake of the bet"
        },
        "ascOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Greater than the odds of the bet "
        },
        "descOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Less than the odds of the bet"
        }
      }
    },
    "CashoutResponseDTO" : {
      "type" : "object",
      "required" : [ "balance", "betId", "cashedOutAmount", "status" ],
      "properties" : {
        "balance" : {
          "type" : "string",
          "description" : "Player balance after the cashout payment"
        },
        "betId" : {
          "type" : "string",
          "description" : "The Bet identification number (e.g. \"171175840000106\")"
        },
        "status" : {
          "type" : "string",
          "description" : "Reply status (\"SUCCESS\" or \"FAIL\")"
        },
        "rejectionCode" : {
          "type" : "string",
          "description" : "Rejection reason in case of failed cashout"
        },
        "cashedOutAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Amount that has been cashouted"
        }
      },
      "description" : "The response with the cashout an amount for a certain bet"
    },
    "CashoutRequest" : {
      "type" : "object",
      "properties" : {
        "cashOutStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Cashout amount that will be paid - applicable only for full cashout"
        },
        "partial" : {
          "description" : "The PartialCashout object",
          "$ref" : "#/definitions/PartialCashout"
        }
      },
      "description" : "The request used with the cashout (partial or full) of a certain bet"
    },
    "PartialCashout" : {
      "type" : "object",
      "properties" : {
        "remainingCapturedStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "This is the remaining stake after you have cashedout some % - applicable only for partial cashout"
        },
        "fullCashOutAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "This the full_cashout_amount available to cash_out - applicable only for partial cashout"
        },
        "cashOutPercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "This is the amount you want to cash_out as a % of the available cash_out amount - applicable only for partial cashout"
        },
        "cashOutAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "This is the amount you want to cash_out - applicable only for partial cashout"
        }
      },
      "description" : "Contains properties related to partial cashout"
    },
    "AutoCashoutOptions" : {
      "type" : "object",
      "properties" : {
        "stopWin" : {
          "type" : "number",
          "description" : "This will be a Value that is Greater than the stake of the bet"
        },
        "stopLoss" : {
          "type" : "number",
          "description" : "This will be a value less than the stake of the bet"
        },
        "ascOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Greater than the odds of the bet "
        },
        "descOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Less than the odds of the bet"
        }
      }
    },
    "Bet" : {
      "type" : "object",
      "required" : [ "selections", "stake", "system" ],
      "properties" : {
        "selections" : {
          "type" : "array",
          "description" : "The bet selections",
          "items" : {
            "$ref" : "#/definitions/Selection"
          }
        },
        "stake" : {
          "description" : "The stake amount",
          "$ref" : "#/definitions/Stake"
        },
        "system" : {
          "description" : "The selected bet system. Click <a target='_blank' href='/swagger/examples/system-combinations.xlsx'>here</a> to download the full system types table",
          "$ref" : "#/definitions/System"
        },
        "winType" : {
          "type" : "string",
          "description" : "Win bet data type:WIN, PLACE, EACH_WAY"
        },
        "transactionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The transaction id"
        },
        "checkOdds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check type of the additional odds data. The system will reject a coupons when: 1. a selected forecast has lower current Odds or different current Handicap / UO value than these the player has seen  2. a selected forecast has different current Odds / Handicap / UO value than these the player has seen 3. a selected forecast has different Handicap / UO value than these the player has seen"
        },
        "totalStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total selection stake"
        },
        "potentialPayout" : {
          "type" : "number",
          "format" : "double",
          "description" : "The potential payout"
        },
        "totalOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total odds of the specific bet part"
        },
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The bet id"
        },
        "betNo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The bet number"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the part bet(e.g. ACCEPTED, REJECTED, VOID)"
        },
        "rejectionReason" : {
          "type" : "string",
          "description" : "The reason why a bet has been rejected"
        },
        "liveBet" : {
          "type" : "boolean",
          "description" : "Live bet indicator"
        },
        "cashOut" : {
          "type" : "boolean",
          "description" : "In case this bet can be cashed out"
        },
        "totalPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total price of the bet"
        },
        "totalPriceAmerican" : {
          "type" : "number",
          "format" : "double",
          "description" : "The american total price of the bet"
        },
        "limitedStake" : {
          "type" : "number",
          "description" : "When bet limit or stake limit validation fails, this contains the maximum stake the user can enter, in their currency"
        },
        "betTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Bet accepted Epoch time in msecs"
        },
        "channelId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Channel ID that this bet part was played"
        },
        "accountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the freebet bonus"
        },
        "bonusWinnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "For bets in an ACCEPTED state, this will be the potential bonus winnings if the bet wins/For WINNING/SETTLED bets it will be the actual bonus winnings. Populated when a bet is eligible to a Column length bonus and was placed from a retailer"
        },
        "freeBet" : {
          "type" : "boolean",
          "description" : "Free Bet indicator"
        },
        "bonusStake" : {
          "description" : "Populated when a bet is a freebet. It is the amount of the freebet",
          "$ref" : "#/definitions/Stake"
        },
        "payout" : {
          "type" : "number",
          "description" : "Settled winning amount"
        },
        "displayStatus" : {
          "type" : "string",
          "description" : "Status of the part bet"
        },
        "overAskId" : {
          "type" : "string",
          "description" : "Over/Ask identification number"
        },
        "autoCashout" : {
          "description" : "AutocashoutOptions",
          "$ref" : "#/definitions/AutoCashoutOptions"
        },
        "referralPath" : {
          "type" : "string",
          "description" : "Canvas might have this field as \"registration source\""
        },
        "potentialBonusWinnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated when a bet is eligible to a Column length bonus and indicates the amount awarded"
        },
        "totalDiscountStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated in the bet placement response when the punter is awarded with a discount bonus and indicates the discount amount awarded"
        },
        "bonusCodeAwarded" : {
          "type" : "string",
          "description" : "The bonus code awarded"
        },
        "voucherCode" : {
          "type" : "string",
          "description" : "The bonus code to apply on the bet"
        },
        "extBetId" : {
          "type" : "string",
          "description" : "The reserveRef in PAM. Used for over/ask."
        },
        "parentBetId" : {
          "type" : "string",
          "description" : "The parent bet id. This should exist after an Edit or Partially cashout bet"
        },
        "childBetId" : {
          "type" : "string",
          "description" : "The child bet id. This should exist after an Edit or Partially cashout bet"
        },
        "totalCost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Bet's total cost that the player have pay"
        },
        "originalCashoutBetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If this bet is a child bet from partial cashout, this betId is its parent"
        },
        "partialCashoutBetIds" : {
          "type" : "array",
          "description" : "If this bet is a parent of partial cashout those betIds are their children",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "taxOnReturnsPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation percentage on returns amount (on winnings amount)"
        },
        "taxOnReturnsAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation on returns amount (on winnings amount)"
        },
        "freeBetBonusAmount" : {
          "description" : "Populated when a player is awarded with a freebet and is used to store the amount of the freebet",
          "$ref" : "#/definitions/FreeBetBonus"
        },
        "discountBonusAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated when a player is awarded with a discount and is used to store the discount amount"
        },
        "refund" : {
          "type" : "number",
          "format" : "double",
          "description" : "Refund amount"
        },
        "promoDescription" : {
          "type" : "string",
          "description" : "Description of the promotion used"
        },
        "bonusCodeRulesOfUse" : {
          "type" : "string",
          "description" : "Description of the rules of the bonus code"
        },
        "voucherCodeUsed" : {
          "type" : "string",
          "description" : "The voucher code used"
        },
        "discountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The voucher code id"
        },
        "retailerId" : {
          "type" : "string",
          "description" : "retailerId"
        },
        "paidByRetailer" : {
          "type" : "string",
          "description" : "paidByRetailer"
        },
        "paidTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "paidTime"
        },
        "buildABet" : {
          "type" : "boolean",
          "description" : "Indicates that bet is created by bet builder."
        },
        "cashoutResult" : {
          "description" : "Cashout amounts",
          "$ref" : "#/definitions/CashoutResult"
        },
        "parlayBet" : {
          "type" : "boolean",
          "description" : "Indicates whether the coupon is placed as parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        },
        "currentlyInplay" : {
          "type" : "boolean"
        }
      },
      "description" : "The bet domain object used to define a bet"
    },
    "BetPartResult" : {
      "type" : "object",
      "properties" : {
        "partId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Part ID"
        },
        "partNo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of part"
        },
        "resultType" : {
          "type" : "string",
          "description" : "Result type"
        }
      },
      "description" : "Bet part"
    },
    "BetResponse" : {
      "type" : "object",
      "required" : [ "betSlipId", "bets" ],
      "properties" : {
        "employeeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The unique id of the retailer employee"
        },
        "acceptPriceChange" : {
          "type" : "boolean",
          "description" : "If there is or not any price changed (true or false)"
        },
        "acceptOdds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Accept odds types: 1 = Higher Odds, 2 = All, 3 = None (Only same odds)"
        },
        "bets" : {
          "type" : "array",
          "description" : "List of placed bets",
          "items" : {
            "$ref" : "#/definitions/Bet"
          }
        },
        "betSlipId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The parent id of all bets on this request"
        },
        "gameId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The gameId i.e. 15000"
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of bets"
        },
        "freeBets" : {
          "type" : "array",
          "description" : "Free bets data",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "placedTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Placed time of the bet"
        },
        "sumOfStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sumOfStake"
        },
        "sumOfPayout" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sumOfPayout"
        },
        "sumOfBonusWinnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sumOfBonusWinnings"
        },
        "sumOfTotalCost" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sumOfTotalCost"
        },
        "betslipOverAskId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The betslip οverAsk Id"
        },
        "result" : {
          "description" : "If present, contains the payment status of the betslip",
          "$ref" : "#/definitions/ResponseMessage"
        },
        "betslipPotentialTotalPayout" : {
          "type" : "number",
          "description" : "The betslip potential total payout"
        },
        "betslipPotentialBonusWinnings" : {
          "type" : "number",
          "description" : "The betslip potential bonus winnings"
        }
      },
      "description" : "The place bet response"
    },
    "CashoutResult" : {
      "type" : "object",
      "properties" : {
        "cashoutValue" : {
          "type" : "number",
          "description" : "Cashout value"
        },
        "startingCashoutValue" : {
          "type" : "number",
          "description" : "Starting cashout value"
        },
        "taxOnReturnsAmount" : {
          "type" : "number",
          "description" : "Tax on returns amount"
        },
        "refundTaxOnReturnsAmount" : {
          "type" : "number",
          "description" : "Refunds on returns amount"
        },
        "betpartResults" : {
          "type" : "array",
          "description" : "Bet part results",
          "items" : {
            "$ref" : "#/definitions/BetPartResult"
          }
        },
        "betNo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "No of bet"
        },
        "betId" : {
          "type" : "string",
          "description" : "Bet ID"
        },
        "status" : {
          "type" : "string",
          "description" : "Cashout satus",
          "enum" : [ "OK", "REJECTED" ]
        },
        "rejectionReason" : {
          "type" : "string",
          "description" : "Cashout rejection reason",
          "enum" : [ "NOT_OFFERED_FOR_EVENT", "NOT_OFFERED_FOR_MARKET", "NOT_OFFERED_INPLAY", "NOT_OFFERED_PREMATCH", "NOT_OFFERED_FOR_BET_TYPE", "NOT_OFFERED_FOR_CHANNEL", "PRICE_COULD_NOT_BE_DETERMINED", "SELECTION_SUSPENDED", "SELECTION_RESULTED", "MARKET_SUSPENDED", "EVENT_SUSPENDED", "BET_CLOSED", "CASH_ONLY_ALLOWED", "BET_ENTILED_FREE_BET", "BET_ENTITLED_BONUS" ]
        }
      },
      "description" : "Contains cashout amounts"
    },
    "EntitySummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Entity identification number"
        },
        "name" : {
          "type" : "string",
          "description" : "Entity name"
        },
        "code" : {
          "type" : "string",
          "description" : "Entity description code"
        },
        "subCode" : {
          "type" : "string",
          "description" : "Entity description sub-code"
        },
        "names" : {
          "description" : "Entity names",
          "$ref" : "#/definitions/Names"
        }
      },
      "description" : "Summary for a sports entity"
    },
    "FreeBetBonus" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "RELEASE_BONUS" ]
        }
      }
    },
    "OddData" : {
      "type" : "object",
      "required" : [ "decimal" ],
      "properties" : {
        "decimal" : {
          "type" : "number",
          "format" : "double",
          "description" : "Decimal odds of each selection (e.g. 2,60)"
        },
        "fractional" : {
          "type" : "string",
          "description" : "Fractional representation of odds (e.g. 8/5)"
        },
        "american" : {
          "type" : "number",
          "description" : "American odds of each selection"
        }
      },
      "description" : "The odds data object contains info about the odds"
    },
    "Odds" : {
      "type" : "object",
      "properties" : {
        "decimal" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "fractional" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "american" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "priceType" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "enum" : [ "REAL", "STARTING", "CURRENT" ]
        }
      }
    },
    "Selection" : {
      "type" : "object",
      "required" : [ "odds", "partNo", "selectionId" ],
      "properties" : {
        "partNo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of the selection. If there are 3 selections they should have 1,2,3 respectively"
        },
        "selectionId" : {
          "type" : "string",
          "description" : "The selection id(For Iflex will be \"MARK_CODE_EVENT_CODE\")"
        },
        "eventId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The event id"
        },
        "odds" : {
          "description" : "The odds data object",
          "$ref" : "#/definitions/OddData"
        },
        "newOdds" : {
          "description" : "When odds are changed we get the new ones.",
          "$ref" : "#/definitions/Odds"
        },
        "newLine" : {
          "type" : "number",
          "format" : "double",
          "description" : "When the line is changed we get the new one."
        },
        "banker" : {
          "type" : "boolean",
          "description" : "The banker definition"
        },
        "lines" : {
          "type" : "array",
          "description" : "The Handicap/Under-Over value (Only IFlex will have 2 indexes (var0, var1))",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "getiMarket" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The index market(-1:No i-market 0..19: i-market played position OR 0..127: Live Home Team Score when the forecast=724..729)"
        },
        "scores" : {
          "type" : "array",
          "description" : "The match score. Indexed by team A score[0] & team B score [1]",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "groupValue" : {
          "type" : "array",
          "description" : "Mandatory for Iflex (0: No group), (1..10  : groups A, B, C, D, AB, AC, AD, BC, BD, CD), (11..20: R-groups A, B, C, D, AB, AC, AD, BC, BD, CD), (+100  : Banker selection)",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the selection, equivalent to the status of the BetPartPlacementResult"
        },
        "marketId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The amelco market ID"
        },
        "selectionNames" : {
          "description" : "An object contain variations of names",
          "$ref" : "#/definitions/Names"
        },
        "selectionName" : {
          "type" : "string",
          "description" : "The selection name"
        },
        "marketName" : {
          "type" : "string",
          "description" : "The market name"
        },
        "eventName" : {
          "type" : "string",
          "description" : "The event name"
        },
        "eventTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The event kickoff time"
        },
        "resultType" : {
          "type" : "string",
          "description" : "Result description of selection result: e.g NOT_SET,WIN,LOST"
        },
        "priceChangedAfterLockDate" : {
          "type" : "boolean",
          "description" : "priceChangedAfterLockDate"
        },
        "inplay" : {
          "type" : "boolean",
          "description" : "inplay"
        },
        "pitcherAName" : {
          "type" : "string",
          "description" : "pitcherAName"
        },
        "pitcherBName" : {
          "type" : "string",
          "description" : "pitcherBName"
        },
        "retailRowPosition" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Row position that the specific selection has been marked by the player/terminal user on the coupon"
        },
        "competitors" : {
          "type" : "array",
          "description" : "The competitors ids",
          "items" : {
            "$ref" : "#/definitions/EntitySummary"
          }
        },
        "competitionParent" : {
          "description" : "The competition parent",
          "$ref" : "#/definitions/EntitySummary"
        },
        "competitionObj" : {
          "description" : "The competition object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "sport" : {
          "description" : "The sport",
          "$ref" : "#/definitions/EntitySummary"
        },
        "parlayCode" : {
          "type" : "string",
          "description" : "Identification number of parlay"
        }
      },
      "description" : "The selection domain object used to define the selections per bet"
    },
    "Stake" : {
      "type" : "object",
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Betting amount on each combination will be produced from those parts"
        },
        "currency" : {
          "type" : "string",
          "description" : "Description of the currency with letters e.g. \"GBP\""
        }
      },
      "description" : "The stake data object contains the stake amount info"
    },
    "System" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Betting data type: SINGLE, MULTIPLE, DOUBLE, SYSTEM_3, SYSTEM_4, SYSTEM_5, SYSTEM_6, SYSTEM_7, SYSTEM_8, BANKER_2BANKER_3BANKER_4BANKER_5BANKER_6BANKER_7BANKER_8, BANKER_10, BANKER_11, BANKER_12, BANKER_13, BANKER_14, BANKER_15, BANKER_16, BANKER_17, BANKER_18, BANKER_19, BANKER_20, TRIXIECANADIAN, HEINZ, SUPER_HEINZ, PATENT, LUCKY_15, LUCKY_31, LUCKY_63, LUCKY_127YANKEE, GOLIATH, SUPER_GOLIATH, WINCAST, SCORECAST, ANYTIME_SCORECAST, TIMECAST, STRAIGHT_FORECAST, REVERSE_FORECAST, COMBINATION_FORECAST, TRICAST, COMBINATION_TRICAST, MULTIWAY_10, MULTIWAY_11, MULTIWAY_12, MULTIWAY_13, MULTIWAY_14, MULTIWAY_15, MULTIWAY_16, MULTIWAY_17, MULTIWAY_18, MULTIWAY_19, MULTIWAY_20, MULTIWAY_BANKER_9, MULTIWAY_BANKER_10, MULTIWAY_BANKER_11, MULTIWAY_BANKER_12, MULTIWAY_BANKER_13, MULTIWAY_BANKER_14, MULTIWAY_BANKER_15, MULTIWAY_BANKER_16, MULTIWAY_BANKER_17, MULTIWAY_BANKER_18, MULTIWAY_BANKER_19, MULTIWAY_BANKER_20"
        },
        "systems" : {
          "type" : "array",
          "description" : "The bet system multiplier (Only IFlex)",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "description" : "The system domain object which defines the bet type and describes the system type"
    },
    "AcceptOverAskRequest" : {
      "type" : "object",
      "required" : [ "isecure" ],
      "properties" : {
        "isecure" : {
          "type" : "array",
          "description" : "The isecure, used only by Retailers",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "BetNotification" : {
      "type" : "object",
      "required" : [ "notifications" ],
      "properties" : {
        "notifications" : {
          "type" : "array",
          "description" : "A list of key value pairs. Key should be betId and value a boolean. True for bets that need notification when settled",
          "items" : {
            "$ref" : "#/definitions/KeyValueDTO"
          }
        }
      },
      "description" : "Contains a list of a list of key value pairs. Key should be a betId and value a boolean; True for bets that need notification when settled"
    },
    "KeyValueDTO" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "The key"
        },
        "value" : {
          "type" : "object",
          "description" : "The value"
        }
      },
      "description" : "The KeyValueDTO object is used for transferring key value pairs"
    },
    "CalculatePriceResponse" : {
      "type" : "object",
      "properties" : {
        "Response" : {
          "$ref" : "#/definitions/Response"
        }
      },
      "description" : "The calculate price response"
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "calculatedPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : "The calculated price"
        }
      }
    },
    "BetRequest" : {
      "type" : "object",
      "required" : [ "bets", "extBetslipId", "transaction" ],
      "properties" : {
        "playerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The player id"
        },
        "bets" : {
          "type" : "array",
          "description" : "List of placed bets",
          "items" : {
            "$ref" : "#/definitions/Bet"
          }
        },
        "transaction" : {
          "description" : "The transaction request",
          "$ref" : "#/definitions/Transaction"
        },
        "acceptPriceChange" : {
          "type" : "boolean",
          "description" : "The acceptPriceChange"
        },
        "acceptOdds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Accept odds types: 1 = Higher Odds, 2 = All, 3 = None (Only same odds)"
        },
        "multiFactor" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "It defines the game cost. If it is 1 the cost would be 1*columns. If it is 2 the cost would be 2*columns"
        },
        "extBetslipId" : {
          "type" : "string",
          "description" : "Used for undo bet request"
        },
        "isecure" : {
          "type" : "array",
          "description" : "The isecure, used only by Retailers",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "parlayBet" : {
          "type" : "boolean",
          "description" : "Indicates whether the coupon is placed as parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        }
      },
      "description" : "The place bet request object used to define request for a bet slip"
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "channelId", "id", "transactionTime" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A unique internal id of the transaction request"
        },
        "channelId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The related channel"
        },
        "retailerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The unique id of the retailer"
        },
        "retailerTerminalId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The unique id of the retailer terminal"
        },
        "retailerEmployeeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The unique id of the retailer employee"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The type of the transaction"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The status of the transaction request"
        },
        "transactionTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date that the transaction occurred"
        },
        "refId" : {
          "type" : "string",
          "description" : "A unique reference id"
        },
        "externalPartyName" : {
          "type" : "string",
          "description" : "The external party name"
        }
      },
      "description" : "The transaction object which contains the transaction metadata"
    },
    "ChangeBetRequest" : {
      "type" : "object",
      "required" : [ "betRequest", "cashoutValue" ],
      "properties" : {
        "cashoutValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "Cashout Value of the bet to be changed"
        },
        "betRequest" : {
          "description" : "The place bet request object used to define request for a new bet",
          "$ref" : "#/definitions/BetRequest"
        }
      },
      "description" : "The change my bet request object used to define request for a changed bet"
    },
    "AmendRequest" : {
      "type" : "object",
      "required" : [ "betId", "playerId", "result", "sessionToken", "transaction" ],
      "properties" : {
        "playerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The player id"
        },
        "betId" : {
          "type" : "string",
          "description" : "Bet identification number for amendment"
        },
        "result" : {
          "type" : "string",
          "description" : "Status of the amendment. For cancellation always equal to \"VOID\""
        },
        "reason" : {
          "type" : "string",
          "description" : "Description of the reason this BetId is amended"
        },
        "payout" : {
          "type" : "string",
          "description" : "Winning amount to pay during manual settlement"
        },
        "transaction" : {
          "description" : "The transaction request",
          "$ref" : "#/definitions/Transaction"
        },
        "sessionToken" : {
          "type" : "string",
          "description" : "The session token"
        }
      },
      "description" : "The amend request used to amend a bet"
    },
    "BetExtended" : {
      "type" : "object",
      "required" : [ "selections", "stake", "system" ],
      "properties" : {
        "selections" : {
          "type" : "array",
          "description" : "The bet selections",
          "items" : {
            "$ref" : "#/definitions/Selection"
          }
        },
        "stake" : {
          "description" : "The stake amount",
          "$ref" : "#/definitions/Stake"
        },
        "system" : {
          "description" : "The selected bet system. Click <a target='_blank' href='/swagger/examples/system-combinations.xlsx'>here</a> to download the full system types table",
          "$ref" : "#/definitions/System"
        },
        "winType" : {
          "type" : "string",
          "description" : "Win bet data type:WIN, PLACE, EACH_WAY"
        },
        "transactionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The transaction id"
        },
        "checkOdds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check type of the additional odds data. The system will reject a coupons when: 1. a selected forecast has lower current Odds or different current Handicap / UO value than these the player has seen  2. a selected forecast has different current Odds / Handicap / UO value than these the player has seen 3. a selected forecast has different Handicap / UO value than these the player has seen"
        },
        "totalStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total selection stake"
        },
        "potentialPayout" : {
          "type" : "number",
          "format" : "double",
          "description" : "The potential payout"
        },
        "totalOdds" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total odds of the specific bet part"
        },
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The bet id"
        },
        "betNo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The bet number"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the part bet(e.g. ACCEPTED, REJECTED, VOID)"
        },
        "rejectionReason" : {
          "type" : "string",
          "description" : "The reason why a bet has been rejected"
        },
        "liveBet" : {
          "type" : "boolean",
          "description" : "Live bet indicator"
        },
        "cashOut" : {
          "type" : "boolean",
          "description" : "In case this bet can be cashed out"
        },
        "totalPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total price of the bet"
        },
        "totalPriceAmerican" : {
          "type" : "number",
          "format" : "double",
          "description" : "The american total price of the bet"
        },
        "limitedStake" : {
          "type" : "number",
          "description" : "When bet limit or stake limit validation fails, this contains the maximum stake the user can enter, in their currency"
        },
        "betTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Bet accepted Epoch time in msecs"
        },
        "channelId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Channel ID that this bet part was played"
        },
        "accountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the freebet bonus"
        },
        "bonusWinnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "For bets in an ACCEPTED state, this will be the potential bonus winnings if the bet wins/For WINNING/SETTLED bets it will be the actual bonus winnings. Populated when a bet is eligible to a Column length bonus and was placed from a retailer"
        },
        "freeBet" : {
          "type" : "boolean",
          "description" : "Free Bet indicator"
        },
        "bonusStake" : {
          "description" : "Populated when a bet is a freebet. It is the amount of the freebet",
          "$ref" : "#/definitions/Stake"
        },
        "payout" : {
          "type" : "number",
          "description" : "Settled winning amount"
        },
        "displayStatus" : {
          "type" : "string",
          "description" : "Status of the part bet"
        },
        "overAskId" : {
          "type" : "string",
          "description" : "Over/Ask identification number"
        },
        "autoCashout" : {
          "description" : "AutocashoutOptions",
          "$ref" : "#/definitions/AutoCashoutOptions"
        },
        "referralPath" : {
          "type" : "string",
          "description" : "Canvas might have this field as \"registration source\""
        },
        "potentialBonusWinnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated when a bet is eligible to a Column length bonus and indicates the amount awarded"
        },
        "totalDiscountStake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated in the bet placement response when the punter is awarded with a discount bonus and indicates the discount amount awarded"
        },
        "bonusCodeAwarded" : {
          "type" : "string",
          "description" : "The bonus code awarded"
        },
        "voucherCode" : {
          "type" : "string",
          "description" : "The bonus code to apply on the bet"
        },
        "extBetId" : {
          "type" : "string",
          "description" : "External Bet ID"
        },
        "parentBetId" : {
          "type" : "string",
          "description" : "The parent bet id. This should exist after an Edit or Partially cashout bet"
        },
        "childBetId" : {
          "type" : "string",
          "description" : "The child bet id. This should exist after an Edit or Partially cashout bet"
        },
        "totalCost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Bet's total cost that the player have pay"
        },
        "originalCashoutBetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If this bet is a child bet from partial cashout, this betId is its parent"
        },
        "partialCashoutBetIds" : {
          "type" : "array",
          "description" : "If this bet is a parent of partial cashout those betIds are their children",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "taxOnReturnsPcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation percentage on returns amount (on winnings amount)"
        },
        "taxOnReturnsAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation on returns amount (on winnings amount)"
        },
        "freeBetBonusAmount" : {
          "description" : "Populated when a player is awarded with a freebet and is used to store the amount of the freebet",
          "$ref" : "#/definitions/FreeBetBonus"
        },
        "discountBonusAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Populated when a player is awarded with a discount and is used to store the discount amount"
        },
        "refund" : {
          "type" : "number",
          "format" : "double",
          "description" : "Refund amount"
        },
        "promoDescription" : {
          "type" : "string",
          "description" : "Description of the promotion used"
        },
        "bonusCodeRulesOfUse" : {
          "type" : "string",
          "description" : "Description of the rules of the bonus code"
        },
        "voucherCodeUsed" : {
          "type" : "string",
          "description" : "The voucher code used"
        },
        "discountBonusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The voucher code id"
        },
        "retailerId" : {
          "type" : "string",
          "description" : "retailerId"
        },
        "paidByRetailer" : {
          "type" : "string",
          "description" : "paidByRetailer"
        },
        "paidTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When the bet was paid"
        },
        "buildABet" : {
          "type" : "boolean",
          "description" : "Indicates that bet is created by bet builder."
        },
        "cashoutResult" : {
          "description" : "Cashout amounts",
          "$ref" : "#/definitions/CashoutResult"
        },
        "parlayBet" : {
          "type" : "boolean",
          "description" : "Indicates whether the coupon is placed as parlay"
        },
        "parlayCardId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identification number of parlay card. Possible values are: 0, 1, 2, 3, 4"
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Player's internal account identification number"
        },
        "extAccountId" : {
          "type" : "string",
          "description" : "Player's external account identification number"
        },
        "accountPath" : {
          "type" : "string",
          "description" : "Player's account path"
        },
        "clickThruSource" : {
          "type" : "string",
          "description" : "Identifies a third party site when the bet selection was chosen"
        },
        "extBetVersion" : {
          "type" : "string",
          "description" : "External betting version"
        },
        "capturedStake" : {
          "description" : "Captured stake",
          "$ref" : "#/definitions/Stake"
        },
        "oddsType" : {
          "type" : "string",
          "description" : "Odds type",
          "enum" : [ "DECIMAL", "FRACTIONAL", "MONEY_LINE" ]
        },
        "taxOnStakePcnt" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation percentage on stake amount"
        },
        "taxOnStakeAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation on stake amount"
        },
        "voidDetails" : {
          "type" : "string",
          "description" : "Void detailed desription"
        },
        "settlementType" : {
          "type" : "string",
          "description" : "It is sent only in case of closed bets (not for open bets)",
          "enum" : [ "CASH_OUT", "RESULTING" ]
        },
        "enhancements" : {
          "type" : "array",
          "description" : "Bet enhancements",
          "items" : {
            "$ref" : "#/definitions/Enhancements"
          }
        },
        "childBetSummaries" : {
          "type" : "array",
          "description" : "Summaries for child bets",
          "items" : {
            "$ref" : "#/definitions/ChildBetSummary"
          }
        },
        "productId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Product identification number"
        },
        "betRiskGroup" : {
          "type" : "string",
          "description" : "Bet risk group:SYSTEM_BET,PRE_MATCH_MULTIPLE,PRE_MATCH_SINGLE"
        },
        "masterBetId" : {
          "type" : "string",
          "description" : "Master Bet ID (has value if it is a combination of a specific BetId)"
        },
        "betSlipId" : {
          "type" : "string",
          "description" : "Betslip identification number that the system gives to the specific bet"
        },
        "betStatus" : {
          "type" : "string",
          "description" : "Status of the part bet",
          "enum" : [ "ACCEPTED", "REJECTED", "VOID", "SETTLED" ]
        },
        "resulted" : {
          "type" : "boolean",
          "description" : "Is selection resulted"
        },
        "winnings" : {
          "type" : "number",
          "format" : "float",
          "description" : "The amount was paid less or more than the play bet amount"
        },
        "regulatorTicket" : {
          "type" : "string",
          "description" : "Regulator ticket number"
        },
        "site" : {
          "type" : "string",
          "description" : "Site definition"
        },
        "parts" : {
          "description" : "Bet parts",
          "$ref" : "#/definitions/Parts"
        },
        "currentlyInplay" : {
          "type" : "boolean"
        }
      },
      "description" : "Contains extra information on a Bet"
    },
    "BetPart" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The bet part id"
        },
        "sport" : {
          "description" : "Sport object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "competitionParent" : {
          "description" : "Parent competition object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "competition" : {
          "description" : "Competition's description (e.g. International - International Friendly Games",
          "$ref" : "#/definitions/EntitySummary"
        },
        "event" : {
          "description" : "The event object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "outright" : {
          "type" : "boolean",
          "description" : "Outright market indicator"
        },
        "market" : {
          "description" : "The market object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "placeTerms" : {
          "description" : "The placeTerms",
          "$ref" : "#/definitions/PlaceTerms"
        },
        "r4DeductionPct" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rule4 deduction percentage (%)"
        },
        "selection" : {
          "description" : "The selection object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "winSelections" : {
          "type" : "array",
          "description" : "The selections that won",
          "items" : {
            "$ref" : "#/definitions/EntitySummary"
          }
        },
        "firstPastThePostResultType" : {
          "type" : "string",
          "description" : "First past of the post result type"
        },
        "selectionType" : {
          "type" : "string",
          "description" : "Description of the selection result: H -> Home team selection, A -> Away team selection, D -> Draw, U -> Under,O -> Over"
        },
        "regulatorEventId" : {
          "type" : "string",
          "description" : "Regulator event ID"
        },
        "type" : {
          "type" : "string",
          "description" : "Bet part type"
        },
        "settlementTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Settlement Epoch time in msecs"
        },
        "settlementExchangeRate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Settlement's echange rate value"
        },
        "competitorA" : {
          "description" : "CompetitorA object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "competitorB" : {
          "description" : "CompetitorB object",
          "$ref" : "#/definitions/EntitySummary"
        },
        "extSelectionId" : {
          "type" : "string",
          "description" : "External selection ID"
        },
        "eventResult" : {
          "description" : "The event result",
          "$ref" : "#/definitions/EventResult"
        },
        "stake" : {
          "type" : "number",
          "format" : "double",
          "description" : "Part's stake"
        },
        "spOdds" : {
          "description" : "Selection special Odds",
          "$ref" : "#/definitions/OddData"
        },
        "overridenSettledOdds" : {
          "description" : "Selection's dominant Odds",
          "$ref" : "#/definitions/OddData"
        },
        "winnings" : {
          "type" : "number",
          "format" : "float",
          "description" : "The amount was paid less or more than the play bet amount"
        },
        "bog" : {
          "type" : "boolean",
          "description" : "Best Odds Guaranteed indictor"
        },
        "bogEnhanced" : {
          "type" : "boolean",
          "description" : "Bog enhanced indicator"
        },
        "multiwayIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Multiway index"
        },
        "eventEndTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Event's Epoch end time in msecs"
        },
        "winType" : {
          "type" : "string",
          "description" : "Win bet data type"
        },
        "eventIsInplay" : {
          "type" : "boolean",
          "description" : "Inplay indicator"
        }
      },
      "description" : "Contains extra information on selection"
    },
    "ChildBetSummary" : {
      "type" : "object",
      "properties" : {
        "selectionIds" : {
          "type" : "array",
          "description" : "Selection identification number in a specific BetId",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "displayStatus" : {
          "type" : "string",
          "description" : "Combination display status of the specific BetId",
          "enum" : [ "OPEN", "CASHED", "LOSE", "WIN", "CLOSED" ]
        },
        "totalPrice" : {
          "type" : "number",
          "description" : "Combination's total price/odds"
        },
        "payout" : {
          "type" : "number",
          "format" : "float",
          "description" : "This amount is non-zero when the displayStatus has on of the below values: CASHED,WIN"
        }
      },
      "description" : "Summary for Child Bet"
    },
    "Enhancements" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Enhancement type description"
        },
        "attributes" : {
          "type" : "array",
          "description" : "Enhancement attributes",
          "items" : {
            "$ref" : "#/definitions/Attribute"
          }
        }
      }
    },
    "EventResult" : {
      "type" : "object",
      "required" : [ "reason" ],
      "properties" : {
        "startTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Event start time"
        },
        "finishTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Event finish time"
        },
        "event" : {
          "type" : "string",
          "description" : "Event name"
        },
        "competition" : {
          "type" : "string",
          "description" : "Competition name"
        },
        "category" : {
          "type" : "string",
          "description" : "Category"
        },
        "sport" : {
          "type" : "string",
          "description" : "Sport"
        },
        "score" : {
          "type" : "string",
          "description" : "Event score"
        },
        "halfTimeScore" : {
          "type" : "string",
          "description" : "Event half-time score"
        },
        "outright" : {
          "type" : "boolean",
          "description" : "Is outright"
        },
        "abandoned" : {
          "type" : "boolean",
          "description" : "Is abandoned"
        },
        "reason" : {
          "type" : "string",
          "description" : "Result reason"
        }
      },
      "description" : "Info for event result"
    },
    "Parts" : {
      "type" : "object",
      "properties" : {
        "betPart" : {
          "type" : "array",
          "description" : "Contains extra information on selections",
          "items" : {
            "$ref" : "#/definitions/BetPart"
          }
        },
        "rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Rate (always equal to 0.0 in the current version)"
        },
        "internalWinning" : {
          "type" : "number",
          "format" : "double",
          "description" : "Internal winning number (always equal to 0.0 in the current version)"
        }
      }
    },
    "PlaceTerms" : {
      "type" : "object",
      "properties" : {
        "numPlaces" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of places"
        },
        "placedFraction" : {
          "type" : "string",
          "description" : "Placed fraction"
        }
      },
      "description" : "PlaceTerms for a market"
    },
    "PayBet object" : {
      "type" : "object",
      "required" : [ "betPaymentResult", "failureReason", "wagerPlacedTime", "wagerSettledTime" ],
      "properties" : {
        "betId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "betId"
        },
        "betPaymentResult" : {
          "type" : "string",
          "description" : "betPaymentResult",
          "enum" : [ "WIN", "NO_WIN", "FAILURE" ]
        },
        "failureReason" : {
          "type" : "string",
          "description" : "failureReason",
          "enum" : [ "EXPIRED", "ALREADY_PAID_BY_SAME_RETAILER", "ALREADY_PAID_BY_OTHER_RETAIL", "ALREADY_CASHED_OUT_BY_SAME_RETAILER", "ALREADY_CASHED_OUT_BY_OTHER_RETAILER", "ALREADY_PAID_IN_BACKOFFICE", "ALREADY_CANCELLED", "ALREADY_VOIDED_BY_SAME_RETAILER", "ALREADY_VOIDED_BY_OTHER_RETAILER", "ALREADY_BLOCKED", "NOT_RESULTED", "HIGH_WIN_NOT_PAYABLE_YET", "PAYMENT_LIMIT_EXCEEDED", "PENDING_AUTHORISATION", "ALREADY_CLAIMED_BY_SAME_RETAILER", "ALREADY_CLAIMED_BY_OTHER_RETAIL" ]
        },
        "bonusAmount" : {
          "type" : "number",
          "description" : "bonusAmount"
        },
        "grossAmount" : {
          "type" : "number",
          "description" : "grossAmount"
        },
        "netAmount" : {
          "type" : "number",
          "description" : "netAmount"
        },
        "refundAmount" : {
          "type" : "number",
          "description" : "refundAmount"
        },
        "stakeAmount" : {
          "type" : "number",
          "description" : "stakeAmount"
        },
        "wagerPlacedTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the Wager was placed"
        },
        "wagerSettledTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the Wager was settled"
        },
        "wagerPaidTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the Wager was paid"
        },
        "taxOnReturnsAmount" : {
          "type" : "number",
          "description" : "Tax amount"
        },
        "refundTaxOnReturnsAmount" : {
          "type" : "number",
          "description" : "Refund tax amount"
        }
      },
      "description" : "The PayBet domain object used to describe a bet that was paid to punter"
    },
    "PaySuccessResponse" : {
      "type" : "object",
      "required" : [ "bets", "betslipId", "paymentOutcome" ],
      "properties" : {
        "betslipId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "betslipId"
        },
        "bets" : {
          "type" : "array",
          "description" : "bets",
          "items" : {
            "$ref" : "#/definitions/PayBet object"
          }
        },
        "paymentFailureReason" : {
          "type" : "string",
          "description" : "paymentFailureReason",
          "enum" : [ "NO_WIN", "HIGH_WIN_NOT_PAYABLE_YET", "PAYMENT_LIMIT_EXCEEDED", "UNKNOWN_BETSLIP", "EXTERNAL_WALLET_ERROR", "WRONG_ISECURE" ]
        },
        "paymentOutcome" : {
          "type" : "string",
          "description" : "paymentOutcome",
          "enum" : [ "SUCCESS", "FAILURE" ]
        },
        "sumOfBonusAmount" : {
          "type" : "number",
          "description" : "sumOfBonusAmount"
        },
        "sumOfGrossAmount" : {
          "type" : "number",
          "description" : "sumOfGrossAmount"
        },
        "sumOfNetAmount" : {
          "type" : "number",
          "description" : "sumOfNetAmount"
        },
        "sumOfRefundAmount" : {
          "type" : "number",
          "description" : "sumOfRefundAmount"
        },
        "sumOfStakeAmount" : {
          "type" : "number",
          "description" : "sumOfStakeAmount"
        },
        "sumOfTaxOnReturnsAmount" : {
          "type" : "number",
          "description" : "sumOfTaxOnReturnsAmount"
        },
        "placedTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "placedTime"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "transactionTime"
        }
      }
    },
    "TerminalPayRequestL10" : {
      "type" : "object",
      "required" : [ "barcodeReadMethod" ],
      "properties" : {
        "barcodeReadMethod" : {
          "type" : "string",
          "description" : "barcodeReadMethod",
          "enum" : [ "READ", "TYPED_IN" ]
        },
        "betSlipID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "betSlipID"
        },
        "externalRetailerId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "externalRetailerId"
        },
        "payLevel" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "payLevel"
        },
        "terminalId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "terminalId"
        },
        "isecure" : {
          "type" : "array",
          "description" : "isecure first list should have only one list. second list should contain 8 longs",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "BetCancellationOutcome" : {
      "type" : "object",
      "required" : [ "betStatus", "cancellationOutcome", "failureReason" ],
      "properties" : {
        "betID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "betID"
        },
        "betStatus" : {
          "type" : "string",
          "description" : "betStatus",
          "enum" : [ "OPEN", "WIN", "LOSE", "PAID", "CANCELLED", "CLOSED", "PENDING", "PENDING_CASHOUT", "CASHED", "RESULTING", "REJECTED", "EXPIRED" ]
        },
        "cancellationOutcome" : {
          "type" : "string",
          "description" : "cancellationOutcome",
          "enum" : [ "SUCCESS", "FAILURE" ]
        },
        "failureReason" : {
          "type" : "string",
          "description" : "failureReason",
          "enum" : [ "ALREADY_CANCELLED", "CANCEL_NOT_ALLOWED", "BET_CANCELATION_EXPIRED", "OVERASK_PENDING" ]
        },
        "stakeAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "stakeAmount"
        },
        "discountAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "discountAmount"
        }
      }
    },
    "TerminalCancelResponse" : {
      "type" : "object",
      "required" : [ "bets" ],
      "properties" : {
        "betSlipID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "betSlipID"
        },
        "bets" : {
          "type" : "array",
          "description" : "BetCancellationOutcome",
          "items" : {
            "$ref" : "#/definitions/BetCancellationOutcome"
          }
        },
        "cancellationOutcome" : {
          "type" : "string",
          "description" : "cancellationOutcome",
          "enum" : [ "SUCCESS", "FAILURE" ]
        },
        "failureReason" : {
          "type" : "string",
          "description" : "failureReason",
          "enum" : [ "SAME_RETAILER_AS_PLAY_REQUIRED", "PROMOTION_MUST_BE_CANCELLED_FIRST", "UNKNOWN_BETSLIP", "CONFIRMATION_REQUIRED", "BETSLIP_CANCELATION_EXPIRED" ]
        },
        "totalCancelAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "totalCancelAmount"
        },
        "totalDiscountAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "totalDiscountAmount"
        },
        "placedTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "placedTime"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "transactionTime"
        }
      }
    },
    "TerminalCancelRequest" : {
      "type" : "object",
      "required" : [ "barcodeReadMethod", "externalRetailerID", "locale", "terminalID" ],
      "properties" : {
        "barcodeReadMethod" : {
          "type" : "string",
          "description" : "barcodeReadMethod",
          "enum" : [ "READ", "TYPED_IN" ]
        },
        "locale" : {
          "type" : "string",
          "description" : "locale"
        },
        "externalRetailerID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "externalRetailerID"
        },
        "terminalID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "terminalID"
        }
      }
    },
    "OpenBetRequest" : {
      "type" : "object",
      "required" : [ "channelId", "sessionToken" ],
      "properties" : {
        "excludeChildBets" : {
          "type" : "boolean",
          "description" : "Whether to include the child bets on the response"
        },
        "channelId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The related channel"
        },
        "locale" : {
          "type" : "string",
          "description" : "The response description language (e.g. en-gbbob-x-gbbob)"
        },
        "sessionToken" : {
          "type" : "string",
          "description" : "The session token"
        }
      },
      "description" : "The request object needed to request the player's open bets"
    },
    "EditAutoCashoutRequest" : {
      "type" : "object",
      "properties" : {
        "stopWin" : {
          "type" : "number",
          "description" : "This will be a Value that is Greater than the stake of the bet"
        },
        "stopLoss" : {
          "type" : "number",
          "description" : "This will be a value less than the stake of the bet"
        },
        "ascOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Greater than the odds of the bet "
        },
        "descOdds" : {
          "type" : "number",
          "description" : "This will be Odds that are Less than the odds of the bet"
        }
      }
    },
    "FindSuccessResponseDTO" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The bet status"
        },
        "winnings" : {
          "type" : "number",
          "format" : "double",
          "description" : "The winnings amount"
        }
      },
      "description" : "The response object after finding the coupon winnings"
    },
    "RollbackRetailResponse" : {
      "type" : "object",
      "required" : [ "rollbackFailureReason", "rollbackResult" ],
      "properties" : {
        "rollbackResult" : {
          "type" : "string",
          "description" : "rollbackResult",
          "enum" : [ "SUCCESS", "FAILURE" ]
        },
        "rollbackFailureReason" : {
          "type" : "string",
          "description" : "rollbackFailureReason",
          "enum" : [ "NOT_CORRECT_STATUS_FOR_ROLLBACK", "UNKNOWN_BETSLIP" ]
        },
        "placedTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "placedTime"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "transactionTime"
        }
      }
    },
    "UndoRequest" : {
      "type" : "object",
      "required" : [ "betPlacementTime", "channel", "extBetslipId" ],
      "properties" : {
        "extBetslipId" : {
          "type" : "string",
          "description" : "Bet identification number for undo"
        },
        "betPlacementTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time the bet was placed in milliseconds. Doesn't need to match exactly the time, we query between 1 hour before and after."
        },
        "channel" : {
          "type" : "string",
          "description" : "The channel code or id that was use in the bet placement"
        },
        "sessionToken" : {
          "type" : "string",
          "description" : "The authorization token of the user that was provided upon authentication"
        },
        "overAskBetSlipId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The betslip over ask id"
        }
      },
      "description" : "The undo request used to undo a bet"
    },
    "TaxationClaims" : {
      "type" : "object",
      "properties" : {
        "federalTax" : {
          "type" : "number",
          "description" : "Federal tax amount"
        },
        "districtTax" : {
          "type" : "number",
          "description" : "District tax amount"
        },
        "finesAmount" : {
          "type" : "number",
          "description" : "Fines amount"
        },
        "childSupportAmount" : {
          "type" : "number",
          "description" : "Child support amount"
        }
      }
    },
    "PAMResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The response status"
        },
        "statusMessage" : {
          "type" : "string",
          "description" : "The status message"
        },
        "createdOn" : {
          "type" : "string",
          "description" : "The date the PAMResponse was created on"
        },
        "faultId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The fault id"
        },
        "syncResponse" : {
          "type" : "boolean",
          "description" : "The flag that indicates if the response is synchronous or asynchronous"
        },
        "data" : {
          "type" : "array",
          "description" : "The data",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "The PAM response object"
    },
    "PlayerLoginResponse" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "accountId"
        },
        "lastLoginDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "lastLoginDate"
        },
        "playerRegistrationSts" : {
          "type" : "string",
          "description" : "playerRegistrationSts"
        },
        "sessionToken" : {
          "type" : "string",
          "description" : "sessionToken"
        },
        "cardStatus" : {
          "type" : "string",
          "description" : "the card status"
        },
        "cardExpirationDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "the card expiration date(epoch)"
        }
      }
    },
    "PunterLoginRequestDTO" : {
      "type" : "object",
      "required" : [ "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "username"
        },
        "password" : {
          "type" : "string",
          "description" : "password"
        }
      }
    },
    "PlayerRegisterResponse" : {
      "type" : "object",
      "properties" : {
        "clientID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The clientID"
        }
      }
    },
    "AddressBook" : {
      "type" : "object",
      "properties" : {
        "city" : {
          "type" : "string",
          "description" : "The city of the player"
        },
        "countryISO" : {
          "type" : "string",
          "description" : "The country ISO"
        },
        "postCode" : {
          "type" : "string",
          "description" : "The post code of the player"
        },
        "stateId" : {
          "type" : "string",
          "description" : "The state id of the player"
        },
        "streetName" : {
          "type" : "string",
          "description" : "The street name of the player"
        },
        "streetNumber" : {
          "type" : "string",
          "description" : "The street number of the player"
        }
      },
      "description" : "The details of an address"
    },
    "CommunicationPreferences" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The preference id"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Indicates whether the preference is enabled"
        },
        "name" : {
          "type" : "string",
          "description" : "The preference name"
        }
      }
    },
    "KYCDataRegisterRequest" : {
      "type" : "object",
      "properties" : {
        "documentNumber" : {
          "type" : "string",
          "description" : "The document number"
        },
        "resultCodeOfAge" : {
          "type" : "string",
          "description" : "The result code of age validation performed from Ideology third party"
        },
        "data" : {
          "type" : "string",
          "description" : "The data ( in json string format) "
        },
        "notes" : {
          "type" : "string",
          "description" : "The notes ( in json string format) "
        },
        "resultMessage" : {
          "type" : "string",
          "description" : "The result message"
        },
        "attributes" : {
          "description" : "The additional attributes",
          "$ref" : "#/definitions/PunterKycProviderDetailAttributesDTO"
        }
      },
      "description" : "The request data of the KYC document"
    },
    "Player" : {
      "type" : "object",
      "required" : [ "emailAddress", "username" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "description" : "The title of the player"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "The email address of the player"
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "The phone numbers of the player",
          "items" : {
            "$ref" : "#/definitions/PlayerPhoneNumbers"
          }
        },
        "firstName" : {
          "type" : "string",
          "description" : "The first name of the player"
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of the player"
        },
        "gender" : {
          "type" : "string",
          "description" : "The gender of the player"
        },
        "addressBooks" : {
          "type" : "array",
          "description" : "The address details of a player",
          "items" : {
            "$ref" : "#/definitions/AddressBook"
          }
        },
        "currencyISO" : {
          "type" : "string",
          "description" : "The currencyISO"
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "The birth date of the player(yyyy-MM-dd"
        },
        "password" : {
          "type" : "string",
          "description" : "The password"
        },
        "username" : {
          "type" : "string",
          "description" : "The username of the player"
        },
        "passwordDetails" : {
          "description" : "The password details of a player",
          "$ref" : "#/definitions/PlayerPassword"
        },
        "governmentIssuedId" : {
          "type" : "string",
          "description" : "The id of the government issued"
        },
        "kycDataRegisterRequests" : {
          "type" : "array",
          "description" : "The request data of the KYC document",
          "items" : {
            "$ref" : "#/definitions/KYCDataRegisterRequest"
          }
        },
        "playerTerms" : {
          "description" : "The checks that they player performs during registration",
          "$ref" : "#/definitions/PlayerTerms"
        }
      },
      "description" : "The details that a player needs in order to register or update his account"
    },
    "PlayerPassword" : {
      "type" : "object",
      "properties" : {
        "secretAnswer" : {
          "type" : "string",
          "description" : "The first secret answer"
        },
        "secretAnswer2" : {
          "type" : "string",
          "description" : "The second secret answer"
        },
        "secretQuestionID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of secret question"
        },
        "secretQuestion2ID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of secret question 2"
        }
      },
      "description" : "The password details of a player"
    },
    "PlayerPhoneNumbers" : {
      "type" : "object",
      "required" : [ "phoneNumber", "phoneNumberType" ],
      "properties" : {
        "phoneNumber" : {
          "type" : "string",
          "description" : "The phone number"
        },
        "phoneNumberType" : {
          "type" : "string",
          "description" : "The type of the phone number",
          "enum" : [ "PRIMARY_MOBILE", "SECONDARY_MOBILE", "PRIMARY_LAND_LINE", "SECONDARY_LAND_LINE" ]
        }
      },
      "description" : "The numbers of a player"
    },
    "PlayerTerms" : {
      "type" : "object",
      "properties" : {
        "acceptTermsAndConditions" : {
          "type" : "boolean",
          "description" : "Check whether the player has read all terms and conditions"
        },
        "acceptAdult" : {
          "type" : "boolean",
          "description" : "Check whether the player is over 18years old or an adult"
        },
        "acceptPromotions" : {
          "type" : "boolean",
          "description" : "Check whether the player wishes to receives promotions"
        },
        "communicationPreferences" : {
          "type" : "array",
          "description" : "The communication preferences",
          "items" : {
            "$ref" : "#/definitions/CommunicationPreferences"
          }
        }
      },
      "description" : "The player's terms checks object"
    },
    "PunterKycProviderDetailAttributesDTO" : {
      "type" : "object",
      "properties" : {
        "expiredLink" : {
          "type" : "boolean",
          "description" : "Is expired link"
        }
      },
      "description" : "The IDology - extra attributes"
    },
    "PlayerProfileShort" : {
      "type" : "object",
      "properties" : {
        "clientID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The client id of the user"
        },
        "currencyISO" : {
          "type" : "string",
          "description" : "The currencyISO of the user"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "The email address of the user"
        },
        "firstName" : {
          "type" : "string",
          "description" : "The first name of the user"
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of the user"
        },
        "userName" : {
          "type" : "string",
          "description" : "The username of the user"
        },
        "gender" : {
          "type" : "string",
          "description" : "The gender of the player"
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "The date of birth"
        },
        "playerAccountStatus" : {
          "type" : "string",
          "description" : "The status of the account"
        },
        "title" : {
          "type" : "string",
          "description" : "Title"
        },
        "kycChecked" : {
          "type" : "boolean",
          "description" : "Check if the KYC is checked"
        },
        "kycPending" : {
          "type" : "boolean",
          "description" : "Check if the KYC check is pending"
        },
        "daysLeftForKYC" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Check if the KYC is checked"
        },
        "playerRestrictions" : {
          "type" : "array",
          "description" : "Player restriction object",
          "items" : {
            "$ref" : "#/definitions/RestrictionPlayerData"
          }
        },
        "activeAccount" : {
          "type" : "boolean",
          "description" : "Player active status"
        },
        "requiresPasswordChange" : {
          "type" : "boolean",
          "description" : "Check if password change required"
        }
      },
      "description" : "The short version profile of a player"
    },
    "RestrictionPlayerData" : {
      "type" : "object",
      "properties" : {
        "indefinitely" : {
          "type" : "boolean",
          "description" : "Check if it is indefinitely"
        },
        "coolOff" : {
          "type" : "boolean",
          "description" : "Check if player will be auto unblocked after his restriction will be over"
        },
        "playerRestrictionType" : {
          "type" : "string",
          "description" : "The type of a restriction"
        },
        "reason" : {
          "type" : "string",
          "description" : "The reason that a player has a restriction"
        },
        "requestDate" : {
          "type" : "string",
          "description" : "The requested date"
        },
        "restrictFromDate" : {
          "type" : "string",
          "description" : "The date that the restriction starts"
        },
        "restrictNumMinutes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of the minutes of the restriction"
        },
        "restrictUntilDate" : {
          "type" : "string",
          "description" : "The date that the restriction ends"
        },
        "licenseType" : {
          "type" : "string",
          "description" : "Licence type"
        }
      },
      "description" : "The data for a player's restriction"
    },
    "PlayerValidationRequest" : {
      "type" : "object",
      "properties" : {
        "emailAddress" : {
          "type" : "string",
          "description" : "The email address of the player"
        },
        "username" : {
          "type" : "string",
          "description" : "The birth date of the player"
        }
      },
      "description" : "The player validation request information"
    },
    "RegistrationField" : {
      "type" : "object",
      "properties" : {
        "errorType" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "RegistrationValidationResultResponse" : {
      "type" : "object",
      "properties" : {
        "errorFields" : {
          "type" : "array",
          "description" : "List of error fields",
          "items" : {
            "$ref" : "#/definitions/RegistrationField"
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "List of overridden fields",
          "items" : {
            "$ref" : "#/definitions/RegistrationField"
          }
        },
        "warningFields" : {
          "type" : "array",
          "description" : "List of warning fields",
          "items" : {
            "$ref" : "#/definitions/RegistrationField"
          }
        },
        "valid" : {
          "type" : "boolean",
          "description" : "Are all fields valid"
        }
      },
      "description" : "The fields validation response "
    },
    "RegistrationFieldDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Field name"
        },
        "value" : {
          "type" : "string",
          "description" : "Field value"
        }
      },
      "description" : "The field to validate"
    },
    "RegistrationFieldsRequest" : {
      "type" : "object",
      "properties" : {
        "fields" : {
          "type" : "array",
          "description" : "List of the fields",
          "items" : {
            "$ref" : "#/definitions/RegistrationFieldDTO"
          }
        }
      },
      "description" : "The registration fields to validate"
    },
    "KYCStatusChangeRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The player KYC checked status name",
          "enum" : [ "DOCUMENTS_PENDING", "DOCUMENTS_ACCEPTED", "DOCUMENTS_UPLOAD_FAILED", "DOCUMENTS_REJECTED" ]
        },
        "referenceNumber" : {
          "type" : "string",
          "description" : "The provider's request id - Idology"
        }
      },
      "description" : "The KYC Status change request information"
    },
    "PlayerFutureLimit" : {
      "type" : "object",
      "properties" : {
        "licenseType" : {
          "type" : "string",
          "description" : "The license type"
        },
        "period" : {
          "type" : "string",
          "description" : "The period"
        },
        "setAmount" : {
          "type" : "number",
          "description" : "The amount that has been set"
        },
        "timestampSet" : {
          "type" : "string",
          "description" : "The set timestamp"
        },
        "type" : {
          "type" : "string",
          "description" : "The type"
        },
        "confirmed" : {
          "type" : "boolean",
          "description" : "If limit is confirmed"
        }
      },
      "description" : "The future limits of a player"
    },
    "PlayerLimit" : {
      "type" : "object",
      "properties" : {
        "futureLimits" : {
          "type" : "array",
          "description" : "The future limits",
          "items" : {
            "$ref" : "#/definitions/PlayerFutureLimit"
          }
        },
        "licenseType" : {
          "type" : "string",
          "description" : "The license type"
        },
        "period" : {
          "type" : "string",
          "description" : "The period"
        },
        "setAmount" : {
          "type" : "number",
          "description" : "The amount that has been set"
        },
        "timestampSet" : {
          "type" : "string",
          "description" : "The set timestamp"
        },
        "type" : {
          "type" : "string",
          "description" : "The type"
        }
      },
      "description" : "The limits of a player"
    },
    "PunterKycProviderDetailsDTO" : {
      "type" : "object",
      "properties" : {
        "referenceNumber" : {
          "type" : "string",
          "description" : "The provider's request id - Idology"
        },
        "result" : {
          "type" : "string",
          "description" : "The result of the player's document check"
        },
        "resultMessage" : {
          "type" : "string",
          "description" : "The result message of the validation in plain text - Of Age/Under Age"
        },
        "notes" : {
          "type" : "string",
          "description" : "The notes included at the kyc details request (eg address not found)"
        },
        "data" : {
          "type" : "string",
          "description" : "The additional information"
        },
        "attributes" : {
          "description" : "The additional attributes",
          "$ref" : "#/definitions/PunterKycProviderDetailAttributesDTO"
        }
      },
      "description" : "The IDology - kyc provider information object"
    },
    "KYCStatusData" : {
      "type" : "object",
      "properties" : {
        "checked" : {
          "type" : "boolean",
          "description" : "Whether the account has been KYC checked"
        },
        "daysLeftForKYC" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Check if the KYC is checked"
        },
        "kycPending" : {
          "type" : "boolean",
          "description" : "Check if the KYC document upload is pending"
        }
      },
      "description" : "The data of the player's KYC Status"
    },
    "PlayerProfileFull" : {
      "type" : "object",
      "properties" : {
        "clientID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The client id of the user"
        },
        "currencyISO" : {
          "type" : "string",
          "description" : "The currencyISO of the user"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "The email address of the user"
        },
        "firstName" : {
          "type" : "string",
          "description" : "The first name of the user"
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of the user"
        },
        "userName" : {
          "type" : "string",
          "description" : "The username of the user"
        },
        "gender" : {
          "type" : "string",
          "description" : "The gender of the player"
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "The date of birth"
        },
        "playerAccountStatus" : {
          "type" : "string",
          "description" : "The status of the account"
        },
        "title" : {
          "type" : "string",
          "description" : "Title"
        },
        "kycChecked" : {
          "type" : "boolean",
          "description" : "Check if the KYC is checked"
        },
        "kycPending" : {
          "type" : "boolean",
          "description" : "Check if the KYC check is pending"
        },
        "daysLeftForKYC" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Check if the KYC is checked"
        },
        "playerRestrictions" : {
          "type" : "array",
          "description" : "Player restriction object",
          "items" : {
            "$ref" : "#/definitions/RestrictionPlayerData"
          }
        },
        "activeAccount" : {
          "type" : "boolean",
          "description" : "Player active status"
        },
        "requiresPasswordChange" : {
          "type" : "boolean",
          "description" : "Check if password change required"
        },
        "governmentIssuedId" : {
          "type" : "string",
          "description" : "The city of the player"
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "List of phone numbers of a player",
          "items" : {
            "$ref" : "#/definitions/PlayerPhoneNumbers"
          }
        },
        "addressBooks" : {
          "type" : "array",
          "description" : "The address details of a player",
          "items" : {
            "$ref" : "#/definitions/AddressBook"
          }
        },
        "secretQuestion1ID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The id of the secret question"
        },
        "secretQuestion2ID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The id of the secret question"
        },
        "kycDataRegisterRequests" : {
          "type" : "array",
          "description" : "The request data of the KYC document",
          "items" : {
            "$ref" : "#/definitions/KYCDataRegisterRequest"
          }
        },
        "playerTerms" : {
          "description" : "The player registration check information",
          "$ref" : "#/definitions/PlayerTerms"
        }
      },
      "description" : "The full version profile of a player"
    },
    "PunterChangePasswordRequestDTO" : {
      "type" : "object",
      "required" : [ "newPassword", "oldPassword" ],
      "properties" : {
        "oldPassword" : {
          "type" : "string",
          "description" : "The oldPassword"
        },
        "newPassword" : {
          "type" : "string",
          "description" : "The newPassword"
        }
      },
      "description" : "Punter new and old password"
    },
    "SupportedTransactionTypesResponseDTO" : {
      "type" : "object",
      "properties" : {
        "supportedTransactions" : {
          "type" : "array",
          "description" : "The list of the supporter transaction types",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The system transaction types"
    },
    "RegistrationSystemData" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "type" : "array",
          "description" : "The list of states",
          "items" : {
            "$ref" : "#/definitions/State"
          }
        },
        "secretQuestions" : {
          "type" : "array",
          "description" : "The list of secret questions",
          "items" : {
            "$ref" : "#/definitions/SecretQuestion"
          }
        }
      },
      "description" : "All the register necessary system information"
    },
    "SecretQuestion" : {
      "type" : "object",
      "required" : [ "question" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The id of the secret question"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The secret question display order"
        },
        "question" : {
          "type" : "string",
          "description" : "The secret question"
        }
      },
      "description" : "The secret question object"
    },
    "State" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The state id"
        },
        "iso" : {
          "type" : "string",
          "description" : "The state iso code"
        },
        "name" : {
          "type" : "string",
          "description" : "The state name"
        }
      },
      "description" : "The details for the country's state"
    },
    "PaymentSettlementRequest" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "string",
          "description" : "The payment data in json format"
        }
      },
      "description" : "The player settlement request"
    },
    "PayoutResponse" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "description" : "The withdrawal amount"
        },
        "status" : {
          "type" : "string",
          "description" : "The status"
        },
        "errorDescription" : {
          "type" : "string",
          "description" : "The error description"
        },
        "url" : {
          "type" : "string",
          "description" : "The url"
        },
        "responseUrl" : {
          "type" : "string",
          "description" : "The response url"
        },
        "transReference" : {
          "type" : "string",
          "description" : "The transaction reference"
        }
      },
      "description" : "The withdrawal response  information"
    },
    "CheckoutRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The status eg. WITHDRAW_SUCCESS"
        },
        "gateway" : {
          "type" : "string",
          "description" : "The gateway eg. PAYSAFE"
        },
        "transRef" : {
          "type" : "string",
          "description" : "The transaction reference"
        },
        "result" : {
          "type" : "string",
          "description" : "The result"
        },
        "error" : {
          "type" : "string",
          "description" : "The transaction reference"
        }
      },
      "description" : "The process withdraw model"
    },
    "FundsWithdrawInitResponse" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "The url"
        },
        "merchantId" : {
          "type" : "string",
          "description" : "The merchantId"
        },
        "merchantRef" : {
          "type" : "string",
          "description" : "The merchantRef"
        },
        "merchantPublicKey" : {
          "type" : "string",
          "description" : "The merchantPublicKey"
        },
        "requestKey" : {
          "type" : "string",
          "description" : "The requestKey"
        },
        "digest" : {
          "type" : "string",
          "description" : "The digest"
        },
        "error" : {
          "type" : "string",
          "description" : "The error"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "The currencyCode"
        },
        "amount" : {
          "type" : "number",
          "description" : "The amount"
        },
        "productName" : {
          "type" : "string",
          "description" : "The productName"
        },
        "punterEmail" : {
          "type" : "string",
          "description" : "The punterEmail"
        },
        "punterId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The punterId"
        },
        "brands" : {
          "type" : "string",
          "description" : "The brands"
        },
        "responseUrl" : {
          "type" : "string",
          "description" : "The responseUrl"
        },
        "language" : {
          "type" : "string",
          "description" : "The language"
        },
        "formFields" : {
          "type" : "string",
          "description" : "The formFields"
        },
        "sandbox" : {
          "type" : "boolean",
          "description" : "The sandbox"
        },
        "formFieldsPrefill" : {
          "type" : "string",
          "description" : "The formFieldsPrefill"
        },
        "data" : {
          "type" : "object",
          "description" : "The list with deposit transactions",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      },
      "description" : "The withdrawal request information"
    },
    "WithdrawParams" : {
      "type" : "object",
      "properties" : {
        "fundType" : {
          "type" : "string",
          "description" : "The fund type"
        },
        "paymentOption" : {
          "type" : "string",
          "description" : "The payment option"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "The ip address"
        },
        "countryCode" : {
          "type" : "string",
          "description" : "The country code"
        },
        "externalRef" : {
          "type" : "string",
          "description" : "The external ref"
        },
        "amount" : {
          "type" : "number",
          "description" : "The amount"
        },
        "gateway" : {
          "type" : "string",
          "description" : "The gateway PAYPAL etc"
        },
        "brand" : {
          "type" : "string",
          "description" : "The brand name"
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The account id"
        }
      },
      "description" : "The initiate withdraw model"
    },
    "PlayerBalance" : {
      "type" : "object",
      "properties" : {
        "clientID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the client"
        },
        "currencyISO" : {
          "type" : "string",
          "description" : "The currency ISO"
        },
        "currentBalance" : {
          "type" : "number",
          "description" : "The current balance"
        },
        "maxAllowedWithdrawals" : {
          "type" : "number",
          "description" : "The max allowed withdrawls"
        },
        "nonWitdrawableFunds" : {
          "type" : "number",
          "description" : "The non withdrawable funds"
        }
      },
      "description" : "The balance of a player"
    },
    "TransactionDepositResponse" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "The url"
        },
        "merchantId" : {
          "type" : "string",
          "description" : "The merchantId"
        },
        "merchantRef" : {
          "type" : "string",
          "description" : "The merchantRef"
        },
        "merchantPublicKey" : {
          "type" : "string",
          "description" : "The merchantPublicKey"
        },
        "requestKey" : {
          "type" : "string",
          "description" : "The requestKey"
        },
        "digest" : {
          "type" : "string",
          "description" : "The digest"
        },
        "error" : {
          "type" : "string",
          "description" : "The error"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "The currencyCode"
        },
        "amount" : {
          "type" : "number",
          "description" : "The amount"
        },
        "productName" : {
          "type" : "string",
          "description" : "The productName"
        },
        "punterEmail" : {
          "type" : "string",
          "description" : "The punterEmail"
        },
        "punterId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The punterId"
        },
        "brands" : {
          "type" : "string",
          "description" : "The brands"
        },
        "responseUrl" : {
          "type" : "string",
          "description" : "The responseUrl"
        },
        "language" : {
          "type" : "string",
          "description" : "The language"
        },
        "formFields" : {
          "type" : "string",
          "description" : "The formFields"
        },
        "sandbox" : {
          "type" : "boolean",
          "description" : "The sandbox"
        },
        "formFieldsPrefill" : {
          "type" : "string",
          "description" : "The formFieldsPrefill"
        },
        "data" : {
          "type" : "object",
          "description" : "The list with deposit transactions",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      },
      "description" : "The deposit response object"
    },
    "Deposit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "brandId" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "transRef" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "linkedTransRef" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "externalRef" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "amount" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "currency" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "token" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "initiatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "completedAt" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "status" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "description" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "responseJson" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "paymentMethod" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "gateway" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "destFundTypeId" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "bonusCode" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "ipAddress" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "merchantChannel" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "merchantChannelEntityId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "txCountry" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "depositFee" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "amountStaked" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        },
        "gatewayCurrency" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "gatewayAmount" : {
          "type" : "number",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "PunterBalanceDetails" : {
      "type" : "object",
      "required" : [ "currency" ],
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "withdrawal" : {
          "type" : "number",
          "format" : "double"
        },
        "reserve" : {
          "type" : "number",
          "format" : "double"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "currency" : {
          "type" : "string"
        }
      }
    },
    "RequestMessage" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The status eg. DEPOSIT_SUCCESS"
        },
        "gateway" : {
          "type" : "string",
          "description" : "The gateway eg. PAYSAFE"
        },
        "transRef" : {
          "type" : "string",
          "description" : "The transaction reference"
        },
        "result" : {
          "type" : "string",
          "description" : "The result"
        },
        "error" : {
          "type" : "string",
          "description" : "The error"
        },
        "includeDeposit" : {
          "type" : "boolean",
          "description" : "Include deposit"
        }
      },
      "description" : "This type is an abstract object containing all core functionality that needs to be implemented from extending requests classes"
    },
    "PaymentOptionDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Payment option id"
        },
        "gateway" : {
          "type" : "string",
          "description" : "Payment option gateway"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Is active"
        },
        "paymentMethod" : {
          "type" : "string",
          "description" : "Payment method"
        },
        "deposits" : {
          "type" : "boolean",
          "description" : "Is deposits"
        },
        "withdrawals" : {
          "type" : "boolean",
          "description" : "Is withdrawals"
        },
        "activateDate" : {
          "type" : "string",
          "description" : "Activate date"
        },
        "lastUsed" : {
          "type" : "string",
          "description" : "Last used date"
        },
        "instrument" : {
          "type" : "string",
          "description" : "Instrument"
        },
        "stored" : {
          "type" : "boolean",
          "description" : "Is stored"
        }
      },
      "description" : "Payment options"
    },
    "PaymentOptionsResponseDTO" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The account id"
        },
        "maxDepositLimit" : {
          "type" : "number",
          "description" : "Tha maximum deposit limit"
        },
        "minDepositLimit" : {
          "type" : "number",
          "description" : "Tha minimum deposit limit"
        },
        "maxWithdrawalLimit" : {
          "type" : "number",
          "description" : "Tha maximum withdrawal limit"
        },
        "minWithdrawalLimit" : {
          "type" : "number",
          "description" : "Tha minimum withdrawal limit"
        },
        "paymentOptions" : {
          "type" : "array",
          "description" : "The payment options",
          "items" : {
            "$ref" : "#/definitions/PaymentOptionDTO"
          }
        }
      },
      "description" : "Payment options response"
    },
    "AccountTransaction" : {
      "type" : "object",
      "properties" : {
        "accountReference" : {
          "type" : "string",
          "description" : "The account reference"
        },
        "amount" : {
          "type" : "number",
          "description" : "The amount"
        },
        "amountAbsolute" : {
          "type" : "number",
          "description" : "The absolute amount"
        },
        "balanceRealAfter" : {
          "type" : "number",
          "description" : "The after real balance"
        },
        "balanceTransactionID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the balance transaction"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "The code of the currency"
        },
        "gatewayName" : {
          "type" : "string",
          "description" : "The name of the gateway"
        },
        "paymentTransactionID" : {
          "type" : "string",
          "description" : "The id of the payment transaction"
        },
        "platform" : {
          "type" : "string",
          "description" : "The platform"
        },
        "timestamp" : {
          "type" : "string",
          "description" : "The timestamp"
        },
        "transactionStatusName" : {
          "type" : "string",
          "description" : "The name of the transaction status"
        },
        "transactionStatusId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the transaction status"
        },
        "transactionTypeID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the transaction type"
        },
        "transactionTypeName" : {
          "type" : "string",
          "description" : "The name of transaction type"
        }
      },
      "description" : "The account transaction"
    },
    "AccountTransactionPageable" : {
      "type" : "object",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "description" : "The start date"
        },
        "endDate" : {
          "type" : "string",
          "description" : "The end date"
        },
        "pagination" : {
          "description" : "The pagination object",
          "$ref" : "#/definitions/Pagination"
        },
        "filterCriteria" : {
          "type" : "array",
          "description" : "The filter criteria",
          "items" : {
            "$ref" : "#/definitions/FilterCriteria"
          }
        },
        "orderCriteria" : {
          "type" : "array",
          "description" : "The order criteria",
          "items" : {
            "$ref" : "#/definitions/Order Criteria"
          }
        },
        "accountTransactions" : {
          "type" : "array",
          "description" : "The list of account transactions",
          "items" : {
            "$ref" : "#/definitions/AccountTransaction"
          }
        }
      },
      "description" : "The full account transaction object"
    },
    "FilterCriteria" : {
      "type" : "object",
      "properties" : {
        "filterCriteriaValues" : {
          "type" : "array",
          "description" : "The list with filter criteria values",
          "items" : {
            "$ref" : "#/definitions/FilterCriteriaValue"
          }
        }
      },
      "description" : "The filter criteria object"
    },
    "FilterCriteriaValue" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The value of filter criteria"
        }
      },
      "description" : "The values of criteria"
    },
    "Order Criteria" : {
      "type" : "object",
      "properties" : {
        "orderCriteriaName" : {
          "type" : "string",
          "description" : "The name of order criteria"
        },
        "condition" : {
          "type" : "string",
          "description" : "The criteria condition",
          "enum" : [ "INCLUDE", "EXCLUDE", "GREATER_THAN", "SMALLER_THAN", "GREATER_THAN_OR_EQUAL_TO", "SMALLER_THAN_OR_EQUAL_TO", "ASC", "DESC" ]
        }
      },
      "description" : "The order criteria"
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "itemsPerPage" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The items per page"
        },
        "pageNo" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The page number"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total pages"
        },
        "totalItems" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total items"
        }
      },
      "description" : "The pagination object"
    },
    "FilterOrderPagination" : {
      "type" : "object",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "description" : "The start date"
        },
        "endDate" : {
          "type" : "string",
          "description" : "The end date"
        },
        "pagination" : {
          "description" : "The pagination object",
          "$ref" : "#/definitions/Pagination"
        },
        "filterCriteria" : {
          "type" : "array",
          "description" : "The filter criteria",
          "items" : {
            "$ref" : "#/definitions/FilterCriteria"
          }
        },
        "orderCriteria" : {
          "type" : "array",
          "description" : "The order criteria",
          "items" : {
            "$ref" : "#/definitions/Order Criteria"
          }
        }
      },
      "description" : "The search info"
    }
  }
}