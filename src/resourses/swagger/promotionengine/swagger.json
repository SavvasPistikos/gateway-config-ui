{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "basePath": "/api/v1.0",
  "info":
  {
    "title": "L10 Promotion Engine API",
    "version": "1.0",
    "description": "The HTTP API served by Lotos10 Promotions Engine.\n\n# Errors\n\nThe API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:\n\n```\n{\n\n  \"code\": \"numeric code\",\n  \"message\": \"string\",\n  \"source\": \"string\",\n  \"type\": \"string\",\n  \"guid\": \"string\"\n}\n```\n\n# Application Error Codes\n\nThe following application errors are avaialble. In case of error\n\n````\n\n\nCode  Description               Http  Message\n\n96001 Invalid Input Exception    400  \"Invalid input: + {s}.\"\n\n96010 Xaction Id Exception       401  \"Transaction id error: + {s}.\"\n\n96009 Not Allowed Exception      403  \"Operation Not allowed: + {s}.\"\n\n96002 Not Found Exception        404  \"Entry not found: + {s}.\"\n\n96012 MandatoryInput Exception   405  \"{s} + parameter is mandatory.\"\n\n96000 Database Exception         500  \"Database error: + {s}.\"\n\n96005 Http Error Exception       500  \"Error in http class: + {s}.\"\n\n96006 Transaction Exception      500  \"Transaction error: + {s}.\"\n\n96007 Python Exception           500  \"Internal error in evaluator: + {s}.\"\n\n96008 Redis Exception            500  \"Redis error: + {s}.\"\n\n96011 Generic Exception          500  \"Software error: + {s}.\"\n\n96012 Encoding Exception         500  \"EncodingError: + {s}.\"\n"
  },
  "paths":
  {
    "/vouchers/promotion/{promoId}":
    {
      "post":
      {
        "description": "Create vouchers",
        "summary": "Create vouchers",
        "tags": [
          "vouchers"
        ],
        "operationId": "postCreateVouchers",
        "parameters": [
          {
            "name": "promoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint32"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to create voucher",
            "required": true,
            "schema":
            {
              "$ref": "#/definitions/CreateVouchers"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/messages/{promoId}":
    {
      "get":
      {
        "description": "messages for a specific promotion",
        "summary": "messages for a specific promotion",
        "tags": [
          "messages"
        ],
        "operationId": "getMessagesByPromoId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "promoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The id of the promotion to retrieve messages"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/Message"
              }
            }
          },
          "default":
          {
            "description": "unexpected error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/messages/{promoId}/message":
    {
      "get":
      {
        "description": "get a specific message by version and type",
        "summary": "get a specific message by version and type",
        "tags": [
          "messages"
        ],
        "operationId": "getMessageByPromoId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "promoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id of the promotion to retrieve messages"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "enum": [
              "promotionTitle",
              "messageTitle",
              "messageBody",
              "messageCDU",
              "messageTerminal"
            ],
            "type": "string",
            "description": "The type of the promotion message. Available values :promotionTitle, messageTitle, messageBody, messageCDU, messageTerminal"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "if version is not passed the latest message version will be searched"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "$ref": "#/definitions/GetMessageTextReply"
            }
          },
          "default":
          {
            "description": "unexpected error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/outcomes":
    {
      "get":
      {
        "summary": "Query awarded outcomes",
        "description": "Query awarded outcomes. Either xactionid or outcomeid is required.",
        "tags": [
          "outcomes"
        ],
        "operationId": "getPromotionsOutcomes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "SerialNumber",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "SerialNumber"
          },
          {
            "name": "Channel",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "Channel"
          },
          {
            "name": "Retailer",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Retailer"
          },
          {
            "name": "Terminal",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Terminal"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "transaction id"
          },
          {
            "name": "outcomeid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "outcome id"
          },
          {
            "name": "voucherid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "voucher code"
          },
          {
            "name": "game",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "game id"
          },
          {
            "name": "draw",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "draw id"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "category id"
          },
          {
            "name": "promotionTypes",
            "in": "query",
            "required": false,
            "description": "Filter by promotion types",
            "collectionFormat": "csv",
            "uniqueItems": true,
            "type": "array",
            "items":
            {
              "type": "string",
              "enum": [
                "BUYXGETY",
                "NTICKET",
                "IW",
                "SC",
                "SCD",
                "NSVOUCHER",
                "SVOUCHER",
                "VALIDATE",
                "EXTERNAL",
                "ESVOUCHER",
                "WAGERUPGRADE",
                "SD"
              ]
            }
          },
          {
            "name": "outcomeTypes",
            "in": "query",
            "required": false,
            "description": "Filter by outcomes types",
            "collectionFormat": "csv",
            "uniqueItems": true,
            "type": "array",
            "items":
            {
              "type": "string",
              "enum": [
                "CashoutTurnover",
                "RebateDiscount",
                "BonusMoney",
                "RealMoney",
                "FreeBets",
                "NormalBets",
                "Vouchers",
                "Gifts",
                "IncrMultipleDraws",
                "SecondChanceTickets",
                "SecondChanceDrawTickets",
                "EmptyOutcome",
                "Upgrade",
                "SpecialDrawTickets",
                "NonWin",
                "ExtendedFreeBets"
              ]
            }
          },
          {
            "name": "promotionIds",
            "in": "query",
            "required": false,
            "description": "Filter by promotions IDs",
            "collectionFormat": "csv",
            "uniqueItems": true,
            "type": "array",
            "items":
            {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/OutcomeReply"
              }
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete":
      {
        "description": "Undo redeem an outcome",
        "summary": "Undo redeem an outcome",
        "tags": [
          "outcomes"
        ],
        "operationId": "deletePromotionsOutcomes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "outcomeid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "uint64",
            "description": "outcome id"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "xaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put":
      {
        "description": "Redeem an outcome",
        "summary": "Redeem an outcome",
        "tags": [
          "outcomes"
        ],
        "operationId": "putPromotionsOutcomes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "outcomeid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "uint64",
            "description": "outcome id"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "transaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "$ref": "#/definitions/PromoReply"
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/outcomes/claim":
    {
      "put":
      {
        "description": "Retrieve HW code",
        "summary": "Retrieve HW code",
        "tags": [
          "claims"
        ],
        "operationId": "putPromotionsOutcomesClaims",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "outcomeid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "uint64",
            "description": "outcome id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "Operator",
            "in": "header",
            "required": true,
            "type": "integer",
            "description": "Operator"
          },
          {
            "name": "Channel",
            "in": "header",
            "required": true,
            "type": "integer",
            "description": "Channel"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to retrieve HW code",
            "required": true,
            "schema":
            {
              "$ref": "#/definitions/ClaimIncoming"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "$ref": "#/definitions/ClaimResponse"
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/outcomes/claim/paid":
    {
      "put":
      {
        "description": "Redeem HW Real Money",
        "summary": "Mark paid a claim and redeemed a real money outcome",
        "tags": [
          "claims"
        ],
        "operationId": "putPromotionsOutcomesClaimPaid",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "outcomeid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "uint64",
            "description": "outcome id"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "transaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/outcomes/verifycancel":
    {
      "get":
      {
        "description": "Verify if a outcome can be cancelled.",
        "summary": "Verify if a outcome can be cancelled.",
        "tags": [
          "outcomes"
        ],
        "operationId": "verifyCancelPromotion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64_t",
            "description": "transaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success"
          },
          "500":
          {
            "description": "Error - Item cannot be canceled"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/outcomes/verifyundocancel":
    {
      "get":
      {
        "description": "Verify if a outcome can be undo cancelled.",
        "summary": "Verify if a outcome can be undo cancelled.",
        "tags": [
          "outcomes"
        ],
        "operationId": "verifyUndoCancelPromotion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64_t",
            "description": "transaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success"
          },
          "500":
          {
            "description": "Error - Item cannot be canceled"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/promotions":
    {
      "get":
      {
        "description": "get promotions from database",
        "summary": "get promotions from database",
        "tags": [
          "promotions"
        ],
        "operationId": "getPromotions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspension",
              "Terminated",
              "Invalid",
              "Draft",
              "ActivationFailed"
            ],
            "description": "promo status"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BUYXGETY",
              "NTICKET",
              "IW",
              "SC",
              "SCD",
              "NSVOUCHER",
              "SVOUCHER",
              "VALIDATE",
              "EXTERNAL",
              "ESVOUCHER",
              "SD"
            ]
          },
          {
            "name": "outcomeType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CashoutTurnover",
              "RebateDiscount",
              "BonusMoney",
              "RealMoney",
              "FreeBets",
              "NormalBets",
              "Vouchers",
              "Gifts",
              "IncrMultipleDraws",
              "SecondChanceTickets",
              "SecondChanceDrawTickets",
              "EmptyOutcome",
              "Upgrade",
              "SpecialDrawTickets",
              "NonWin",
              "ExtendedFreeBets"
            ]
          },
          {
            "name": "tkey[]",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "type": "array",
            "items":
            {
              "type": "string"
            },
            "description": "array of trigger keys"
          },
          {
            "name": "tval[]",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "type": "array",
            "items":
            {
              "type": "string"
            },
            "description": "array of trigger values"
          },
          {
            "name": "trel[]",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "type": "array",
            "items":
            {
              "type": "string",
              "enum": [
                "Equal",
                "NotEqual",
                "Bigger",
                "Smaller",
                "BiggerEqual",
                "SmallerEqual",
                "NotExist"
              ]
            },
            "description": "array of trigger relations"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "promotion id"
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "operator"
          },
          {
            "name": "client",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "client"
          },
          {
            "name": "channels",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "comma separated list of channels"
          },
          {
            "name": "voucherCode",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "filter by voucher code"
          },
          {
            "name": "serialNumber",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "filter by voucher serial number"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/GetPromotionReply"
              }
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post":
      {
        "description": "evaluate a promotion",
        "summary": "evaluate a promotion",
        "tags": [
          "promotions"
        ],
        "operationId": "postPromotions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "play",
              "voucher",
              "validation",
              "external"
            ],
            "type": "string",
            "description": "The type of evaluation, default play"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "transaction id"
          },
          {
            "name": "Operator",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Operator"
          },
          {
            "name": "Client",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Client"
          },
          {
            "name": "Channel",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Channel"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "outcomeid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "transaction id"
          },
          {
            "name": "voucherid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "voucher id"
          },
          {
            "name": "serialNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "NSV voucher serial number - if not used voucherid"
          },
          {
            "name": "Retailer",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Retailer"
          },
          {
            "name": "Terminal",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Terminal"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "PlayerId"
          },
          {
            "name": "PlayerType",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "PlayerType"
          },
          {
            "name": "TerminalType",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "TerminalType"
          },
          {
            "name": "ParticipationMethod",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "string",
            "description": "ParticipationMethod"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to verify promotion",
            "required": true,
            "schema":
            {
              "$ref": "#/definitions/PromotionBody"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/PromoReply"
              }
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete":
      {
        "description": "Cancel awarded outcomes. Either use only xactionid to cancel outcomes awarded from regular plays. Or use {xactionid, game, draw, category} to cancel outcome awarded by validation promotion.",
        "summary": "Cancel awarded outcomes",
        "tags": [
          "promotions"
        ],
        "operationId": "cancelPromotion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64_t",
            "description": "transaction id"
          },
          {
            "name": "game",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "game id - Required only to cancel outcome from validation promotion"
          },
          {
            "name": "draw",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "draw id - Required only to cancel outcome from validation promotion"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "uint32",
            "description": "category id - Required only to cancel outcome from validation promotion"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/promotions/internal":
    {
      "delete":
      {
        "description": "Undo Cancel awarded outcomes.",
        "summary": "Undo Cancel awarded outcomes",
        "tags": [
          "promotions"
        ],
        "operationId": "undoCancelPromotion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64_t",
            "description": "transaction id"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success"
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/promotions/verification":
    {
      "post":
      {
        "description": "evaluate a promotion",
        "summary": "evaluate a promotion",
        "tags": [
          "promotions"
        ],
        "operationId": "postPromotionsVerification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "play",
              "voucher"
            ],
            "type": "string",
            "description": "The type of evaluation"
          },
          {
            "name": "xactionid",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "transaction id"
          },
          {
            "name": "Operator",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Operator"
          },
          {
            "name": "Client",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Client"
          },
          {
            "name": "Channel",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Channel"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          },
          {
            "name": "outcomeid",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "transaction id"
          },
          {
            "name": "voucherid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "voucher code"
          },
          {
            "name": "serialNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "NSV voucher serial number - if not used voucherid"
          },
          {
            "name": "Retailer",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Retailer"
          },
          {
            "name": "Terminal",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Terminal"
          },
          {
            "name": "PlayerId",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "PlayerId"
          },
          {
            "name": "PlayerType",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "PlayerType"
          },
          {
            "name": "TerminalType",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "TerminalType"
          },
          {
            "name": "ParticipationMethod",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "string",
            "description": "ParticipationMethod"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to verify promotion",
            "required": true,
            "schema":
            {
              "$ref": "#/definitions/PromotionBody"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/PromoReply"
              }
            },
            "examples": {}
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/promotions/{promoId}/draw":
    {
      "post":
      {
        "description": "Conduct Draw",
        "summary": "Conduct Draw",
        "tags": [
          "promotions"
        ],
        "operationId": "postConductDraw",
        "parameters": [
          {
            "name": "promoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The promotion id to conduct draw"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request"
          },
          "default":
          {
            "description": "unexpected error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/promotions/retailer/happyhours/{retailerId}":
    {
      "get":
      {
        "description": "Info/messages for a specific promotions",
        "summary": "Info/messages for a specific promotions",
        "tags": [
          "promotions"
        ],
        "operationId": "getRetailerHappyhoursByRetailerId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The id of the retailer to retrieve hours and messages"
          },
          {
            "name": "Guid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Guid"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Expected response to a valid request",
            "schema":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/GetHappyHoursReply"
              }
            },
            "examples": {}
          },
          "default":
          {
            "description": "unexpected error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/errors":
    {
      "get":
      {
        "description": "Return a list of all application errors",
        "summary": "Return a list of all application errors",
        "tags": [
          "errors"
        ],
        "produces": [
          "application/json"
        ],
        "responses":
        {
          "200":
          {
            "description": "Application errors successfully retrieved",
            "schema":
            {
              "$ref": "#/definitions/GetErrorsReply"
            }
          },
          "default":
          {
            "description": "Error",
            "schema":
            {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions":
  {
    "Error":
    {
      "title": "Error",
      "type": "object",
      "required": [
        "code",
        "message",
        "source",
        "type",
        "guid"
      ],
      "properties":
      {
        "code":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "message":
        {
          "description": "",
          "type": "string"
        },
        "source":
        {
          "description": "",
          "type": "string"
        },
        "type":
        {
          "description": "",
          "type": "string"
        },
        "guid":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ErrorItemReply":
    {
      "title": "ErrorItemReply",
      "type": "object",
      "properties":
      {
        "code":
        {
          "description": "Error code identifier",
          "type": "integer",
          "format": "int32"
        },
        "message":
        {
          "description": "Error message",
          "type": "string"
        }
      }
    },
    "GetErrorsReply":
    {
      "title": "GetErrorsReply",
      "type": "object",
      "properties":
      {
        "source":
        {
          "description": "Name of source application",
          "type": "string"
        },
        "items":
        {
          "description": "Array of error items",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/ErrorItemReply"
          }
        }
      }
    },
    "GetMessageTextReply":
    {
      "title": "GetMessageTextReply",
      "type": "object",
      "properties":
      {
        "message":
        {
          "description": "",
          "type": "string"
        }
      }
    },
    "Message":
    {
      "title": "Message",
      "type": "object",
      "properties":
      {
        "text":
        {
          "description": "",
          "type": "string"
        },
        "type":
        {
          "type": "string",
          "enum": [
            "promotionTitle",
            "messageTitle",
            "messageBody",
            "messageCDU",
            "messageTerminal"
          ]
        },
        "version":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetHappyHoursReply":
    {
      "title": "GetHappyHoursReply",
      "type": "object",
      "properties":
      {
        "promotionId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "messages":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/Message"
          }
        },
        "timeRanges":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/TimeRanges"
          }
        }
      }
    },
    "TimeRanges":
    {
      "title": "TimeRanges",
      "type": "object",
      "properties":
      {
        "days":
        {
          "type": "string",
          "enum": [
            "MON",
            "TUE",
            "WED",
            "THU",
            "FRI",
            "SAT",
            "SUN"
          ]
        },
        "times":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/TimeInterval"
          }
        }
      }
    },
    "TimeInterval":
    {
      "title": "TimeInterval",
      "type": "object",
      "properties":
      {
        "from":
        {
          "description": "",
          "type": "string"
        },
        "to":
        {
          "description": "",
          "type": "string"
        }
      }
    },
    "OutcomeReply":
    {
      "title": "OutcomeReply",
      "type": "object",
      "properties":
      {
        "outcomeId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "transactionId":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "createDate":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "redeemDate":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "cancelDate":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "purgeDate":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "status":
        {
          "description": "",
          "type": "string",
          "enum": [
            "Free",
            "Redeemed",
            "Cancelled",
            "Used"
          ]
        },
        "promotionId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "promotionOutcomeId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "outcomeType":
        {
          "type": "string",
          "enum": [
            "CashoutTurnover",
            "RebateDiscount",
            "BonusMoney",
            "RealMoney",
            "FreeBets",
            "NormalBets",
            "Vouchers",
            "Gifts",
            "IncrMultipleDraws",
            "SecondChanceTickets",
            "SecondChanceDrawTickets",
            "EmptyOutcome",
            "Upgrade",
            "SpecialDrawTickets",
            "NonWin",
            "ExtendedFreeBets"
          ]
        },
        "promotionType":
        {
          "type": "string",
          "enum": [
            "BUYXGETY",
            "NTICKET",
            "IW",
            "SC",
            "SCD",
            "NSVOUCHER",
            "SVOUCHER",
            "VALIDATE",
            "EXTERNAL",
            "ESVOUCHER",
            "WAGERUPGRADE",
            "SD"
          ]
        },
        "playerId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "operatorId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "channelId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "redeemId":
        {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "voucherCode":
        {
          "description": "",
          "type": "string"
        },
        "isRaffle":
        {
          "description": "",
          "type": "boolean"
        },
        "outcomeMetaData":
        {
          "$ref": "#/definitions/OutcomeMetaData"
        }
      }
    },
    "CreateVouchers":
    {
      "type": "object",
      "properties":
      {
        "serialized":
        {
          "title": "Serialized",
          "type": "object",
          "properties":
          {
            "count":
            {
              "description": "",
              "type": "integer",
              "format": "uint32_t"
            },
            "prefix":
            {
              "description": "",
              "type": "string"
            }
          }
        }
      }
    },
    "GetPromotionReply":
    {
      "title": "GetPromotionReply",
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "name":
        {
          "description": "",
          "type": "string"
        },
        "description":
        {
          "description": "",
          "type": "string"
        },
        "startDate":
        {
          "description": "",
          "type": "string"
        },
        "endDate":
        {
          "description": "",
          "type": "string"
        },
        "budget":
        {
          "description": "",
          "type": "string"
        },
        "priority":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "purgeDate":
        {
          "description": "",
          "type": "string"
        },
        "status":
        {
          "description": "",
          "type": "string"
        },
        "type":
        {
          "description": "",
          "type": "string"
        },
        "style":
        {
          "description": "",
          "type": "string"
        },
        "repeat":
        {
          "description": "",
          "type": "boolean"
        },
        "optIn":
        {
          "description": "",
          "type": "boolean"
        },
        "operator":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "client":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "channels":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "type": "integer",
            "format": "uint32"
          }
        },
        "playerSegments":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "type": "integer",
            "format": "uint32"
          }
        },
        "playerLimit":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "player":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "terminal":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "isRaffle":
        {
          "description": "has value true only when the records refers to a SCD raffle",
          "type": "boolean"
        },
        "outcomes":
        {
          "type": "array",
          "items":
          {
            "type": "object",
            "properties":
            {
              "id":
              {
                "description": "outcome id",
                "type": "integer",
                "format": "uint64"
              },
              "limit":
              {
                "description": "outcome limit",
                "type": "integer",
                "format": "uint32"
              },
              "playerLimit":
              {
                "description": "player limit",
                "type": "integer",
                "format": "uint32"
              },
              "type":
              {
                "description": "player limit",
                "type": "string",
                "enum": [
                  "CashoutTurnover",
                  "RebateDiscount",
                  "BonusMoney",
                  "RealMoney",
                  "FreeBets",
                  "NormalBets",
                  "Vouchers",
                  "Gifts",
                  "IncrMultipleDraws",
                  "SecondChanceTickets",
                  "SecondChanceDrawTickets",
                  "EmptyOutcome",
                  "Upgrade"
                ]
              },
              "payload":
              {
                "description": "the UI definition of the outcome, returns a free form json value",
                "type": "object"
              }
            }
          }
        }
      }
    },
    "PromotionBody":
    {
      "title": "PromotionBody",
      "type": "object",
      "properties":
      {
        "metaData":
        {
          "$ref": "#/definitions/InputMetaData"
        },
        "payload":
        {
          "type": "array",
          "items":
          {
            "type": "object"
          }
        }
      }
    },
    "InputMetaData":
    {
      "title": "InputMetaData",
      "type": "object",
      "properties":
      {
        "cost":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "type": "number",
            "format": "double"
          }
        },
        "handlingFee":
        {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "optIn":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "type": "integer",
            "format": "uint32"
          }
        },
        "successes":
        {
          "description": "Mandatory only in type validation",
          "type": "integer",
          "format": "int32"
        },
        "spots":
        {
          "description": "Mandatory only in type validation",
          "type": "integer",
          "format": "int32"
        },
        "game":
        {
          "description": "Mandatory only in type validation",
          "type": "integer",
          "format": "uint32"
        },
        "draw":
        {
          "description": "Mandatory only in type validation",
          "type": "integer",
          "format": "uint32"
        },
        "category":
        {
          "description": "Mandatory only in type validation",
          "type": "integer",
          "format": "uint32"
        },
        "groupingParameters":
        {
          "description": "",
          "type": "object",
          "properties":
          {
            "gameId":
            {
              "type": "integer",
              "format": "int32"
            },
            "minBoards":
            {
              "type": "integer",
              "format": "int32"
            },
            "maxBoards":
            {
              "type": "integer",
              "format": "int32"
            },
            "maxColumns":
            {
              "type": "integer",
              "format": "int32"
            },
            "minGeneralMultiplier":
            {
              "type": "integer",
              "format": "int32"
            },
            "maxGeneralMultiplier":
            {
              "type": "integer",
              "format": "int32"
            },
            "minConsecutiveDraws":
            {
              "type": "integer",
              "format": "int32"
            },
            "maxConsecutiveDraws":
            {
              "type": "integer",
              "format": "int32"
            },
            "panelRuleData":
            {
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/PanelRuleData"
              }
            }
          }
        },
        "playerSegments":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "type": "integer",
            "format": "int32"
          }
        },
        "bundle":
        {
          "type": "object",
          "properties":
          {
            "id":
            {
              "description": "bundle id",
              "type": "integer",
              "format": "int32"
            },
            "session":
            {
              "description": "bundle session",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "required": [
        "cost"
      ]
    },
    "PanelRuleData":
    {
      "title": "PanelRuleData",
      "properties":
      {
        "minSelection":
        {
          "type": "integer",
          "format": "int32"
        },
        "maxSelection":
        {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PromoReply":
    {
      "title": "PromoReply",
      "type": "object",
      "properties":
      {
        "promotionId":
        {
          "description": "The numeric value of the promotion that offers the outcome(s)",
          "type": "integer",
          "format": "int32"
        },
        "promotionType":
        {
          "type": "string",
          "description": "A string literal representing the promotion type that offers the outcome(s)",
          "enum": [
            "BUYXGETY",
            "NTICKET",
            "IW",
            "SC",
            "SCD",
            "NSVOUCHER",
            "SVOUCHER",
            "VALIDATE",
            "EXTERNAL",
            "ESVOUCHER",
            "WAGERUPGRADE",
            "SD"
          ]
        },
        "maxRedemptionDate":
        {
          "type": "number",
          "format": "int64",
          "description": "Numeric value representing the purge date of the outcome"
        },
        "outcomeId":
        {
          "description": "The ID of the given outcome",
          "type": "integer",
          "format": "int32"
        },
        "outcomeType":
        {
          "type": "string",
          "description": "A string literal representing the outcome type that offers the outcome",
          "enum": [
            "CashoutTurnover",
            "RebateDiscount",
            "BonusMoney",
            "RealMoney",
            "FreeBets",
            "NormalBets",
            "Vouchers",
            "Gifts",
            "IncrMultipleDraws",
            "SecondChanceTickets",
            "SecondChanceDrawTickets",
            "EmptyOutcome",
            "Upgrade",
            "SpecialDrawTickets",
            "NonWin",
            "ExtendedFreeBets"
          ]
        },
        "outcomeMetaData":
        {
          "$ref": "#/definitions/OutcomeMetaData"
        },
        "isRaffle":
        {
          "type": "boolean",
          "description": "This flag is true only when the raffle ticket is redeemed. if not true, the field is not returned"
        },
        "messages":
        {
          "description": "Optional structure that encapsulates messages defined for the promotionId",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/Message"
          }
        }
      },
      "required": [
        "promotionId",
        "promotionType",
        "outcomeId",
        "outcomeType",
        "outcomeMetaData"
      ]
    },
    "OutcomeMetaData":
    {
      "title": "OutcomeMetaData",
      "type": "object",
      "properties":
      {
        "EmptyOutcome":
        {
          "type": "object",
          "properties":
          {
            "Value": {}
          }
        },
        "RebateDiscount":
        {
          "type": "object",
          "properties":
          {
            "Type":
            {
              "type": "string",
              "enum": [
                "Percentage",
                "Amount"
              ]
            },
            "Value":
            {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "Percentage":
            {
              "description": "only when Type is Percentage",
              "type": "number"
            },
            "GameId":
            {
              "description": "target Game ID where outcome should be applied - 0 when multiple triggered games",
              "type": "integer",
              "format": "int32"
            },
            "Games":
            {
              "description": "triggered Game IDs where outcome should be applied",
              "type": "array",
              "items":
              {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": [
            "Type",
            "Value",
            "GameId",
            "Games"
          ]
        },
        "IncrMultiDraws":
        {
          "$ref": "#/definitions/OutcomeIncrMultiDraws"
        },
        "BonusMoney":
        {
          "$ref": "#/definitions/OutcomeBonusMoney"
        },
        "RealMoney":
        {
          "type": "object",
          "properties":
          {
            "Type":
            {
              "type": "string",
              "enum": [
                "Percentage",
                "Amount"
              ]
            },
            "Value":
            {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "winDetails":
            {
              "description": "",
              "type": "object",
              "properties":
              {
                "grossAmount":
                {
                  "type": "number",
                  "format": "double"
                },
                "netAmount":
                {
                  "type": "number",
                  "format": "double"
                },
                "taxAmount":
                {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "required": [
            "Type",
            "Value",
            "winDetails"
          ]
        },
        "CashOutTurnover":
        {
          "$ref": "#/definitions/OutcomeCashOutTurnover"
        },
        "SecondChanceDrawTickets":
        {
          "type": "object",
          "properties":
          {
            "secondChanceDrawTicket":
            {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "Gifts":
        {
          "type": "object",
          "properties":
          {
            "SerialNumber":
            {
              "description": "",
              "type": "string"
            },
            "Value":
            {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "Description":
            {
              "description": "",
              "type": "string"
            }
          },
          "required": [
            "SerialNumber",
            "Value"
          ]
        },
        "NormalBets":
        {
          "$ref": "#/definitions/OutcomeNormalBets"
        },
        "FreeBets":
        {
          "$ref": "#/definitions/OutcomeFreeBets"
        },
        "ExtendedFreeBets":
        {
          "$ref": "#/definitions/OutcomeFreeBetsExtended"
        },
        "Upgrade":
        {
          "$ref": "#/definitions/OutcomeUpgrade"
        },
        "Vouchers":
        {
          "type": "object",
          "properties":
          {
            "voucherCode":
            {
              "description": "",
              "type": "string"
            },
            "promotionReferenceId":
            {
              "description": "",
              "type": "integer"
            },
            "startDate":
            {
              "description": "",
              "type": "number",
              "format": "int64"
            },
            "endDate":
            {
              "description": "",
              "type": "number",
              "format": "int64"
            },
            "maxRedemptionDate":
            {
              "description": "",
              "type": "number",
              "format": "int64"
            },
            "nonSerializedCount":
            {
              "description": "only for NSVOUCHER",
              "type": "integer"
            },
            "nonSerializedVoucherCode":
            {
              "description": "only for NSVOUCHER",
              "type": "string"
            },
            "serializedCount":
            {
              "description": "only for SVOUCHER",
              "type": "integer"
            },
            "serializedPrefix":
            {
              "description": "only for SVOUCHER",
              "type": "string"
            },
            "type":
            {
              "description": "",
              "type": "string",
              "enum": [
                "NSVOUCHER",
                "SVOUCHER"
              ]
            },
            "promotionOutcome":
            {
              "description": "Type of outcome",
              "type": "array",
              "items":
              {
                "$ref": "#/definitions/OutcomeMetaData"
              }
            }
          }
        }
      }
    },
    "OutcomeIncrMultiDraws":
    {
      "title": "OutcomeIncrMultiDraws",
      "type": "object",
      "description": "Either PcgDraws or NumDraws is mandatory - not both.",
      "properties":
      {
        "PcgDraws":
        {
          "description": "Percentage on the original multiple draws value",
          "type": "number",
          "format": "double"
        },
        "NumDraws":
        {
          "description": "Number of draws to increase",
          "type": "integer",
          "format": "int32"
        },
        "GameId":
        {
          "description": "optional target Game ID where outcome should be applied",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OutcomeBonusMoney":
    {
      "title": "OutcomeBonusMoney",
      "type": "object",
      "properties":
      {
        "Type":
        {
          "type": "string",
          "enum": [
            "Percentage",
            "Amount"
          ]
        },
        "Value":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "Type",
        "Value"
      ]
    },
    "OutcomeCashOutTurnover":
    {
      "title": "OutcomeCashOutTurnover",
      "type": "object",
      "properties":
      {
        "Type":
        {
          "type": "string",
          "enum": [
            "Percentage",
            "Amount"
          ]
        },
        "Value":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "Type",
        "Value"
      ]
    },
    "OutcomeNormalBets":
    {
      "title": "OutcomeNormalBets",
      "type": "object",
      "properties":
      {
        "GameId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "NumFreeBets":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "NumGroups":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "NumMultipleDraws":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "Optional":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/OutcomeOptionalFields"
          }
        }
      },
      "required": [
        "GameId",
        "NumFreeBets",
        "NumGroups",
        "NumMultipleDraws"
      ]
    },
    "OutcomeOptionalFields":
    {
      "title": "OutcomeOptionalFields",
      "type": "object",
      "properties":
      {
        "name":
        {
          "description": "",
          "type": "string"
        },
        "type":
        {
          "description": "",
          "type": "string"
        },
        "value":
        {
          "description": "",
          "type": "string"
        }
      }
    },
    "OutcomeFreeBets":
    {
      "title": "FreeBets",
      "type": "object",
      "properties":
      {
        "GameId":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "Multiplier":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "BoardsMultiplier":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "NumGroups":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "NumMultipleDraws":
        {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "Spots":
        {
          "description": "Used only in Keno games family",
          "type": "integer",
          "format": "int32"
        },
        "Cost":
        {
          "description": "optional cost",
          "type": "number",
          "format": "double"
        },
        "Bonus":
        {
          "description": "Used only in Keno games family",
          "type": "boolean"
        },
        "Optional":
        {
          "description": "",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/OutcomeOptionalFields"
          }
        }
      },
      "required": [
        "GameId",
        "Multiplier",
        "BoardsMultiplier",
        "NumGroups",
        "NumMultipleDraws"
      ]
    },
    "OutcomeFreeBetsExtended":
    {
      "type": "object",
      "properties":
      {
        "Multiplier":
        {
          "type": "integer",
          "format": "int32"
        },
        "MultipleDraws":
        {
          "type": "integer",
          "format": "int32"
        },
        "Optional":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/OutcomeOptionalFields"
          }
        },
        "GameId":
        {
          "type": "integer",
          "format": "int32"
        },
        "Boards":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/FreeBetBoardModel"
          }
        }
      }
    },
    "FreeBetBoardModel":
    {
      "type": "object",
      "properties":
      {
        "Bonus":
        {
          "type": "boolean"
        },
        "Spots":
        {
          "type": "integer",
          "format": "int32"
        },
        "Multiplier":
        {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OutcomeUpgrade":
    {
      "type": "object",
      "properties":
      {
        "GameId":
        {
          "type": "integer",
          "format": "int32"
        },
        "BetType":
        {
          "type": "integer",
          "format": "int32"
        },
        "UpgradeType":
        {
          "type": "string",
          "enum": [
            "boards",
            "multiplier",
            "draws",
            "game"
          ]
        },
        "UpgradeValue":
        {
          "type": "integer",
          "format": "int32"
        },
        "Spot":
        {
          "type": "integer",
          "format": "int32"
        },
        "SystemId":
        {
          "type": "integer",
          "format": "int32"
        },
        "ProductId":
        {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "GameId",
        "BetType",
        "UpgradeType",
        "UpgradeValue"
      ]
    },
    "ClaimIncoming":
    {
      "title": "ClaimIncoming",
      "type": "object",
      "properties":
      {
        "voucherSerialNumber":
        {
          "description": "",
          "type": "string"
        },
        "lastName":
        {
          "description": "",
          "type": "string"
        },
        "firstName":
        {
          "description": "",
          "type": "string"
        },
        "address":
        {
          "description": "",
          "type": "string"
        },
        "city":
        {
          "description": "",
          "type": "string"
        },
        "phoneNumberOne":
        {
          "description": "",
          "type": "string"
        },
        "phoneNumberTwo":
        {
          "description": "",
          "type": "string"
        },
        "idType":
        {
          "description": "",
          "type": "number",
          "format": "int32"
        },
        "idNumber":
        {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "voucherSerialNumber",
        "lastName",
        "firstName",
        "phoneNumberOne",
        "idType",
        "idNumber"
      ]
    },
    "ClaimResponse":
    {
      "title": "ClaimResponse",
      "type": "object",
      "properties":
      {
        "paymentId":
        {
          "description": "",
          "type": "number",
          "format": "int64"
        },
        "bankCode":
        {
          "description": "",
          "type": "string"
        }
      }
    }
  }
}
